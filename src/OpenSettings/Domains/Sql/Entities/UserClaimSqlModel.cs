using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Security.Claims;

namespace OpenSettings.Domains.Sql.Entities
{
    /// <summary>
    /// Represents a user-claim entity.
    /// </summary>
    [Table("UserClaims")]
    public class UserClaimSqlModel : EntityBase<int>
    {
        /// <summary>
        /// The claim type.
        /// </summary>
        public string Type { get; set; }

        /// <summary>
        /// The lowercase version of the <see cref="Type"/>, typically used for case-insensitive comparisons.
        /// </summary>
        public string TypeLowercase { get; set; }

        /// <summary>
        /// The claim value.
        /// </summary>
        public string Value { get; set; }

        /// <summary>
        /// The lowercase version of the <see cref="Value"/>, typically used for case-insensitive comparisons.
        /// </summary>
        public string ValueLowercase { get; set; }

        /// <summary>
        /// An url friendly version of the ?, generated by trimming, converting to lowercase,  
        /// and replacing spaces or special characters with hyphens (using <see cref="Extensions.InternalExtensions.ToSlug"/> extension method).
        /// </summary>
        public string Slug { get; set; }

        /// <summary>
        /// The description of the claim.
        /// </summary>
        public string Description { get; set; }

        /// <summary>
        /// The collection of user group-claim mappings assigned to the user claim.
        /// </summary>
        public virtual ICollection<UserGroupClaimMappingModel> GroupClaimMappings { get; set; } = new List<UserGroupClaimMappingModel>();

        /// <summary>
        /// The collection of user role-claim mappings assigned to the user claim.
        /// </summary>
        public virtual ICollection<UserRoleClaimMappingModel> RoleClaimMappings { get; set; } = new List<UserRoleClaimMappingModel>();

        /// <summary>
        /// The collection of user-claim mappings assigned to the user claim.
        /// </summary>
        public virtual ICollection<UserClaimMappingSqlModel> UserClaimMappings { get; set; } = new List<UserClaimMappingSqlModel>();

        /// <summary>
        /// Converts the entity into a <see cref="Claim"/> instance.
        /// </summary>
        /// <returns>A new <see cref="Claim"/> object with the same type and value.</returns>
        public virtual Claim ToClaim()
        {
            return new Claim(Type, Value);
        }

        /// <summary>
        /// Initializes the entity's properties from the given claim.
        /// </summary>
        /// <param name="claim">The claim to extract data from.</param>
        public virtual void InitializeFromClaim(Claim claim)
        {
            Type = claim.Type;
            TypeLowercase = claim.Type.ToLowerInvariant();
            Value = claim.Value;
            ValueLowercase = claim.Value.ToLowerInvariant();
        }
    }
}