using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;

namespace OpenSettings.Domains.Sql.Entities
{
    /// <summary>
    /// Represents a tag entity.
    /// </summary>
    [Table(("Tags"))]
    public class TagSqlModel : EntityBase<int>, IOrderedEntity
    {
        /// <summary>
        /// The name of the tag.
        /// </summary>
        public string Name { get; set; }

        /// <summary>
        /// The lowercase version of the <see cref="Name"/>, typically used for case-insensitive comparisons.
        /// </summary>
        public string NameLowercase { get; set; }

        /// <summary>
        /// An url friendly version of the <see cref="Name"/>, generated by trimming, converting to lowercase,  
        /// and replacing spaces or special characters with hyphens (using <see cref="Extensions.InternalExtensions.ToSlug"/> extension method).
        /// </summary>
        public string Slug { get; set; }

        /// <summary>
        /// The id of the user who created this tag.
        /// </summary>
        public Guid? CreatedById { get; set; }

        /// <summary>
        /// The id of the user who last updated this tag.
        /// </summary>
        public Guid? UpdatedById { get; set; }

        /// <summary>
        /// The sort order of this tag in a list.
        /// </summary>
        public int SortOrder { get; set; }

        /// <summary>
        /// A concurrency token used for tracking changes.  
        /// Helps prevent conflicts during concurrent updates.
        /// </summary>
        public byte[] RowVersion { get; set; } = Array.Empty<byte>();

        /// <summary>
        /// The collection of app-tag mappings assigned to the tag.
        /// </summary>
        public virtual List<AppTagMappingSqlModel> AppTagMappings { get; set; } = new List<AppTagMappingSqlModel>();

        /// <summary>
        /// The user who created this tag.
        /// </summary>
        [ForeignKey(nameof(CreatedById))]
        public virtual UserSqlModel CreatedBy { get; set; }

        /// <summary>
        /// The user who last updated this app group.
        /// </summary>
        [ForeignKey(nameof(UpdatedById))]
        public virtual UserSqlModel UpdatedBy { get; set; }
    }
}