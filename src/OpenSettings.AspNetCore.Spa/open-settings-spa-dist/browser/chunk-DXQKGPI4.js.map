{"version":3,"sources":["src/app/features/app/services/apps.service.ts","node_modules/@angular/material/fesm2022/chips.mjs","node_modules/@angular/material/fesm2022/autocomplete.mjs","src/app/features/app/components/app-update/app-update.component.ts","src/app/features/app/components/app-update/app-update.component.html","src/app/features/app/components/app-create/app-create.component.ts","src/app/features/app/components/app-create/app-create.component.html","src/app/features/app/app-routes.ts","src/app/shared/services/app-identifier-mappings.service.ts","src/app/features/setting/components/identifier-mapping-create/identifier-mapping-create.component.ts","src/app/features/setting/components/identifier-mapping-create/identifier-mapping-create.component.html","src/app/features/setting/services/setting.service.ts","node_modules/@angular/material/fesm2022/button-toggle.mjs","src/app/features/setting/components/setting-copy-to/setting-copy-to.component.ts","src/app/features/setting/components/setting-copy-to/setting-copy-to.component.html","src/app/features/configuration/services/configurations.service.ts","src/app/features/app/services/app-view.service.ts","src/app/shared/components/json-editor/json-editor.component.ts","src/app/shared/components/json-editor/json-editor.component.html","src/app/features/setting/components/setting-create/setting-create.component.ts","src/app/features/setting/components/setting-create/setting-create.component.html","src/app/features/setting-history/services/setting-histories.service.ts","node_modules/@angular/material/fesm2022/checkbox.mjs","src/app/shared/components/json-diff-editor/json-diff-editor.component.ts","src/app/shared/components/json-diff-editor/json-diff-editor.component.html","src/app/features/setting-history/components/setting-history-list/setting-history-list.component.ts","src/app/features/setting-history/components/setting-history-list/setting-history-list.component.html","node_modules/@angular/material/fesm2022/slide-toggle.mjs","src/app/features/setting/components/setting-update/setting-update.component.ts","src/app/features/setting/components/setting-update/setting-update.component.html","src/app/features/setting/components/setting-list/setting-list.component.ts","src/app/features/setting/components/setting-list/setting-list.component.html","src/app/shared/models/service-type.ts","src/app/shared/models/data-access-type.ts","src/app/shared/models/reload-strategy.ts","src/app/features/instance/services/instances.service.ts","src/app/features/instance/components/instance-list/instance-list.component.ts","src/app/features/instance/components/instance-list/instance-list.component.html","node_modules/@angular/material/fesm2022/tabs.mjs","src/app/features/configuration/components/configuration-update/configuration-update.component.ts","src/app/features/configuration/components/configuration-update/configuration-update.component.html","src/app/features/app/components/app-view/app-view.component.ts","src/app/features/app/components/app-view/app-view.component.html","src/app/features/app/components/app-list/app-list.component.ts","src/app/features/app/components/app-list/app-list.component.html","src/app/shared/components/json-editor/json-editor.module.ts","src/app/shared/components/json-diff-editor/json-diff-editor.module.ts","src/app/features/setting-history/setting-history-routing.module.ts","src/app/features/setting-history/setting-history.module.ts","src/app/features/setting/setting-routing.module.ts","src/app/features/setting/setting.module.ts","src/app/features/instance/instance.module.ts","src/app/shared/components/dummy/dummy-child.component.ts","src/app/features/app/app-routing.module.ts","src/app/shared/components/dummy/dummy-module.ts","src/app/features/configuration/configuration-routing.module.ts","src/app/features/configuration/configuration.module.ts","src/app/features/app/app.module.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { catchError, Observable, of, Subject, takeUntil } from 'rxjs';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { WindowService } from '../../../core/services/window.service';\r\nimport { GetAppsRequest } from '../models/get-apps-request';\r\nimport { CreateAppRequest } from '../models/create-app-request';\r\nimport { GetGroupedAppsRequest } from '../models/get-grouped-apps-request';\r\nimport { GetGroupedAppsResponse } from '../models/get-grouped-apps-response';\r\nimport { GetAppResponse } from '../models/get-app-response';\r\nimport { GetAppRequest } from '../models/get-app-request';\r\nimport { UpdateAppRequest } from '../models/update-app-request';\r\nimport { UpdateAppResponse } from '../models/update-app-response';\r\nimport { deleteAppRequest } from '../models/delete-app-request';\r\nimport { GetGroupedAppDataRequest } from '../models/get-grouped-app-data-request';\r\nimport { CreateAppResponse } from '../models/create-app-response';\r\nimport { IResponse, IResponseAny } from '../../../shared/models/response';\r\nimport { GetGroupedAppDataResponse } from '../models/get-grouped-app-data-response';\r\nimport { GetGroupedAppDataByIdentifierIdRequest } from '../models/get-grouped-app-data-by-identifier-id-request';\r\nimport { GetGroupedAppDataByIdentifierIdResponse } from '../models/get-grouped-app-data-by-identifier-id-response';\r\nimport { GetAppsResponseApp } from '../models/get-apps-response-app';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppsService implements OnDestroy {\r\n  private headers: HttpHeaders = new HttpHeaders();\r\n  private route: string;\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private authService: AuthService,\r\n    windowService: WindowService) {\r\n    this.route = windowService.controllerOptions.route;\r\n    this.authService.isAuthenticated$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(isAuthenticated => {\r\n        this.headers = isAuthenticated\r\n          ? new HttpHeaders({ 'Authorization': `${this.authService.token}` })\r\n          : new HttpHeaders();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  getGroupedApps(request: GetGroupedAppsRequest): Observable<IResponse<GetGroupedAppsResponse>> {\r\n\r\n    let url = this.route + '/v1/apps/grouped';\r\n\r\n    let params = new HttpParams();\r\n\r\n    if (request.groupId) {\r\n      params = params.append(\"groupId\", request.groupId);\r\n    }\r\n\r\n    if (request.searchTerm) {\r\n      params = params.append(\"searchTerm\", request.searchTerm);\r\n    }\r\n\r\n    const queryParams = params.toString()\r\n\r\n    url += queryParams ? '?' + queryParams : '';\r\n\r\n    return this.httpClient.get<IResponse<GetGroupedAppsResponse>>(url, { headers: this.headers });\r\n  }\r\n\r\n  getAppById(request: GetAppRequest): Observable<IResponse<GetAppResponse>> {\r\n\r\n    const url = this.route + '/v1/apps/' + request.appIdOrSlug;\r\n\r\n    return this.httpClient.get<IResponse<GetAppResponse>>(url, { headers: this.headers });\r\n  }\r\n\r\n  getAppBySlug(request: GetAppRequest): Observable<IResponse<GetAppResponse>> {\r\n\r\n    const url = this.route + '/v1/apps/slug/' + request.appIdOrSlug;\r\n\r\n    return this.httpClient.get<IResponse<GetAppResponse>>(url, { headers: this.headers });\r\n  }\r\n\r\n  getApps(request: GetAppsRequest): Observable<IResponse<GetAppsResponseApp[]>> {\r\n\r\n    let url = this.route + '/v1/apps';\r\n\r\n    let params = new HttpParams();\r\n\r\n    if (request.searchTerm) {\r\n      params = params.append(\"searchTerm\", request.searchTerm);\r\n    }\r\n\r\n    const queryParams = params.toString();\r\n\r\n    url += queryParams ? '?' + queryParams : '';\r\n\r\n    return this.httpClient.get<IResponse<GetAppsResponseApp[]>>(url, { headers: this.headers });\r\n  }\r\n\r\n  updateApp(request: UpdateAppRequest): Observable<IResponse<UpdateAppResponse>> {\r\n\r\n    const url = this.route + '/v1/apps/' + request.appId;\r\n\r\n    return this.httpClient.put<IResponse<UpdateAppResponse>>(url, request.body, { headers: this.headers }).pipe(\r\n      catchError((response: HttpErrorResponse) => {\r\n        if (response.status === 409) {\r\n          return of(response.error as IResponse<UpdateAppResponse>);\r\n        }\r\n\r\n        return of();\r\n      })\r\n    );\r\n  }\r\n\r\n  createApp(request: CreateAppRequest): Observable<IResponse<CreateAppResponse>> {\r\n\r\n    let url = this.route + '/v1/apps';\r\n\r\n    return this.httpClient.post<IResponse<CreateAppResponse>>(url, request.body, { headers: this.headers });\r\n  }\r\n\r\n  getGroupedAppDataByAppId(request: GetGroupedAppDataRequest): Observable<IResponse<GetGroupedAppDataResponse>> {\r\n\r\n    const url = this.route + '/v1/apps/' + request.appIdOrSlug + '/grouped';\r\n\r\n    return this.httpClient.get<IResponse<GetGroupedAppDataResponse>>(url, { headers: this.headers });\r\n  }\r\n\r\n  getGroupedAppDataByAppSlug(request: GetGroupedAppDataRequest): Observable<IResponse<GetGroupedAppDataResponse>> {\r\n\r\n    const url = this.route + '/v1/apps/slug/' + request.appIdOrSlug + '/grouped';\r\n\r\n    return this.httpClient.get<IResponse<GetGroupedAppDataResponse>>(url, { headers: this.headers });\r\n  }\r\n\r\n  getGroupedAppDataByAppIdAndIdentifierId(request: GetGroupedAppDataByIdentifierIdRequest): Observable<IResponse<GetGroupedAppDataByIdentifierIdResponse>> {\r\n\r\n    const url = this.route + '/v1/apps/' + request.appIdOrSlug + '/identifiers/' + request.identifierIdOrSlug + '/grouped';\r\n\r\n    return this.httpClient.get<IResponse<GetGroupedAppDataByIdentifierIdResponse>>(url, { headers: this.headers });\r\n  }\r\n\r\n  getGroupedAppDataByAppSlugAndIdentifierSlug(request: GetGroupedAppDataByIdentifierIdRequest): Observable<IResponse<GetGroupedAppDataByIdentifierIdResponse>> {\r\n\r\n    const url = this.route + '/v1/apps/slug/' + request.appIdOrSlug + '/identifiers/' + request.identifierIdOrSlug + '/grouped';\r\n\r\n    return this.httpClient.get<IResponse<GetGroupedAppDataByIdentifierIdResponse>>(url, { headers: this.headers });\r\n  }\r\n\r\n  deleteApp(request: deleteAppRequest): Observable<IResponseAny> {\r\n\r\n    const url = this.route + '/v1/apps/' + request.appId + '?rowVersion=' + encodeURIComponent(request.rowVersion);\r\n\r\n    return this.httpClient.delete<IResponseAny>(url, { headers: this.headers });\r\n  }\r\n}","import * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, numberAttribute, Directive, Inject, Input, EventEmitter, inject, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, ContentChildren, Output, ContentChild, ViewChild, QueryList, forwardRef, Self, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i3 from '@angular/material/core';\nimport { MatRippleLoader, MAT_RIPPLE_GLOBAL_OPTIONS, _ErrorStateTracker, MatCommonModule, MatRippleModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i1$2 from '@angular/material/form-field';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst _c0 = [\"*\", [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c1 = [\"*\", \"mat-chip-avatar, [matChipAvatar]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChip_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChip_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipOption_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 9);\n    i0.ɵɵelement(4, \"path\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MatChipOption_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = \".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary:before{border-color:var(--mdc-chip-outline-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational).mdc-ripple-upgraded--background-focused:before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus:before{border-color:var(--mdc-chip-focus-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary:before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::after{background-color:var(--mdc-chip-hover-state-layer-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:hover .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-surface--hover .mdc-evolution-chip__ripple::before{opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::after{background-color:var(--mdc-chip-selected-hover-state-layer-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:hover .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary.mdc-ripple-surface--hover .mdc-evolution-chip__ripple::before{opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color)}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color)}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color);opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-chip-selected:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color);opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color);opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color)}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background:var(--mat-chip-trailing-action-state-layer-color)}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity)}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity)}.mat-mdc-chip-selected .mat-mdc-chip-remove::after{background:var(--mat-chip-selected-trailing-action-state-layer-color)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-2px;bottom:-2px;left:6px;right:6px;border-radius:50%}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\";\nconst _c3 = [[[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"\", \"matChipEditInput\", \"\"]], \"*\", [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c4 = [\"mat-chip-avatar, [matChipAvatar]\", \"[matChipEditInput]\", \"*\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChipRow_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 0);\n  }\n}\nfunction MatChipRow_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipRow_Conditional_4_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\nfunction MatChipRow_Conditional_4_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\nfunction MatChipRow_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatChipRow_Conditional_4_Conditional_0_Template, 1, 0)(1, MatChipRow_Conditional_4_Conditional_1_Template, 1, 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(0, ctx_r0.contentEditInput ? 0 : 1);\n  }\n}\nfunction MatChipRow_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatChipRow_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵprojection(1, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c5 = [\"*\"];\nconst _c6 = \".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\";\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    separatorKeyCodes: [ENTER]\n  })\n});\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction {\n  /** Whether the action is disabled. */\n  get disabled() {\n    return this._disabled || this._parentChip.disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  /**\n   * Determine the value of the disabled attribute for this chip action.\n   */\n  _getDisabledAttribute() {\n    // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n    // string to indicate that disabled attribute should be included.\n    return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n  }\n  /**\n   * Determine the value of the tabindex attribute for this chip action.\n   */\n  _getTabindex() {\n    return this.disabled && !this._allowFocusWhenDisabled || !this.isInteractive ? null : this.tabIndex.toString();\n  }\n  constructor(_elementRef, _parentChip) {\n    this._elementRef = _elementRef;\n    this._parentChip = _parentChip;\n    /** Whether the action is interactive. */\n    this.isInteractive = true;\n    /** Whether this is the primary action in the chip. */\n    this._isPrimary = true;\n    this._disabled = false;\n    /** Tab index of the action. */\n    this.tabIndex = -1;\n    /**\n     * Private API to allow focusing this chip when it is disabled.\n     */\n    this._allowFocusWhenDisabled = false;\n    if (_elementRef.nativeElement.nodeName === 'BUTTON') {\n      _elementRef.nativeElement.setAttribute('type', 'button');\n    }\n  }\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  _handleClick(event) {\n    if (!this.disabled && this.isInteractive && this._isPrimary) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled && this.isInteractive && this._isPrimary && !this._parentChip._isEditing) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  static {\n    this.ɵfac = function MatChipAction_Factory(t) {\n      return new (t || MatChipAction)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_CHIP));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatChipAction,\n      selectors: [[\"\", \"matChipAction\", \"\"]],\n      hostAttrs: [1, \"mdc-evolution-chip__action\", \"mat-mdc-chip-action\"],\n      hostVars: 9,\n      hostBindings: function MatChipAction_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MatChipAction_click_HostBindingHandler($event) {\n            return ctx._handleClick($event);\n          })(\"keydown\", function MatChipAction_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"tabindex\", ctx._getTabindex())(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx.disabled);\n          i0.ɵɵclassProp(\"mdc-evolution-chip__action--primary\", ctx._isPrimary)(\"mdc-evolution-chip__action--presentational\", !ctx.isInteractive)(\"mdc-evolution-chip__action--trailing\", !ctx._isPrimary);\n        }\n      },\n      inputs: {\n        isInteractive: \"isInteractive\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => value == null ? -1 : numberAttribute(value)],\n        _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\"\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAction, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipAction]',\n      host: {\n        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\n        '[attr.tabindex]': '_getTabindex()',\n        '[attr.disabled]': '_getDisabledAttribute()',\n        '[attr.aria-disabled]': 'disabled',\n        '(click)': '_handleClick($event)',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_CHIP]\n    }]\n  }], {\n    isInteractive: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? -1 : numberAttribute(value)\n      }]\n    }],\n    _allowFocusWhenDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n  static {\n    this.ɵfac = function MatChipAvatar_Factory(t) {\n      return new (t || MatChipAvatar)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatChipAvatar,\n      selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]],\n      hostAttrs: [\"role\", \"img\", 1, \"mat-mdc-chip-avatar\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_CHIP_AVATAR,\n        useExisting: MatChipAvatar\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAvatar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-avatar, [matChipAvatar]',\n      host: {\n        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'img'\n      },\n      providers: [{\n        provide: MAT_CHIP_AVATAR,\n        useExisting: MatChipAvatar\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n  constructor() {\n    super(...arguments);\n    /**\n     * MDC considers all trailing actions as a remove icon,\n     * but we support non-interactive trailing icons.\n     */\n    this.isInteractive = false;\n    this._isPrimary = false;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatChipTrailingIcon_BaseFactory;\n      return function MatChipTrailingIcon_Factory(t) {\n        return (ɵMatChipTrailingIcon_BaseFactory || (ɵMatChipTrailingIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipTrailingIcon)))(t || MatChipTrailingIcon);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatChipTrailingIcon,\n      selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]],\n      hostAttrs: [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-trailing-icon\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_CHIP_TRAILING_ICON,\n        useExisting: MatChipTrailingIcon\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n      host: {\n        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'aria-hidden': 'true'\n      },\n      providers: [{\n        provide: MAT_CHIP_TRAILING_ICON,\n        useExisting: MatChipTrailingIcon\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n  constructor() {\n    super(...arguments);\n    this._isPrimary = false;\n  }\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatChipRemove_BaseFactory;\n      return function MatChipRemove_Factory(t) {\n        return (ɵMatChipRemove_BaseFactory || (ɵMatChipRemove_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipRemove)))(t || MatChipRemove);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatChipRemove,\n      selectors: [[\"\", \"matChipRemove\", \"\"]],\n      hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-remove\", \"mat-mdc-chip-trailing-icon\", \"mat-mdc-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n      hostVars: 1,\n      hostBindings: function MatChipRemove_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-hidden\", null);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_CHIP_REMOVE,\n        useExisting: MatChipRemove\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRemove, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipRemove]',\n      host: {\n        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-mdc-focus-indicator ' + 'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null'\n      },\n      providers: [{\n        provide: MAT_CHIP_REMOVE,\n        useExisting: MatChipRemove\n      }],\n      standalone: true\n    }]\n  }], null, null);\n})();\nlet uid = 0;\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip {\n  _hasFocus() {\n    return this._hasFocusInternal;\n  }\n  /**\n   * The value of the chip. Defaults to the content inside\n   * the `mat-mdc-chip-action-label` element.\n   */\n  get value() {\n    return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n  }\n  set value(value) {\n    this._value = value;\n  }\n  /**\n   * Reference to the MatRipple instance of the chip.\n   * @deprecated Considered an implementation detail. To be removed.\n   * @breaking-change 17.0.0\n   */\n  get ripple() {\n    return this._rippleLoader?.getRipple(this._elementRef.nativeElement);\n  }\n  set ripple(v) {\n    this._rippleLoader?.attachRipple(this._elementRef.nativeElement, v);\n  }\n  constructor(_changeDetectorRef, _elementRef, _ngZone, _focusMonitor, _document, animationMode, _globalRippleOptions, tabIndex) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._focusMonitor = _focusMonitor;\n    this._globalRippleOptions = _globalRippleOptions;\n    /** Emits when the chip is focused. */\n    this._onFocus = new Subject();\n    /** Emits when the chip is blurred. */\n    this._onBlur = new Subject();\n    /** Role for the root of the chip. */\n    this.role = null;\n    /** Whether the chip has focus. */\n    this._hasFocusInternal = false;\n    /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n    this.id = `mat-mdc-chip-${uid++}`;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA label for the content of the chip. */\n    this.ariaLabel = null;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA description for the content of the chip. */\n    this.ariaDescription = null;\n    /** Id of a span that contains this chip's aria description. */\n    this._ariaDescriptionId = `${this.id}-aria-description`;\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    this.removable = true;\n    /**\n     * Colors the chip for emphasis as if it were selected.\n     */\n    this.highlighted = false;\n    /** Whether the ripple effect is disabled or not. */\n    this.disableRipple = false;\n    /** Whether the chip is disabled. */\n    this.disabled = false;\n    /** Tab index of the chip. */\n    this.tabIndex = -1;\n    /** Emitted when a chip is to be removed. */\n    this.removed = new EventEmitter();\n    /** Emitted when the chip is destroyed. */\n    this.destroyed = new EventEmitter();\n    /** The unstyled chip selector for this component. */\n    this.basicChipAttrName = 'mat-basic-chip';\n    /**\n     * Handles the lazy creation of the MatChip ripple.\n     * Used to improve initial load time of large applications.\n     */\n    this._rippleLoader = inject(MatRippleLoader);\n    this._document = _document;\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    if (tabIndex != null) {\n      this.tabIndex = parseInt(tabIndex) ?? -1;\n    }\n    this._monitorFocus();\n    this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n      className: 'mat-mdc-chip-ripple',\n      disabled: this._isRippleDisabled()\n    });\n  }\n  ngOnInit() {\n    // This check needs to happen in `ngOnInit` so the overridden value of\n    // `basicChipAttrName` coming from base classes can be picked up.\n    const element = this._elementRef.nativeElement;\n    this._isBasicChip = element.hasAttribute(this.basicChipAttrName) || element.tagName.toLowerCase() === this.basicChipAttrName;\n  }\n  ngAfterViewInit() {\n    this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n    if (this._pendingFocus) {\n      this._pendingFocus = false;\n      this.focus();\n    }\n  }\n  ngAfterContentInit() {\n    // Since the styling depends on the presence of some\n    // actions, we have to mark for check on changes.\n    this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  ngDoCheck() {\n    this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n    this._actionChanges?.unsubscribe();\n    this.destroyed.emit({\n      chip: this\n    });\n    this.destroyed.complete();\n  }\n  /**\n   * Allows for programmatic removal of the chip.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove() {\n    if (this.removable) {\n      this.removed.emit({\n        chip: this\n      });\n    }\n  }\n  /** Whether or not the ripple should be disabled. */\n  _isRippleDisabled() {\n    return this.disabled || this.disableRipple || this._animationsDisabled || this._isBasicChip || !!this._globalRippleOptions?.disabled;\n  }\n  /** Returns whether the chip has a trailing icon. */\n  _hasTrailingIcon() {\n    return !!(this.trailingIcon || this.removeIcon);\n  }\n  /** Handles keyboard events on the chip. */\n  _handleKeydown(event) {\n    if (event.keyCode === BACKSPACE || event.keyCode === DELETE) {\n      event.preventDefault();\n      this.remove();\n    }\n  }\n  /** Allows for programmatic focusing of the chip. */\n  focus() {\n    if (!this.disabled) {\n      // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n      // This can happen if the consumer tries to focus a chip immediately after it is added.\n      // Queue the method to be called again on init.\n      if (this.primaryAction) {\n        this.primaryAction.focus();\n      } else {\n        this._pendingFocus = true;\n      }\n    }\n  }\n  /** Gets the action that contains a specific target node. */\n  _getSourceAction(target) {\n    return this._getActions().find(action => {\n      const element = action._elementRef.nativeElement;\n      return element === target || element.contains(target);\n    });\n  }\n  /** Gets all of the actions within the chip. */\n  _getActions() {\n    const result = [];\n    if (this.primaryAction) {\n      result.push(this.primaryAction);\n    }\n    if (this.removeIcon) {\n      result.push(this.removeIcon);\n    }\n    if (this.trailingIcon) {\n      result.push(this.trailingIcon);\n    }\n    return result;\n  }\n  /** Handles interactions with the primary action of the chip. */\n  _handlePrimaryActionInteraction() {\n    // Empty here, but is overwritten in child classes.\n  }\n  /** Gets the tabindex of the chip. */\n  _getTabIndex() {\n    if (!this.role) {\n      return null;\n    }\n    return this.disabled ? -1 : this.tabIndex;\n  }\n  /** Starts the focus monitoring process on the chip. */\n  _monitorFocus() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const hasFocus = origin !== null;\n      if (hasFocus !== this._hasFocusInternal) {\n        this._hasFocusInternal = hasFocus;\n        if (hasFocus) {\n          this._onFocus.next({\n            chip: this\n          });\n        } else {\n          // When animations are enabled, Angular may end up removing the chip from the DOM a little\n          // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n          // that moves focus not the next item. To work around the issue, we defer marking the chip\n          // as not focused until the next time the zone stabilizes.\n          this._ngZone.onStable.pipe(take(1)).subscribe(() => this._ngZone.run(() => this._onBlur.next({\n            chip: this\n          })));\n        }\n      }\n    });\n  }\n  static {\n    this.ɵfac = function MatChip_Factory(t) {\n      return new (t || MatChip)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatChip,\n      selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]],\n      contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leadingIcon = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allLeadingIcons = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTrailingIcons = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allRemoveIcons = _t);\n        }\n      },\n      viewQuery: function MatChip_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatChipAction, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.primaryAction = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-chip\"],\n      hostVars: 32,\n      hostBindings: function MatChip_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function MatChip_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-label\", ctx.ariaLabel);\n          i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n          i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-basic-chip\", ctx._isBasicChip)(\"mat-mdc-standard-chip\", !ctx._isBasicChip)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon())(\"_mat-animation-noopable\", ctx._animationsDisabled);\n        }\n      },\n      inputs: {\n        role: \"role\",\n        id: \"id\",\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaDescription: [i0.ɵɵInputFlags.None, \"aria-description\", \"ariaDescription\"],\n        value: \"value\",\n        color: \"color\",\n        removable: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"removable\", \"removable\", booleanAttribute],\n        highlighted: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"highlighted\", \"highlighted\", booleanAttribute],\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => value == null ? undefined : numberAttribute(value)]\n      },\n      outputs: {\n        removed: \"removed\",\n        destroyed: \"destroyed\"\n      },\n      exportAs: [\"matChip\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_CHIP,\n        useExisting: MatChip\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 8,\n      vars: 3,\n      consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"isInteractive\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n      template: function MatChip_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelement(0, \"span\", 0);\n          i0.ɵɵelementStart(1, \"span\", 1)(2, \"span\", 2);\n          i0.ɵɵtemplate(3, MatChip_Conditional_3_Template, 2, 0, \"span\", 3);\n          i0.ɵɵelementStart(4, \"span\", 4);\n          i0.ɵɵprojection(5);\n          i0.ɵɵelement(6, \"span\", 5);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(7, MatChip_Conditional_7_Template, 2, 0, \"span\", 6);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"isInteractive\", false);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(3, ctx.leadingIcon ? 3 : -1);\n          i0.ɵɵadvance(4);\n          i0.ɵɵconditional(7, ctx._hasTrailingIcon() ? 7 : -1);\n        }\n      },\n      dependencies: [MatChipAction],\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary:before{border-color:var(--mdc-chip-outline-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational).mdc-ripple-upgraded--background-focused:before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus:before{border-color:var(--mdc-chip-focus-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary:before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::after{background-color:var(--mdc-chip-hover-state-layer-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:hover .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-surface--hover .mdc-evolution-chip__ripple::before{opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::after{background-color:var(--mdc-chip-selected-hover-state-layer-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:hover .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary.mdc-ripple-surface--hover .mdc-evolution-chip__ripple::before{opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color)}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color)}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color);opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-chip-selected:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color);opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color);opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color)}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background:var(--mat-chip-trailing-action-state-layer-color)}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity)}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity)}.mat-mdc-chip-selected .mat-mdc-chip-remove::after{background:var(--mat-chip-selected-trailing-action-state-layer-color)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-2px;bottom:-2px;left:6px;right:6px;border-radius:50%}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChip, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]',\n      exportAs: 'matChip',\n      host: {\n        'class': 'mat-mdc-chip',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[id]': 'id',\n        '[attr.role]': 'role',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-label]': 'ariaLabel',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_CHIP,\n        useExisting: MatChip\n      }],\n      standalone: true,\n      imports: [MatChipAction],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary:before{border-color:var(--mdc-chip-outline-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational).mdc-ripple-upgraded--background-focused:before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus:before{border-color:var(--mdc-chip-focus-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary:before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::after{background-color:var(--mdc-chip-hover-state-layer-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:hover .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-surface--hover .mdc-evolution-chip__ripple::before{opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::after{background-color:var(--mdc-chip-selected-hover-state-layer-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:hover .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary.mdc-ripple-surface--hover .mdc-evolution-chip__ripple::before{opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color)}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color)}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color);opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-chip-selected:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color);opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color);opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color)}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background:var(--mat-chip-trailing-action-state-layer-color)}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity)}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity)}.mat-mdc-chip-selected .mat-mdc-chip-remove::after{background:var(--mat-chip-selected-trailing-action-state-layer-color)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-2px;bottom:-2px;left:6px;right:6px;border-radius:50%}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.FocusMonitor\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }], {\n    role: [{\n      type: Input\n    }],\n    _allLeadingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_AVATAR, {\n        descendants: true\n      }]\n    }],\n    _allTrailingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_TRAILING_ICON, {\n        descendants: true\n      }]\n    }],\n    _allRemoveIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_REMOVE, {\n        descendants: true\n      }]\n    }],\n    id: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaDescription: [{\n      type: Input,\n      args: ['aria-description']\n    }],\n    value: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    highlighted: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? undefined : numberAttribute(value)\n      }]\n    }],\n    removed: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    leadingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_AVATAR]\n    }],\n    trailingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_TRAILING_ICON]\n    }],\n    removeIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_REMOVE]\n    }],\n    primaryAction: [{\n      type: ViewChild,\n      args: [MatChipAction]\n    }]\n  });\n})();\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n  constructor( /** Reference to the chip that emitted the event. */\n  source, /** Whether the chip that emitted the event is selected. */\n  selected, /** Whether the selection change was a result of a user interaction. */\n  isUserInput = false) {\n    this.source = source;\n    this.selected = selected;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n  constructor() {\n    super(...arguments);\n    /** Default chip options. */\n    this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    /** Whether the chip list is selectable. */\n    this.chipListSelectable = true;\n    /** Whether the chip list is in multi-selection mode. */\n    this._chipListMultiple = false;\n    /** Whether the chip list hides single-selection indicator. */\n    this._chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    this._selectable = true;\n    this._selected = false;\n    /** The unstyled chip selector for this component. */\n    this.basicChipAttrName = 'mat-basic-chip-option';\n    /** Emitted when the chip is selected or deselected. */\n    this.selectionChange = new EventEmitter();\n  }\n  /**\n   * Whether or not the chip is selectable.\n   *\n   * When a chip is not selectable, changes to its selected state are always\n   * ignored. By default an option chip is selectable, and it becomes\n   * non-selectable if its parent chip list is not selectable.\n   */\n  get selectable() {\n    return this._selectable && this.chipListSelectable;\n  }\n  set selectable(value) {\n    this._selectable = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Whether the chip is selected. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._setSelectedState(value, false, true);\n  }\n  /**\n   * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n   * interaction patterns.\n   *\n   * From [WAI ARIA Listbox authoring practices guide](\n   * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n   *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n   *  set to true. All options that are selectable but not selected have either aria-selected or\n   *  aria-checked set to false.\"\n   *\n   * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n   * VoiceOver reading every option as \"selected\" (#25736).\n   */\n  get ariaSelected() {\n    return this.selectable ? this.selected.toString() : null;\n  }\n  ngOnInit() {\n    super.ngOnInit();\n    this.role = 'presentation';\n  }\n  /** Selects the chip. */\n  select() {\n    this._setSelectedState(true, false, true);\n  }\n  /** Deselects the chip. */\n  deselect() {\n    this._setSelectedState(false, false, true);\n  }\n  /** Selects this chip and emits userInputSelection event */\n  selectViaInteraction() {\n    this._setSelectedState(true, true, true);\n  }\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput = false) {\n    this._setSelectedState(!this.selected, isUserInput, true);\n    return this.selected;\n  }\n  _handlePrimaryActionInteraction() {\n    if (!this.disabled) {\n      // Interacting with the primary action implies that the chip already has focus, however\n      // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n      // We work around it by explicitly focusing the primary action of the current chip.\n      this.focus();\n      if (this.selectable) {\n        this.toggleSelected(true);\n      }\n    }\n  }\n  _hasLeadingGraphic() {\n    if (this.leadingIcon) {\n      return true;\n    }\n    // The checkmark graphic communicates selected state for both single-select and multi-select.\n    // Include checkmark in single-select to fix a11y issue where selected state is communicated\n    // visually only using color (#25886).\n    return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n  }\n  _setSelectedState(isSelected, isUserInput, emitEvent) {\n    if (isSelected !== this.selected) {\n      this._selected = isSelected;\n      if (emitEvent) {\n        this.selectionChange.emit({\n          source: this,\n          isUserInput,\n          selected: this.selected\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatChipOption_BaseFactory;\n      return function MatChipOption_Factory(t) {\n        return (ɵMatChipOption_BaseFactory || (ɵMatChipOption_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipOption)))(t || MatChipOption);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatChipOption,\n      selectors: [[\"mat-basic-chip-option\"], [\"\", \"mat-basic-chip-option\", \"\"], [\"mat-chip-option\"], [\"\", \"mat-chip-option\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-option\"],\n      hostVars: 37,\n      hostBindings: function MatChipOption_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n          i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--filter\", !ctx._isBasicChip)(\"mdc-evolution-chip--selectable\", !ctx._isBasicChip)(\"mat-mdc-chip-selected\", ctx.selected)(\"mat-mdc-chip-multiple\", ctx._chipListMultiple)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--selected\", ctx.selected)(\"mdc-evolution-chip--selecting\", !ctx._animationsDisabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-graphic\", ctx._hasLeadingGraphic())(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n        }\n      },\n      inputs: {\n        selectable: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"selectable\", \"selectable\", booleanAttribute],\n        selected: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"selected\", \"selected\", booleanAttribute]\n      },\n      outputs: {\n        selectionChange: \"selectionChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MatChip,\n        useExisting: MatChipOption\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipOption\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 10,\n      vars: 9,\n      consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", \"role\", \"option\", 3, \"tabIndex\", \"_allowFocusWhenDisabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [1, \"mdc-evolution-chip__checkmark\"], [\"viewBox\", \"-2 -3 30 30\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mdc-evolution-chip__checkmark-svg\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-evolution-chip__checkmark-path\"]],\n      template: function MatChipOption_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelement(0, \"span\", 0);\n          i0.ɵɵelementStart(1, \"span\", 1)(2, \"button\", 2);\n          i0.ɵɵtemplate(3, MatChipOption_Conditional_3_Template, 5, 0, \"span\", 3);\n          i0.ɵɵelementStart(4, \"span\", 4);\n          i0.ɵɵprojection(5);\n          i0.ɵɵelement(6, \"span\", 5);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(7, MatChipOption_Conditional_7_Template, 2, 0, \"span\", 6);\n          i0.ɵɵelementStart(8, \"span\", 7);\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"tabIndex\", ctx.tabIndex)(\"_allowFocusWhenDisabled\", true);\n          i0.ɵɵattribute(\"aria-selected\", ctx.ariaSelected)(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(3, ctx._hasLeadingGraphic() ? 3 : -1);\n          i0.ɵɵadvance(4);\n          i0.ɵɵconditional(7, ctx._hasTrailingIcon() ? 7 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate(ctx.ariaDescription);\n        }\n      },\n      dependencies: [MatChipAction],\n      styles: [_c2],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]',\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-option',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n        '[class.mat-mdc-chip-selected]': 'selected',\n        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--selected]': 'selected',\n        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n        // starts and removes it once the animation is finished. We don't need to go through all\n        // the trouble, because we only care about the selection animation. MDC needs to do it,\n        // because they also have an exit animation that we don't care about.\n        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipOption\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipOption\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MatChipAction],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary:before{border-color:var(--mdc-chip-outline-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational).mdc-ripple-upgraded--background-focused:before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus:before{border-color:var(--mdc-chip-focus-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary:before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::after{background-color:var(--mdc-chip-hover-state-layer-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:hover .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-surface--hover .mdc-evolution-chip__ripple::before{opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::after{background-color:var(--mdc-chip-selected-hover-state-layer-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:hover .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary.mdc-ripple-surface--hover .mdc-evolution-chip__ripple::before{opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color)}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color)}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color);opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-chip-selected:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color);opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color);opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color)}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background:var(--mat-chip-trailing-action-state-layer-color)}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity)}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity)}.mat-mdc-chip-selected .mat-mdc-chip-remove::after{background:var(--mat-chip-selected-trailing-action-state-layer-color)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-2px;bottom:-2px;left:6px;right:6px;border-radius:50%}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], null, {\n    selectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selected: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectionChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n  constructor(_elementRef, _document) {\n    this._elementRef = _elementRef;\n    this._document = _document;\n  }\n  initialize(initialValue) {\n    this.getNativeElement().focus();\n    this.setValue(initialValue);\n  }\n  getNativeElement() {\n    return this._elementRef.nativeElement;\n  }\n  setValue(value) {\n    this.getNativeElement().textContent = value;\n    this._moveCursorToEndOfInput();\n  }\n  getValue() {\n    return this.getNativeElement().textContent || '';\n  }\n  _moveCursorToEndOfInput() {\n    const range = this._document.createRange();\n    range.selectNodeContents(this.getNativeElement());\n    range.collapse(false);\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n  static {\n    this.ɵfac = function MatChipEditInput_Factory(t) {\n      return new (t || MatChipEditInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatChipEditInput,\n      selectors: [[\"span\", \"matChipEditInput\", \"\"]],\n      hostAttrs: [\"role\", \"textbox\", \"tabindex\", \"-1\", \"contenteditable\", \"true\", 1, \"mat-chip-edit-input\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipEditInput, [{\n    type: Directive,\n    args: [{\n      selector: 'span[matChipEditInput]',\n      host: {\n        'class': 'mat-chip-edit-input',\n        'role': 'textbox',\n        'tabindex': '-1',\n        'contenteditable': 'true'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n  constructor(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex) {\n    super(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex);\n    this.basicChipAttrName = 'mat-basic-chip-row';\n    /**\n     * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n     * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n     * while the editing action is being initialized.\n     */\n    this._editStartPending = false;\n    this.editable = false;\n    /** Emitted when the chip is edited. */\n    this.edited = new EventEmitter();\n    this._isEditing = false;\n    this.role = 'row';\n    this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      if (this._isEditing && !this._editStartPending) {\n        this._onEditFinish();\n      }\n    });\n  }\n  _hasTrailingIcon() {\n    // The trailing icon is hidden while editing.\n    return !this._isEditing && super._hasTrailingIcon();\n  }\n  /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n  _handleFocus() {\n    if (!this._isEditing && !this.disabled) {\n      this.focus();\n    }\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === ENTER && !this.disabled) {\n      if (this._isEditing) {\n        event.preventDefault();\n        this._onEditFinish();\n      } else if (this.editable) {\n        this._startEditing(event);\n      }\n    } else if (this._isEditing) {\n      // Stop the event from reaching the chip set in order to avoid navigating.\n      event.stopPropagation();\n    } else {\n      super._handleKeydown(event);\n    }\n  }\n  _handleDoubleclick(event) {\n    if (!this.disabled && this.editable) {\n      this._startEditing(event);\n    }\n  }\n  _startEditing(event) {\n    if (!this.primaryAction || this.removeIcon && this._getSourceAction(event.target) === this.removeIcon) {\n      return;\n    }\n    // The value depends on the DOM so we need to extract it before we flip the flag.\n    const value = this.value;\n    this._isEditing = this._editStartPending = true;\n    // Starting the editing sequence below depends on the edit input\n    // query resolving on time. Trigger a synchronous change detection to\n    // ensure that it happens by the time we hit the timeout below.\n    this._changeDetectorRef.detectChanges();\n    // TODO(crisbeto): this timeout shouldn't be necessary given the `detectChange` call above.\n    // Defer initializing the input so it has time to be added to the DOM.\n    setTimeout(() => {\n      this._getEditInput().initialize(value);\n      this._editStartPending = false;\n    });\n  }\n  _onEditFinish() {\n    this._isEditing = this._editStartPending = false;\n    this.edited.emit({\n      chip: this,\n      value: this._getEditInput().getValue()\n    });\n    // If the edit input is still focused or focus was returned to the body after it was destroyed,\n    // return focus to the chip contents.\n    if (this._document.activeElement === this._getEditInput().getNativeElement() || this._document.activeElement === this._document.body) {\n      this.primaryAction.focus();\n    }\n  }\n  _isRippleDisabled() {\n    return super._isRippleDisabled() || this._isEditing;\n  }\n  /**\n   * Gets the projected chip edit input, or the default input if none is projected in. One of these\n   * two values is guaranteed to be defined.\n   */\n  _getEditInput() {\n    return this.contentEditInput || this.defaultEditInput;\n  }\n  static {\n    this.ɵfac = function MatChipRow_Factory(t) {\n      return new (t || MatChipRow)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatChipRow,\n      selectors: [[\"mat-chip-row\"], [\"\", \"mat-chip-row\", \"\"], [\"mat-basic-chip-row\"], [\"\", \"mat-basic-chip-row\", \"\"]],\n      contentQueries: function MatChipRow_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatChipEditInput, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentEditInput = _t.first);\n        }\n      },\n      viewQuery: function MatChipRow_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatChipEditInput, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultEditInput = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-row\", \"mdc-evolution-chip\"],\n      hostVars: 27,\n      hostBindings: function MatChipRow_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatChipRow_focus_HostBindingHandler($event) {\n            return ctx._handleFocus($event);\n          })(\"dblclick\", function MatChipRow_dblclick_HostBindingHandler($event) {\n            return ctx._handleDoubleclick($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n          i0.ɵɵclassProp(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-editing\", ctx._isEditing)(\"mat-mdc-chip-editable\", ctx.editable)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n        }\n      },\n      inputs: {\n        editable: \"editable\"\n      },\n      outputs: {\n        edited: \"edited\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MatChip,\n        useExisting: MatChipRow\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipRow\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c4,\n      decls: 10,\n      vars: 10,\n      consts: [[1, \"mat-mdc-chip-focus-overlay\"], [\"role\", \"gridcell\", \"matChipAction\", \"\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\", 3, \"tabIndex\", \"disabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [\"matChipEditInput\", \"\"]],\n      template: function MatChipRow_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c3);\n          i0.ɵɵtemplate(0, MatChipRow_Conditional_0_Template, 1, 0, \"span\", 0);\n          i0.ɵɵelementStart(1, \"span\", 1);\n          i0.ɵɵtemplate(2, MatChipRow_Conditional_2_Template, 2, 0, \"span\", 2);\n          i0.ɵɵelementStart(3, \"span\", 3);\n          i0.ɵɵtemplate(4, MatChipRow_Conditional_4_Template, 2, 1)(5, MatChipRow_Conditional_5_Template, 1, 0);\n          i0.ɵɵelement(6, \"span\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(7, MatChipRow_Conditional_7_Template, 2, 0, \"span\", 5);\n          i0.ɵɵelementStart(8, \"span\", 6);\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(0, !ctx._isEditing ? 0 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"tabIndex\", ctx.tabIndex)(\"disabled\", ctx.disabled);\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(2, ctx.leadingIcon ? 2 : -1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(4, ctx._isEditing ? 4 : 5);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(7, ctx._hasTrailingIcon() ? 7 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate(ctx.ariaDescription);\n        }\n      },\n      dependencies: [MatChipAction, MatChipEditInput],\n      styles: [_c2],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]',\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-editing]': '_isEditing',\n        '[class.mat-mdc-chip-editable]': 'editable',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[id]': 'id',\n        // Has to have a negative tabindex in order to capture\n        // focus and redirect it to the primary action.\n        '[attr.tabindex]': 'disabled ? null : -1',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '(focus)': '_handleFocus($event)',\n        '(dblclick)': '_handleDoubleclick($event)'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipRow\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipRow\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MatChipAction, MatChipEditInput],\n      template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [tabIndex]=\\\"tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-mdc-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{overflow-x:hidden}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mdc-evolution-chip__action--primary:before{box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1}.mdc-evolution-chip--touch{margin-top:8px;margin-bottom:8px}.mdc-evolution-chip__action-touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}.mdc-evolution-chip__text-label{white-space:nowrap;user-select:none;text-overflow:ellipsis;overflow:hidden}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mdc-evolution-chip__checkmark-background{opacity:0}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__graphic{transition:width 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark{transition:opacity 50ms 0ms linear,transform 100ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--deselecting .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selecting-with-primary-icon .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__icon--primary{transition:opacity 150ms 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark{transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-50%, -50%)}.mdc-evolution-chip--deselecting-with-primary-icon .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@keyframes mdc-evolution-chip-enter{from{transform:scale(0.8);opacity:.4}to{transform:scale(1);opacity:1}}.mdc-evolution-chip--enter{animation:mdc-evolution-chip-enter 100ms 0ms cubic-bezier(0, 0, 0.2, 1)}@keyframes mdc-evolution-chip-exit{from{opacity:1}to{opacity:0}}.mdc-evolution-chip--exit{animation:mdc-evolution-chip-exit 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-evolution-chip--hidden{opacity:0;pointer-events:none;transition:width 150ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip .mdc-evolution-chip__ripple{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-radius:var(--mdc-chip-container-shape-radius)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius)}.mat-mdc-standard-chip.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon){--mdc-chip-graphic-selected-width:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{height:var(--mdc-chip-with-avatar-avatar-size);width:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary:before{border-color:var(--mdc-chip-outline-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational).mdc-ripple-upgraded--background-focused:before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus:before{border-color:var(--mdc-chip-focus-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary:before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-outline-width)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{height:var(--mdc-chip-with-icon-icon-size);width:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::after{background-color:var(--mdc-chip-hover-state-layer-color)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:hover .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-surface--hover .mdc-evolution-chip__ripple::before{opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary .mdc-evolution-chip__ripple::after{background-color:var(--mdc-chip-selected-hover-state-layer-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:hover .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary.mdc-ripple-surface--hover .mdc-evolution-chip__ripple::before{opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary.mdc-ripple-upgraded--background-focused .mdc-evolution-chip__ripple::before,.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary:not(.mdc-ripple-upgraded):focus .mdc-evolution-chip__ripple::before{transition-duration:75ms;opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color)}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color)}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color);opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-chip-selected:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color);opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color);opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color)}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background:var(--mat-chip-trailing-action-state-layer-color)}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity)}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity)}.mat-mdc-chip-selected .mat-mdc-chip-remove::after{background:var(--mat-chip-selected-trailing-action-state-layer-color)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary:before{border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__checkmark{height:20px;width:20px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:6px;padding-right:6px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic[dir=rtl]{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing[dir=rtl]{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing{left:8px;right:initial}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__ripple--trailing[dir=rtl]{left:initial;right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary,.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary[dir=rtl]{padding-left:0;padding-right:0}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-mdc-standard-chip .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary{flex-basis:100%}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-2px;bottom:-2px;left:6px;right:6px;border-radius:50%}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.FocusMonitor\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }], {\n    editable: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    defaultEditInput: [{\n      type: ViewChild,\n      args: [MatChipEditInput]\n    }],\n    contentEditInput: [{\n      type: ContentChild,\n      args: [MatChipEditInput]\n    }]\n  });\n})();\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet {\n  /** Combined stream of all of the child chips' focus events. */\n  get chipFocusChanges() {\n    return this._getChipStream(chip => chip._onFocus);\n  }\n  /** Combined stream of all of the child chips' destroy events. */\n  get chipDestroyedChanges() {\n    return this._getChipStream(chip => chip.destroyed);\n  }\n  /** Combined stream of all of the child chips' remove events. */\n  get chipRemovedChanges() {\n    return this._getChipStream(chip => chip.removed);\n  }\n  /** Whether the chip set is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._syncChipsState();\n  }\n  /** Whether the chip list contains chips or not. */\n  get empty() {\n    return !this._chips || this._chips.length === 0;\n  }\n  /** The ARIA role applied to the chip set. */\n  get role() {\n    if (this._explicitRole) {\n      return this._explicitRole;\n    }\n    return this.empty ? null : this._defaultRole;\n  }\n  set role(value) {\n    this._explicitRole = value;\n  }\n  /** Whether any of the chips inside of this chip-set has focus. */\n  get focused() {\n    return this._hasFocusedChip();\n  }\n  constructor(_elementRef, _changeDetectorRef, _dir) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    /** Index of the last destroyed chip that had focus. */\n    this._lastDestroyedFocusedChipIndex = null;\n    /** Subject that emits when the component has been destroyed. */\n    this._destroyed = new Subject();\n    /** Role to use if it hasn't been overwritten by the user. */\n    this._defaultRole = 'presentation';\n    this._disabled = false;\n    /** Tabindex of the chip set. */\n    this.tabIndex = 0;\n    this._explicitRole = null;\n    /** Flat list of all the actions contained within the chips. */\n    this._chipActions = new QueryList();\n  }\n  ngAfterViewInit() {\n    this._setUpFocusManagement();\n    this._trackChipSetChanges();\n    this._trackDestroyedFocusedChip();\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._chipActions.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Checks whether any of the chips is focused. */\n  _hasFocusedChip() {\n    return this._chips && this._chips.some(chip => chip._hasFocus());\n  }\n  /** Syncs the chip-set's state with the individual chips. */\n  _syncChipsState() {\n    if (this._chips) {\n      this._chips.forEach(chip => {\n        chip.disabled = this._disabled;\n        chip._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n  focus() {}\n  /** Handles keyboard events on the chip set. */\n  _handleKeydown(event) {\n    if (this._originatesFromChip(event)) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  _isValidIndex(index) {\n    return index >= 0 && index < this._chips.length;\n  }\n  /**\n   * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the set from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (this.tabIndex !== -1) {\n      const previousTabIndex = this.tabIndex;\n      this.tabIndex = -1;\n      // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n      // doesn't allow enough time for the focus to escape.\n      setTimeout(() => this.tabIndex = previousTabIndex);\n    }\n  }\n  /**\n   * Gets a stream of events from all the chips within the set.\n   * The stream will automatically incorporate any newly-added chips.\n   */\n  _getChipStream(mappingFunction) {\n    return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n  }\n  /** Checks whether an event comes from inside a chip element. */\n  _originatesFromChip(event) {\n    let currentElement = event.target;\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-mdc-chip')) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n  /** Sets up the chip set's focus management logic. */\n  _setUpFocusManagement() {\n    // Create a flat `QueryList` containing the actions of all of the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n    this._chips.changes.pipe(startWith(this._chips)).subscribe(chips => {\n      const actions = [];\n      chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n      this._chipActions.reset(actions);\n      this._chipActions.notifyOnChanges();\n    });\n    this._keyManager = new FocusKeyManager(this._chipActions).withVerticalOrientation().withHorizontalOrientation(this._dir ? this._dir.value : 'ltr').withHomeAndEnd().skipPredicate(action => this._skipPredicate(action));\n    // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n    this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({\n      chip\n    }) => {\n      const action = chip._getSourceAction(document.activeElement);\n      if (action) {\n        this._keyManager.updateActiveItem(action);\n      }\n    });\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n  }\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive and disabled actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n    // chips.\n    return !action.isInteractive || action.disabled;\n  }\n  /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n  _trackChipSetChanges() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => this._syncChipsState());\n      }\n      this._redirectDestroyedChipFocus();\n    });\n  }\n  /** Starts tracking the destroyed chips in order to capture the focused one. */\n  _trackDestroyedFocusedChip() {\n    this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      const chipArray = this._chips.toArray();\n      const chipIndex = chipArray.indexOf(event.chip);\n      // If the focused chip is destroyed, save its index so that we can move focus to the next\n      // chip. We only save the index here, rather than move the focus immediately, because we want\n      // to wait until the chip is removed from the chip list before focusing the next one. This\n      // allows us to keep focus on the same index if the chip gets swapped out.\n      if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n        this._lastDestroyedFocusedChipIndex = chipIndex;\n      }\n    });\n  }\n  /**\n   * Finds the next appropriate chip to move focus to,\n   * if the currently-focused chip is destroyed.\n   */\n  _redirectDestroyedChipFocus() {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n    if (this._chips.length) {\n      const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n      const chipToFocus = this._chips.toArray()[newIndex];\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this._chips.length === 1) {\n          this.focus();\n        } else {\n          this._keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      this.focus();\n    }\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n  static {\n    this.ɵfac = function MatChipSet_Factory(t) {\n      return new (t || MatChipSet)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatChipSet,\n      selectors: [[\"mat-chip-set\"]],\n      contentQueries: function MatChipSet_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatChip, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-chip-set\", \"mdc-evolution-chip-set\"],\n      hostVars: 1,\n      hostBindings: function MatChipSet_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function MatChipSet_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx.role);\n        }\n      },\n      inputs: {\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        role: \"role\",\n        tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)]\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c5,\n      decls: 2,\n      vars: 0,\n      consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n      template: function MatChipSet_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipSet, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-set',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n        '(keydown)': '_handleKeydown($event)',\n        '[attr.role]': 'role'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1$1.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    role: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChip, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n  constructor( /** Chip listbox that emitted the event. */\n  source, /** Value of the chip listbox when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatChipListbox),\n  multi: true\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n  constructor() {\n    super(...arguments);\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onTouched = () => {};\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onChange = () => {};\n    // TODO: MDC uses `grid` here\n    this._defaultRole = 'listbox';\n    /** Default chip options. */\n    this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this._multiple = false;\n    /** Orientation of the chip list. */\n    this.ariaOrientation = 'horizontal';\n    this._selectable = true;\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    this.compareWith = (o1, o2) => o1 === o2;\n    /** Whether this chip listbox is required. */\n    this.required = false;\n    this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Event emitted when the selected chip listbox value has been changed by the user. */\n    this.change = new EventEmitter();\n    this._chips = undefined;\n  }\n  /** Whether the user should be allowed to select multiple chips. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = value;\n    this._syncListboxProperties();\n  }\n  /** The array of selected chips inside the chip listbox. */\n  get selected() {\n    const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n    return this.multiple ? selectedChips : selectedChips[0];\n  }\n  /**\n   * Whether or not this chip listbox is selectable.\n   *\n   * When a chip listbox is not selectable, the selected states for all\n   * the chips inside the chip listbox are always ignored.\n   */\n  get selectable() {\n    return this._selectable;\n  }\n  set selectable(value) {\n    this._selectable = value;\n    this._syncListboxProperties();\n  }\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncListboxProperties();\n  }\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges() {\n    return this._getChipStream(chip => chip.selectionChange);\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** The value of the listbox, which is the combined value of the selected chips. */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.writeValue(value);\n    this._value = value;\n  }\n  ngAfterContentInit() {\n    if (this._pendingInitialValue !== undefined) {\n      Promise.resolve().then(() => {\n        this._setSelectionByValue(this._pendingInitialValue, false);\n        this._pendingInitialValue = undefined;\n      });\n    }\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      // Update listbox selectable/multiple properties on chips\n      this._syncListboxProperties();\n    });\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n    this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (!this.multiple) {\n        this._chips.forEach(chip => {\n          if (chip !== event.source) {\n            chip._setSelectedState(false, false, false);\n          }\n        });\n      }\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n  /**\n   * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n   * are no selected chips.\n   */\n  focus() {\n    if (this.disabled) {\n      return;\n    }\n    const firstSelectedChip = this._getFirstSelectedChip();\n    if (firstSelectedChip && !firstSelectedChip.disabled) {\n      firstSelectedChip.focus();\n    } else if (this._chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    if (this._chips) {\n      this._setSelectionByValue(value, false);\n    } else if (value != null) {\n      this._pendingInitialValue = value;\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /** Selects all chips with value. */\n  _setSelectionByValue(value, isUserInput = true) {\n    this._clearSelection();\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n    } else {\n      this._selectValue(value, isUserInput);\n    }\n  }\n  /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n  _blur() {\n    if (!this.disabled) {\n      // Wait to see if focus moves to an individual chip.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  _keydown(event) {\n    if (event.keyCode === TAB) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Marks the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    let valueToEmit = null;\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : undefined;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListboxChange(this, valueToEmit));\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Deselects every chip in the listbox.\n   * @param skip Chip that should not be deselected.\n   */\n  _clearSelection(skip) {\n    this._chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n  }\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  _selectValue(value, isUserInput) {\n    const correspondingChip = this._chips.find(chip => {\n      return chip.value != null && this.compareWith(chip.value, value);\n    });\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n    }\n    return correspondingChip;\n  }\n  /** Syncs the chip-listbox selection state with the individual chips. */\n  _syncListboxProperties() {\n    if (this._chips) {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._chips.forEach(chip => {\n          chip._chipListMultiple = this.multiple;\n          chip.chipListSelectable = this._selectable;\n          chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n          chip._changeDetectorRef.markForCheck();\n        });\n      });\n    }\n  }\n  /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n  _getFirstSelectedChip() {\n    if (Array.isArray(this.selected)) {\n      return this.selected.length ? this.selected[0] : undefined;\n    } else {\n      return this.selected;\n    }\n  }\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n    // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n    // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n    // exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    return !action.isInteractive;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatChipListbox_BaseFactory;\n      return function MatChipListbox_Factory(t) {\n        return (ɵMatChipListbox_BaseFactory || (ɵMatChipListbox_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipListbox)))(t || MatChipListbox);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatChipListbox,\n      selectors: [[\"mat-chip-listbox\"]],\n      contentQueries: function MatChipListbox_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatChipOption, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n        }\n      },\n      hostAttrs: [1, \"mdc-evolution-chip-set\", \"mat-mdc-chip-listbox\"],\n      hostVars: 11,\n      hostBindings: function MatChipListbox_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatChipListbox_focus_HostBindingHandler() {\n            return ctx.focus();\n          })(\"blur\", function MatChipListbox_blur_HostBindingHandler() {\n            return ctx._blur();\n          })(\"keydown\", function MatChipListbox_keydown_HostBindingHandler($event) {\n            return ctx._keydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"tabIndex\", ctx.disabled || ctx.empty ? -1 : ctx.tabIndex);\n          i0.ɵɵattribute(\"role\", ctx.role)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-multiselectable\", ctx.multiple)(\"aria-orientation\", ctx.ariaOrientation);\n          i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-required\", ctx.required);\n        }\n      },\n      inputs: {\n        multiple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"multiple\", \"multiple\", booleanAttribute],\n        ariaOrientation: [i0.ɵɵInputFlags.None, \"aria-orientation\", \"ariaOrientation\"],\n        selectable: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"selectable\", \"selectable\", booleanAttribute],\n        compareWith: \"compareWith\",\n        required: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute],\n        hideSingleSelectionIndicator: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n        value: \"value\"\n      },\n      outputs: {\n        change: \"change\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c5,\n      decls: 2,\n      vars: 0,\n      consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n      template: function MatChipListbox_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [_c6],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipListbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-listbox',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n        '[attr.role]': 'role',\n        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\n        // TODO: replace this binding with use of AriaDescriber\n        '[attr.aria-describedby]': '_ariaDescribedby || null',\n        '[attr.aria-required]': 'role ? required : null',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-orientation]': 'ariaOrientation',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()',\n        '(keydown)': '_keydown($event)'\n      },\n      providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], null, {\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    ariaOrientation: [{\n      type: Input,\n      args: ['aria-orientation']\n    }],\n    selectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipOption, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n  constructor( /** Chip grid that emitted the event. */\n  source, /** Value of the chip grid when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends MatChipSet {\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get disabled() {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._syncChipsState();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id() {\n    return this._chipInput.id;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty() {\n    return (!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get placeholder() {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n  get focused() {\n    return this._chipInput.focused || this._hasFocusedChip();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = value;\n    this.stateChanges.next();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    return !this.empty || this.focused;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n  /** An object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** Whether the chip grid is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  constructor(elementRef, changeDetectorRef, dir, parentForm, parentFormGroup, defaultErrorStateMatcher, ngControl) {\n    super(elementRef, changeDetectorRef, dir);\n    this.ngControl = ngControl;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    this.controlType = 'mat-chip-grid';\n    this._defaultRole = 'grid';\n    /**\n     * List of element ids to propagate to the chipInput's aria-describedby attribute.\n     */\n    this._ariaDescribedbyIds = [];\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onTouched = () => {};\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    this._onChange = () => {};\n    this._value = [];\n    /** Emits when the chip grid value has been changed by the user. */\n    this.change = new EventEmitter();\n    /**\n     * Emits whenever the raw value of the chip-grid changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    this.valueChange = new EventEmitter();\n    this._chips = undefined;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    this.stateChanges = new Subject();\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n    this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n  }\n  ngAfterContentInit() {\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n    merge(this.chipFocusChanges, this._chips.changes).pipe(takeUntil(this._destroyed)).subscribe(() => this.stateChanges.next());\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n    }\n  }\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.stateChanges.complete();\n  }\n  /** Associates an HTML input element with this chip grid. */\n  registerInput(inputElement) {\n    this._chipInput = inputElement;\n    this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event) {\n    if (!this.disabled && !this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n  /**\n   * Focuses the first chip in this chip grid, or the associated input when there\n   * are no eligible chips.\n   */\n  focus() {\n    if (this.disabled || this._chipInput.focused) {\n      return;\n    }\n    if (!this._chips.length || this._chips.first.disabled) {\n      // Delay until the next tick, because this can cause a \"changed after checked\"\n      // error if the input does something on focus (e.g. opens an autocomplete).\n      Promise.resolve().then(() => this._chipInput.focus());\n    } else if (this._chips.length) {\n      this._keyManager.setFirstItemActive();\n    }\n    this.stateChanges.next();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    // We must keep this up to date to handle the case where ids are set\n    // before the chip input is registered.\n    this._ariaDescribedbyIds = ids;\n    this._chipInput?.setDescribedByIds(ids);\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    // The user is responsible for creating the child chips, so we just store the value.\n    this._value = value;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n  /** Refreshes the error state of the chip grid. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n  _blur() {\n    if (!this.disabled) {\n      // Check whether the focus moved to chip input.\n      // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n      // to chip input, do nothing.\n      // Timeout is needed to wait for the focus() event trigger on chip input.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  /**\n   * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the grid from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (!this._chipInput.focused) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Handles custom keyboard events. */\n  _handleKeydown(event) {\n    if (event.keyCode === TAB) {\n      if (this._chipInput.focused && hasModifierKey(event, 'shiftKey') && this._chips.length && !this._chips.last.disabled) {\n        event.preventDefault();\n        if (this._keyManager.activeItem) {\n          this._keyManager.setActiveItem(this._keyManager.activeItem);\n        } else {\n          this._focusLastChip();\n        }\n      } else {\n        // Use the super method here since it doesn't check for the input\n        // focused state. This allows focus to escape if there's only one\n        // disabled chip left in the list.\n        super._allowFocusEscape();\n      }\n    } else if (!this._chipInput.focused) {\n      super._handleKeydown(event);\n    }\n    this.stateChanges.next();\n  }\n  _focusLastChip() {\n    if (this._chips.length) {\n      this._chips.last.focus();\n    }\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n    this._value = valueToEmit;\n    this.change.emit(new MatChipGridChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  static {\n    this.ɵfac = function MatChipGrid_Factory(t) {\n      return new (t || MatChipGrid)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8), i0.ɵɵdirectiveInject(i2.NgForm, 8), i0.ɵɵdirectiveInject(i2.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i3.ErrorStateMatcher), i0.ɵɵdirectiveInject(i2.NgControl, 10));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatChipGrid,\n      selectors: [[\"mat-chip-grid\"]],\n      contentQueries: function MatChipGrid_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatChipRow, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-chip-set\", \"mat-mdc-chip-grid\", \"mdc-evolution-chip-set\"],\n      hostVars: 10,\n      hostBindings: function MatChipGrid_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatChipGrid_focus_HostBindingHandler() {\n            return ctx.focus();\n          })(\"blur\", function MatChipGrid_blur_HostBindingHandler() {\n            return ctx._blur();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.disabled || ctx._chips && ctx._chips.length === 0 ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState);\n          i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-invalid\", ctx.errorState)(\"mat-mdc-chip-list-required\", ctx.required);\n        }\n      },\n      inputs: {\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        placeholder: \"placeholder\",\n        required: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute],\n        value: \"value\",\n        errorStateMatcher: \"errorStateMatcher\"\n      },\n      outputs: {\n        change: \"change\",\n        valueChange: \"valueChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MatFormFieldControl,\n        useExisting: MatChipGrid\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c5,\n      decls: 2,\n      vars: 0,\n      consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n      template: function MatChipGrid_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [_c6],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipGrid, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-grid',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n        '[attr.role]': 'role',\n        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatChipGrid\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      styles: [\".mdc-evolution-chip-set{display:flex}.mdc-evolution-chip-set:focus{outline:none}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mdc-evolution-chip-set--overflow .mdc-evolution-chip-set__chips{flex-flow:nowrap}.mdc-evolution-chip-set .mdc-evolution-chip-set__chips{margin-left:-8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip-set__chips,.mdc-evolution-chip-set .mdc-evolution-chip-set__chips[dir=rtl]{margin-left:0;margin-right:-8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-left:8px;margin-right:0}[dir=rtl] .mdc-evolution-chip-set .mdc-evolution-chip,.mdc-evolution-chip-set .mdc-evolution-chip[dir=rtl]{margin-left:0;margin-right:8px}.mdc-evolution-chip-set .mdc-evolution-chip{margin-top:4px;margin-bottom:4px}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1$1.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i2.NgForm,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i2.FormGroupDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i3.ErrorStateMatcher\n  }, {\n    type: i2.NgControl,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Self\n    }]\n  }], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipRow, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n  /** Register input for chip list */\n  get chipGrid() {\n    return this._chipGrid;\n  }\n  set chipGrid(value) {\n    if (value) {\n      this._chipGrid = value;\n      this._chipGrid.registerInput(this);\n    }\n  }\n  /** Whether the input is disabled. */\n  get disabled() {\n    return this._disabled || this._chipGrid && this._chipGrid.disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  /** Whether the input is empty. */\n  get empty() {\n    return !this.inputElement.value;\n  }\n  constructor(_elementRef, defaultOptions, formField) {\n    this._elementRef = _elementRef;\n    /** Whether the control is focused. */\n    this.focused = false;\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    this.addOnBlur = false;\n    /** Emitted when a chip is to be added. */\n    this.chipEnd = new EventEmitter();\n    /** The input's placeholder text. */\n    this.placeholder = '';\n    /** Unique id for the input. */\n    this.id = `mat-mdc-chip-list-input-${nextUniqueId++}`;\n    this._disabled = false;\n    this.inputElement = this._elementRef.nativeElement;\n    this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n    if (formField) {\n      this.inputElement.classList.add('mat-mdc-form-field-input-control');\n    }\n  }\n  ngOnChanges() {\n    this._chipGrid.stateChanges.next();\n  }\n  ngOnDestroy() {\n    this.chipEnd.complete();\n  }\n  ngAfterContentInit() {\n    this._focusLastChipOnBackspace = this.empty;\n  }\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event) {\n    if (event) {\n      // To prevent the user from accidentally deleting chips when pressing BACKSPACE continuously,\n      // We focus the last chip on backspace only after the user has released the backspace button,\n      // And the input is empty (see behaviour in _keyup)\n      if (event.keyCode === BACKSPACE && this._focusLastChipOnBackspace) {\n        this._chipGrid._focusLastChip();\n        event.preventDefault();\n        return;\n      } else {\n        this._focusLastChipOnBackspace = false;\n      }\n    }\n    this._emitChipEnd(event);\n  }\n  /**\n   * Pass events to the keyboard manager. Available here for tests.\n   */\n  _keyup(event) {\n    // Allow user to move focus to chips next time he presses backspace\n    if (!this._focusLastChipOnBackspace && event.keyCode === BACKSPACE && this.empty) {\n      this._focusLastChipOnBackspace = true;\n      event.preventDefault();\n    }\n  }\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipGrid.focused) {\n      this._chipGrid._blur();\n    }\n    this._chipGrid.stateChanges.next();\n  }\n  _focus() {\n    this.focused = true;\n    this._focusLastChipOnBackspace = this.empty;\n    this._chipGrid.stateChanges.next();\n  }\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event) {\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({\n        input: this.inputElement,\n        value: this.inputElement.value,\n        chipInput: this\n      });\n      event?.preventDefault();\n    }\n  }\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipGrid.stateChanges.next();\n  }\n  /** Focuses the input. */\n  focus() {\n    this.inputElement.focus();\n  }\n  /** Clears the input */\n  clear() {\n    this.inputElement.value = '';\n    this._focusLastChipOnBackspace = true;\n  }\n  setDescribedByIds(ids) {\n    const element = this._elementRef.nativeElement;\n    // Set the value directly in the DOM since this binding\n    // is prone to \"changed after checked\" errors.\n    if (ids.length) {\n      element.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      element.removeAttribute('aria-describedby');\n    }\n  }\n  /** Checks whether a keycode is one of the configured separators. */\n  _isSeparatorKey(event) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n  static {\n    this.ɵfac = function MatChipInput_Factory(t) {\n      return new (t || MatChipInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatChipInput,\n      selectors: [[\"input\", \"matChipInputFor\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-chip-input\", \"mat-mdc-input-element\", \"mdc-text-field__input\", \"mat-input-element\"],\n      hostVars: 6,\n      hostBindings: function MatChipInput_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) {\n            return ctx._keydown($event);\n          })(\"keyup\", function MatChipInput_keyup_HostBindingHandler($event) {\n            return ctx._keyup($event);\n          })(\"blur\", function MatChipInput_blur_HostBindingHandler() {\n            return ctx._blur();\n          })(\"focus\", function MatChipInput_focus_HostBindingHandler() {\n            return ctx._focus();\n          })(\"input\", function MatChipInput_input_HostBindingHandler() {\n            return ctx._onInput();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipGrid && ctx._chipGrid.ngControl ? ctx._chipGrid.ngControl.invalid : null)(\"aria-required\", ctx._chipGrid && ctx._chipGrid.required || null)(\"required\", ctx._chipGrid && ctx._chipGrid.required || null);\n        }\n      },\n      inputs: {\n        chipGrid: [i0.ɵɵInputFlags.None, \"matChipInputFor\", \"chipGrid\"],\n        addOnBlur: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute],\n        separatorKeyCodes: [i0.ɵɵInputFlags.None, \"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"],\n        placeholder: \"placeholder\",\n        id: \"id\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      outputs: {\n        chipEnd: \"matChipInputTokenEnd\"\n      },\n      exportAs: [\"matChipInput\", \"matChipInputFor\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matChipInputFor]',\n      exportAs: 'matChipInput, matChipInputFor',\n      host: {\n        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n        // the MDC chips were landed initially with it.\n        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n        '(keydown)': '_keydown($event)',\n        '(keyup)': '_keyup($event)',\n        '(blur)': '_blur()',\n        '(focus)': '_focus()',\n        '(input)': '_onInput()',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n        '[attr.required]': '_chipGrid && _chipGrid.required || null'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_CHIPS_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: i1$2.MatFormField,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FORM_FIELD]\n    }]\n  }], {\n    chipGrid: [{\n      type: Input,\n      args: ['matChipInputFor']\n    }],\n    addOnBlur: [{\n      type: Input,\n      args: [{\n        alias: 'matChipInputAddOnBlur',\n        transform: booleanAttribute\n      }]\n    }],\n    separatorKeyCodes: [{\n      type: Input,\n      args: ['matChipInputSeparatorKeyCodes']\n    }],\n    chipEnd: [{\n      type: Output,\n      args: ['matChipInputTokenEnd']\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nconst CHIP_DECLARATIONS = [MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon];\nclass MatChipsModule {\n  static {\n    this.ɵfac = function MatChipsModule_Factory(t) {\n      return new (t || MatChipsModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatChipsModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [ErrorStateMatcher, {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n          separatorKeyCodes: [ENTER]\n        }\n      }],\n      imports: [MatCommonModule, MatRippleModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\n      exports: [MatCommonModule, CHIP_DECLARATIONS],\n      providers: [ErrorStateMatcher, {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n          separatorKeyCodes: [ENTER]\n        }\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, booleanAttribute, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, ViewChild, ContentChildren, Input, Output, Directive, forwardRef, inject, Optional, Host, NgModule } from '@angular/core';\nimport { MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nexport { MatOptgroup, MatOption } from '@angular/material/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ActiveDescendantKeyManager, removeAriaReferencedId, addAriaReferencedId } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getEventTarget } from '@angular/cdk/platform';\nimport { trigger, state, style, transition, group, animate } from '@angular/animations';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { ESCAPE, hasModifierKey, UP_ARROW, ENTER, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { startWith, switchMap, take, filter, map, tap, delay } from 'rxjs/operators';\nimport * as i2 from '@angular/cdk/bidi';\n\n// Animation values come from\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-menu-surface/_mixins.scss\n// TODO(mmalerba): Ideally find a way to import the values from MDC's code.\nconst _c0 = [\"panel\"];\nconst _c1 = [\"*\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1, 0);\n    i0.ɵɵlistener(\"@panelAnimation.done\", function MatAutocomplete_ng_template_0_Template_div_animation_panelAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._animationDone.next($event));\n    });\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const formFieldId_r3 = ctx.id;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1._classList);\n    i0.ɵɵclassProp(\"mat-mdc-autocomplete-visible\", ctx_r1.showPanel)(\"mat-mdc-autocomplete-hidden\", !ctx_r1.showPanel)(\"mat-primary\", ctx_r1._color === \"primary\")(\"mat-accent\", ctx_r1._color === \"accent\")(\"mat-warn\", ctx_r1._color === \"warn\");\n    i0.ɵɵproperty(\"id\", ctx_r1.id)(\"@panelAnimation\", ctx_r1.isOpen ? \"visible\" : \"hidden\");\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.ariaLabel || null)(\"aria-labelledby\", ctx_r1._getPanelAriaLabelledby(formFieldId_r3));\n  }\n}\nconst panelAnimation = trigger('panelAnimation', [state('void, hidden', style({\n  opacity: 0,\n  transform: 'scaleY(0.8)'\n})), transition(':enter, hidden => visible', [group([animate('0.03s linear', style({\n  opacity: 1\n})), animate('0.12s cubic-bezier(0, 0, 0.2, 1)', style({\n  transform: 'scaleY(1)'\n}))])]), transition(':leave, visible => hidden', [animate('0.075s linear', style({\n  opacity: 0\n}))])]);\n\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n  constructor( /** Reference to the autocomplete panel that emitted the event. */\n  source, /** Option that was selected. */\n  option) {\n    this.source = source;\n    this.option = option;\n  }\n}\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n  providedIn: 'root',\n  factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    autoActiveFirstOption: false,\n    autoSelectActiveOption: false,\n    hideSingleSelectionIndicator: false,\n    requireSelection: false\n  };\n}\n/** Autocomplete component. */\nclass MatAutocomplete {\n  /** Whether the autocomplete panel is open. */\n  get isOpen() {\n    return this._isOpen && this.showPanel;\n  }\n  /** @docs-private Sets the theme color of the panel. */\n  _setColor(value) {\n    this._color = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Takes classes set on the host mat-autocomplete element and applies them to the panel\n   * inside the overlay container to allow for easy styling.\n   */\n  set classList(value) {\n    this._classList = value;\n    this._elementRef.nativeElement.className = '';\n  }\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncParentProperties();\n  }\n  /** Syncs the parent state with the individual options. */\n  _syncParentProperties() {\n    if (this.options) {\n      for (const option of this.options) {\n        option._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n  constructor(_changeDetectorRef, _elementRef, _defaults, platform) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    this._defaults = _defaults;\n    this._activeOptionChanges = Subscription.EMPTY;\n    /** Emits when the panel animation is done. Null if the panel doesn't animate. */\n    this._animationDone = new EventEmitter();\n    /** Whether the autocomplete panel should be visible, depending on option length. */\n    this.showPanel = false;\n    this._isOpen = false;\n    /** Function that maps an option's control value to its display value in the trigger. */\n    this.displayWith = null;\n    /** Event that is emitted whenever an option from the list is selected. */\n    this.optionSelected = new EventEmitter();\n    /** Event that is emitted when the autocomplete panel is opened. */\n    this.opened = new EventEmitter();\n    /** Event that is emitted when the autocomplete panel is closed. */\n    this.closed = new EventEmitter();\n    /** Emits whenever an option is activated. */\n    this.optionActivated = new EventEmitter();\n    /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n    this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n    // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n    // Safari using VoiceOver. We should occasionally check back to see whether the bug\n    // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n    // option altogether.\n    this.inertGroups = platform?.SAFARI || false;\n    this.autoActiveFirstOption = !!_defaults.autoActiveFirstOption;\n    this.autoSelectActiveOption = !!_defaults.autoSelectActiveOption;\n    this.requireSelection = !!_defaults.requireSelection;\n    this._hideSingleSelectionIndicator = this._defaults.hideSingleSelectionIndicator ?? false;\n  }\n  ngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap().skipPredicate(this._skipPredicate);\n    this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n      if (this.isOpen) {\n        this.optionActivated.emit({\n          source: this,\n          option: this.options.toArray()[index] || null\n        });\n      }\n    });\n    // Set the initial visibility state.\n    this._setVisibility();\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._activeOptionChanges.unsubscribe();\n    this._animationDone.complete();\n  }\n  /**\n   * Sets the panel scrollTop. This allows us to manually scroll to display options\n   * above or below the fold, as they are not actually being focused when active.\n   */\n  _setScrollTop(scrollTop) {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n  /** Returns the panel's scrollTop. */\n  _getScrollTop() {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n  /** Panel should hide itself when the option list is empty. */\n  _setVisibility() {\n    this.showPanel = !!this.options.length;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits the `select` event. */\n  _emitSelectEvent(option) {\n    const event = new MatAutocompleteSelectedEvent(this, option);\n    this.optionSelected.emit(event);\n  }\n  /** Gets the aria-labelledby for the autocomplete panel. */\n  _getPanelAriaLabelledby(labelId) {\n    if (this.ariaLabel) {\n      return null;\n    }\n    const labelExpression = labelId ? labelId + ' ' : '';\n    return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n  }\n  // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n  // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n  // recommendation.\n  //\n  // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n  // makes a few exceptions for compound widgets.\n  //\n  // From [Developing a Keyboard Interface](\n  // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n  //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n  //   Listbox...\"\n  //\n  // The user can focus disabled options using the keyboard, but the user cannot click disabled\n  // options.\n  _skipPredicate() {\n    return false;\n  }\n  static {\n    this.ɵfac = function MatAutocomplete_Factory(t) {\n      return new (t || MatAutocomplete)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(i1.Platform));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatAutocomplete,\n      selectors: [[\"mat-autocomplete\"]],\n      contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatOption, 5);\n          i0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        }\n      },\n      viewQuery: function MatAutocomplete_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 7);\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-autocomplete\"],\n      inputs: {\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n        displayWith: \"displayWith\",\n        autoActiveFirstOption: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"autoActiveFirstOption\", \"autoActiveFirstOption\", booleanAttribute],\n        autoSelectActiveOption: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"autoSelectActiveOption\", \"autoSelectActiveOption\", booleanAttribute],\n        requireSelection: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"requireSelection\", \"requireSelection\", booleanAttribute],\n        panelWidth: \"panelWidth\",\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        classList: [i0.ɵɵInputFlags.None, \"class\", \"classList\"],\n        hideSingleSelectionIndicator: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute]\n      },\n      outputs: {\n        optionSelected: \"optionSelected\",\n        opened: \"opened\",\n        closed: \"closed\",\n        optionActivated: \"optionActivated\"\n      },\n      exportAs: [\"matAutocomplete\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_OPTION_PARENT_COMPONENT,\n        useExisting: MatAutocomplete\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 1,\n      vars: 0,\n      consts: [[\"panel\", \"\"], [\"role\", \"listbox\", 1, \"mat-mdc-autocomplete-panel\", \"mdc-menu-surface\", \"mdc-menu-surface--open\", 3, \"id\"]],\n      template: function MatAutocomplete_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 16, \"ng-template\");\n        }\n      },\n      styles: [\"div.mat-mdc-autocomplete-panel{width:100%;max-height:256px;visibility:hidden;transform-origin:center top;overflow:auto;padding:8px 0;box-sizing:border-box;position:static;border-radius:var(--mat-autocomplete-container-shape);box-shadow:var(--mat-autocomplete-container-elevation-shadow);background-color:var(--mat-autocomplete-background-color)}.cdk-high-contrast-active div.mat-mdc-autocomplete-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel{border-top-left-radius:0;border-top-right-radius:0}.mat-mdc-autocomplete-panel-above div.mat-mdc-autocomplete-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:center bottom}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-visible{visibility:visible}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-hidden{visibility:hidden;pointer-events:none}mat-autocomplete{display:none}\"],\n      encapsulation: 2,\n      data: {\n        animation: [panelAnimation]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocomplete, [{\n    type: Component,\n    args: [{\n      selector: 'mat-autocomplete',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'matAutocomplete',\n      host: {\n        'class': 'mat-mdc-autocomplete'\n      },\n      providers: [{\n        provide: MAT_OPTION_PARENT_COMPONENT,\n        useExisting: MatAutocomplete\n      }],\n      animations: [panelAnimation],\n      standalone: true,\n      template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div\\n    class=\\\"mat-mdc-autocomplete-panel mdc-menu-surface mdc-menu-surface--open\\\"\\n    role=\\\"listbox\\\"\\n    [id]=\\\"id\\\"\\n    [class]=\\\"_classList\\\"\\n    [class.mat-mdc-autocomplete-visible]=\\\"showPanel\\\"\\n    [class.mat-mdc-autocomplete-hidden]=\\\"!showPanel\\\"\\n    [class.mat-primary]=\\\"_color === 'primary'\\\"\\n    [class.mat-accent]=\\\"_color === 'accent'\\\"\\n    [class.mat-warn]=\\\"_color === 'warn'\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n    [@panelAnimation]=\\\"isOpen ? 'visible' : 'hidden'\\\"\\n    (@panelAnimation.done)=\\\"_animationDone.next($event)\\\"\\n    #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n      styles: [\"div.mat-mdc-autocomplete-panel{width:100%;max-height:256px;visibility:hidden;transform-origin:center top;overflow:auto;padding:8px 0;box-sizing:border-box;position:static;border-radius:var(--mat-autocomplete-container-shape);box-shadow:var(--mat-autocomplete-container-elevation-shadow);background-color:var(--mat-autocomplete-background-color)}.cdk-high-contrast-active div.mat-mdc-autocomplete-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-autocomplete-panel-above) div.mat-mdc-autocomplete-panel{border-top-left-radius:0;border-top-right-radius:0}.mat-mdc-autocomplete-panel-above div.mat-mdc-autocomplete-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:center bottom}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-visible{visibility:visible}div.mat-mdc-autocomplete-panel.mat-mdc-autocomplete-hidden{visibility:hidden;pointer-events:none}mat-autocomplete{display:none}\"]\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: i1.Platform\n  }], {\n    template: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    panel: [{\n      type: ViewChild,\n      args: ['panel']\n    }],\n    options: [{\n      type: ContentChildren,\n      args: [MatOption, {\n        descendants: true\n      }]\n    }],\n    optionGroups: [{\n      type: ContentChildren,\n      args: [MAT_OPTGROUP, {\n        descendants: true\n      }]\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    displayWith: [{\n      type: Input\n    }],\n    autoActiveFirstOption: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    autoSelectActiveOption: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    requireSelection: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    panelWidth: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    optionSelected: [{\n      type: Output\n    }],\n    opened: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    optionActivated: [{\n      type: Output\n    }],\n    classList: [{\n      type: Input,\n      args: ['class']\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n  constructor( /** Reference to the element on which the directive is applied. */\n  elementRef) {\n    this.elementRef = elementRef;\n  }\n  static {\n    this.ɵfac = function MatAutocompleteOrigin_Factory(t) {\n      return new (t || MatAutocompleteOrigin)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatAutocompleteOrigin,\n      selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]],\n      exportAs: [\"matAutocompleteOrigin\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n    type: Directive,\n    args: [{\n      selector: '[matAutocompleteOrigin]',\n      exportAs: 'matAutocompleteOrigin',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], null);\n})();\n\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatAutocompleteTrigger),\n  multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n  return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' + 'Make sure that the id passed to the `matAutocomplete` is correct and that ' + \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY\n};\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass MatAutocompleteTrigger {\n  constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n    this._element = _element;\n    this._overlay = _overlay;\n    this._viewContainerRef = _viewContainerRef;\n    this._zone = _zone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    this._formField = _formField;\n    this._document = _document;\n    this._viewportRuler = _viewportRuler;\n    this._defaults = _defaults;\n    this._componentDestroyed = false;\n    /** Whether or not the label state is being overridden. */\n    this._manuallyFloatingLabel = false;\n    /** Subscription to viewport size changes. */\n    this._viewportSubscription = Subscription.EMPTY;\n    /**\n     * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n     * closed autocomplete from being reopened if the user switches to another browser tab and then\n     * comes back.\n     */\n    this._canOpenOnNextFocus = true;\n    /** Stream of keyboard events that can close the panel. */\n    this._closeKeyEventStream = new Subject();\n    /**\n     * Event handler for when the window is blurred. Needs to be an\n     * arrow function in order to preserve the context.\n     */\n    this._windowBlurHandler = () => {\n      // If the user blurred the window while the autocomplete is focused, it means that it'll be\n      // refocused when they come back. In this case we want to skip the first focus event, if the\n      // pane was closed, in order to avoid reopening it unintentionally.\n      this._canOpenOnNextFocus = this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n    };\n    /** `View -> model callback called when value changes` */\n    this._onChange = () => {};\n    /** `View -> model callback called when autocomplete has been touched` */\n    this._onTouched = () => {};\n    /**\n     * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n     * will render the panel underneath the trigger if there is enough space for it to fit in\n     * the viewport, otherwise the panel will be shown above it. If the position is set to\n     * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n     * whether it fits completely in the viewport.\n     */\n    this.position = 'auto';\n    /**\n     * `autocomplete` attribute to be set on the input element.\n     * @docs-private\n     */\n    this.autocompleteAttribute = 'off';\n    /** Class to apply to the panel when it's above the input. */\n    this._aboveClass = 'mat-mdc-autocomplete-panel-above';\n    this._overlayAttached = false;\n    /** Stream of changes to the selection state of the autocomplete options. */\n    this.optionSelections = defer(() => {\n      const options = this.autocomplete ? this.autocomplete.options : null;\n      if (options) {\n        return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n      }\n      // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n      // Return a stream that we'll replace with the real one once everything is in place.\n      return this._zone.onStable.pipe(take(1), switchMap(() => this.optionSelections));\n    });\n    /** Handles keyboard events coming from the overlay panel. */\n    this._handlePanelKeydown = event => {\n      // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n      // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n      if (event.keyCode === ESCAPE && !hasModifierKey(event) || event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey')) {\n        // If the user had typed something in before we autoselected an option, and they decided\n        // to cancel the selection, restore the input value to the one they had typed in.\n        if (this._pendingAutoselectedOption) {\n          this._updateNativeInputValue(this._valueBeforeAutoSelection ?? '');\n          this._pendingAutoselectedOption = null;\n        }\n        this._closeKeyEventStream.next();\n        this._resetActiveItem();\n        // We need to stop propagation, otherwise the event will eventually\n        // reach the input itself and cause the overlay to be reopened.\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    };\n    /**\n     * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n     * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n     * panel. Track the modal we have changed so we can undo the changes on destroy.\n     */\n    this._trackedModal = null;\n    this._scrollStrategy = scrollStrategy;\n  }\n  ngAfterViewInit() {\n    const window = this._getWindow();\n    if (typeof window !== 'undefined') {\n      this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes['position'] && this._positionStrategy) {\n      this._setStrategyPositions(this._positionStrategy);\n      if (this.panelOpen) {\n        this._overlayRef.updatePosition();\n      }\n    }\n  }\n  ngOnDestroy() {\n    const window = this._getWindow();\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('blur', this._windowBlurHandler);\n    }\n    this._viewportSubscription.unsubscribe();\n    this._componentDestroyed = true;\n    this._destroyPanel();\n    this._closeKeyEventStream.complete();\n    this._clearFromModal();\n  }\n  /** Whether or not the autocomplete panel is open. */\n  get panelOpen() {\n    return this._overlayAttached && this.autocomplete.showPanel;\n  }\n  /** Opens the autocomplete suggestion panel. */\n  openPanel() {\n    this._openPanelInternal();\n  }\n  /** Closes the autocomplete suggestion panel. */\n  closePanel() {\n    this._resetLabel();\n    if (!this._overlayAttached) {\n      return;\n    }\n    if (this.panelOpen) {\n      // Only emit if the panel was visible.\n      // The `NgZone.onStable` always emits outside of the Angular zone,\n      // so all the subscriptions from `_subscribeToClosingActions()` are also outside of the Angular zone.\n      // We should manually run in Angular zone to update UI after panel closing.\n      this._zone.run(() => {\n        this.autocomplete.closed.emit();\n      });\n    }\n    // Only reset if this trigger is the latest one that opened the\n    // autocomplete since another may have taken it over.\n    if (this.autocomplete._latestOpeningTrigger === this) {\n      this.autocomplete._isOpen = false;\n      this.autocomplete._latestOpeningTrigger = null;\n    }\n    this._overlayAttached = false;\n    this._pendingAutoselectedOption = null;\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._closingActionsSubscription.unsubscribe();\n    }\n    this._updatePanelState();\n    // Note that in some cases this can end up being called after the component is destroyed.\n    // Add a check to ensure that we don't try to run change detection on a destroyed view.\n    if (!this._componentDestroyed) {\n      // We need to trigger change detection manually, because\n      // `fromEvent` doesn't seem to do it at the proper time.\n      // This ensures that the label is reset when the\n      // user clicks outside.\n      this._changeDetectorRef.detectChanges();\n    }\n    // Remove aria-owns attribute when the autocomplete is no longer visible.\n    if (this._trackedModal) {\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', this.autocomplete.id);\n    }\n  }\n  /**\n   * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n   * within the viewport.\n   */\n  updatePosition() {\n    if (this._overlayAttached) {\n      this._overlayRef.updatePosition();\n    }\n  }\n  /**\n   * A stream of actions that should close the autocomplete panel, including\n   * when an option is selected, on blur, and when TAB is pressed.\n   */\n  get panelClosingActions() {\n    return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ? this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) : of()).pipe(\n    // Normalize the output so we return a consistent type.\n    map(event => event instanceof MatOptionSelectionChange ? event : null));\n  }\n  /** The currently active option, coerced to MatOption type. */\n  get activeOption() {\n    if (this.autocomplete && this.autocomplete._keyManager) {\n      return this.autocomplete._keyManager.activeItem;\n    }\n    return null;\n  }\n  /** Stream of clicks outside of the autocomplete panel. */\n  _getOutsideClickStream() {\n    return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'auxclick'), fromEvent(this._document, 'touchend')).pipe(filter(event => {\n      // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n      // fall back to check the first element in the path of the click event.\n      const clickTarget = _getEventTarget(event);\n      const formField = this._formField ? this._formField.getConnectedOverlayOrigin().nativeElement : null;\n      const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n      return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n      // Normally focus moves inside `mousedown` so this condition will almost always be\n      // true. Its main purpose is to handle the case where the input is focused from an\n      // outside click which propagates up to the `body` listener within the same sequence\n      // and causes the panel to close immediately (see #3106).\n      this._document.activeElement !== this._element.nativeElement && (!formField || !formField.contains(clickTarget)) && (!customOrigin || !customOrigin.contains(clickTarget)) && !!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget);\n    }));\n  }\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value) {\n    Promise.resolve(null).then(() => this._assignOptionValue(value));\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this._element.nativeElement.disabled = isDisabled;\n  }\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const hasModifier = hasModifierKey(event);\n    // Prevent the default action on all escape key presses. This is here primarily to bring IE\n    // in line with other browsers. By default, pressing escape on IE will cause it to revert\n    // the input value to the one that it had on focus, however it won't dispatch any events\n    // which means that the model value will be out of sync with the view.\n    if (keyCode === ESCAPE && !hasModifier) {\n      event.preventDefault();\n    }\n    this._valueOnLastKeydown = this._element.nativeElement.value;\n    if (this.activeOption && keyCode === ENTER && this.panelOpen && !hasModifier) {\n      this.activeOption._selectViaInteraction();\n      this._resetActiveItem();\n      event.preventDefault();\n    } else if (this.autocomplete) {\n      const prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n      if (keyCode === TAB || isArrowKey && !hasModifier && this.panelOpen) {\n        this.autocomplete._keyManager.onKeydown(event);\n      } else if (isArrowKey && this._canOpen()) {\n        this._openPanelInternal(this._valueOnLastKeydown);\n      }\n      if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n        this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n        if (this.autocomplete.autoSelectActiveOption && this.activeOption) {\n          if (!this._pendingAutoselectedOption) {\n            this._valueBeforeAutoSelection = this._valueOnLastKeydown;\n          }\n          this._pendingAutoselectedOption = this.activeOption;\n          this._assignOptionValue(this.activeOption.value);\n        }\n      }\n    }\n  }\n  _handleInput(event) {\n    let target = event.target;\n    let value = target.value;\n    // Based on `NumberValueAccessor` from forms.\n    if (target.type === 'number') {\n      value = value == '' ? null : parseFloat(value);\n    }\n    // If the input has a placeholder, IE will fire the `input` event on page load,\n    // focus and blur, in addition to when the user actually changed the value. To\n    // filter out all of the extra events, we save the value on focus and between\n    // `input` events, and we check whether it changed.\n    // See: https://connect.microsoft.com/IE/feedback/details/885747/\n    if (this._previousValue !== value) {\n      this._previousValue = value;\n      this._pendingAutoselectedOption = null;\n      // If selection is required we don't write to the CVA while the user is typing.\n      // At the end of the selection either the user will have picked something\n      // or we'll reset the value back to null.\n      if (!this.autocomplete || !this.autocomplete.requireSelection) {\n        this._onChange(value);\n      }\n      if (!value) {\n        this._clearPreviousSelectedOption(null, false);\n      } else if (this.panelOpen && !this.autocomplete.requireSelection) {\n        // Note that we don't reset this when `requireSelection` is enabled,\n        // because the option will be reset when the panel is closed.\n        const selectedOption = this.autocomplete.options?.find(option => option.selected);\n        if (selectedOption) {\n          const display = this._getDisplayValue(selectedOption.value);\n          if (value !== display) {\n            selectedOption.deselect(false);\n          }\n        }\n      }\n      if (this._canOpen() && this._document.activeElement === event.target) {\n        // When the `input` event fires, the input's value will have already changed. This means\n        // that if we take the `this._element.nativeElement.value` directly, it'll be one keystroke\n        // behind. This can be a problem when the user selects a value, changes a character while\n        // the input still has focus and then clicks away (see #28432). To work around it, we\n        // capture the value in `keydown` so we can use it here.\n        const valueOnAttach = this._valueOnLastKeydown ?? this._element.nativeElement.value;\n        this._valueOnLastKeydown = null;\n        this._openPanelInternal(valueOnAttach);\n      }\n    }\n  }\n  _handleFocus() {\n    if (!this._canOpenOnNextFocus) {\n      this._canOpenOnNextFocus = true;\n    } else if (this._canOpen()) {\n      this._previousValue = this._element.nativeElement.value;\n      this._attachOverlay(this._previousValue);\n      this._floatLabel(true);\n    }\n  }\n  _handleClick() {\n    if (this._canOpen() && !this.panelOpen) {\n      this._openPanelInternal();\n    }\n  }\n  /**\n   * In \"auto\" mode, the label will animate down as soon as focus is lost.\n   * This causes the value to jump when selecting an option with the mouse.\n   * This method manually floats the label until the panel can be closed.\n   * @param shouldAnimate Whether the label should be animated when it is floated.\n   */\n  _floatLabel(shouldAnimate = false) {\n    if (this._formField && this._formField.floatLabel === 'auto') {\n      if (shouldAnimate) {\n        this._formField._animateAndLockLabel();\n      } else {\n        this._formField.floatLabel = 'always';\n      }\n      this._manuallyFloatingLabel = true;\n    }\n  }\n  /** If the label has been manually elevated, return it to its normal state. */\n  _resetLabel() {\n    if (this._manuallyFloatingLabel) {\n      if (this._formField) {\n        this._formField.floatLabel = 'auto';\n      }\n      this._manuallyFloatingLabel = false;\n    }\n  }\n  /**\n   * This method listens to a stream of panel closing actions and resets the\n   * stream every time the option list changes.\n   */\n  _subscribeToClosingActions() {\n    const firstStable = this._zone.onStable.pipe(take(1));\n    const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()),\n    // Defer emitting to the stream until the next tick, because changing\n    // bindings in here will cause \"changed after checked\" errors.\n    delay(0));\n    // When the zone is stable initially, and when the option list changes...\n    return merge(firstStable, optionChanges).pipe(\n    // create a new stream of panelClosingActions, replacing any previous streams\n    // that were created, and flatten it so our stream only emits closing events...\n    switchMap(() => {\n      // The `NgZone.onStable` always emits outside of the Angular zone, thus we have to re-enter\n      // the Angular zone. This will lead to change detection being called outside of the Angular\n      // zone and the `autocomplete.opened` will also emit outside of the Angular.\n      this._zone.run(() => {\n        const wasOpen = this.panelOpen;\n        this._resetActiveItem();\n        this._updatePanelState();\n        this._changeDetectorRef.detectChanges();\n        if (this.panelOpen) {\n          this._overlayRef.updatePosition();\n        }\n        if (wasOpen !== this.panelOpen) {\n          // If the `panelOpen` state changed, we need to make sure to emit the `opened` or\n          // `closed` event, because we may not have emitted it. This can happen\n          // - if the users opens the panel and there are no options, but the\n          //   options come in slightly later or as a result of the value changing,\n          // - if the panel is closed after the user entered a string that did not match any\n          //   of the available options,\n          // - if a valid string is entered after an invalid one.\n          if (this.panelOpen) {\n            this._emitOpened();\n          } else {\n            this.autocomplete.closed.emit();\n          }\n        }\n      });\n      return this.panelClosingActions;\n    }),\n    // when the first closing event occurs...\n    take(1))\n    // set the value, close the panel, and complete.\n    .subscribe(event => this._setValueAndClose(event));\n  }\n  /**\n   * Emits the opened event once it's known that the panel will be shown and stores\n   * the state of the trigger right before the opening sequence was finished.\n   */\n  _emitOpened() {\n    this.autocomplete.opened.emit();\n  }\n  /** Destroys the autocomplete suggestion panel. */\n  _destroyPanel() {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n  /** Given a value, returns the string that should be shown within the input. */\n  _getDisplayValue(value) {\n    const autocomplete = this.autocomplete;\n    return autocomplete && autocomplete.displayWith ? autocomplete.displayWith(value) : value;\n  }\n  _assignOptionValue(value) {\n    const toDisplay = this._getDisplayValue(value);\n    if (value == null) {\n      this._clearPreviousSelectedOption(null, false);\n    }\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    this._updateNativeInputValue(toDisplay != null ? toDisplay : '');\n  }\n  _updateNativeInputValue(value) {\n    // If it's used within a `MatFormField`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      this._formField._control.value = value;\n    } else {\n      this._element.nativeElement.value = value;\n    }\n    this._previousValue = value;\n  }\n  /**\n   * This method closes the panel, and if a value is specified, also sets the associated\n   * control to that value. It will also mark the control as dirty if this interaction\n   * stemmed from the user.\n   */\n  _setValueAndClose(event) {\n    const panel = this.autocomplete;\n    const toSelect = event ? event.source : this._pendingAutoselectedOption;\n    if (toSelect) {\n      this._clearPreviousSelectedOption(toSelect);\n      this._assignOptionValue(toSelect.value);\n      // TODO(crisbeto): this should wait until the animation is done, otherwise the value\n      // gets reset while the panel is still animating which looks glitchy. It'll likely break\n      // some tests to change it at this point.\n      this._onChange(toSelect.value);\n      panel._emitSelectEvent(toSelect);\n      this._element.nativeElement.focus();\n    } else if (panel.requireSelection && this._element.nativeElement.value !== this._valueOnAttach) {\n      this._clearPreviousSelectedOption(null);\n      this._assignOptionValue(null);\n      // Wait for the animation to finish before clearing the form control value, otherwise\n      // the options might change while the animation is running which looks glitchy.\n      if (panel._animationDone) {\n        panel._animationDone.pipe(take(1)).subscribe(() => this._onChange(null));\n      } else {\n        this._onChange(null);\n      }\n    }\n    this.closePanel();\n  }\n  /**\n   * Clear any previous selected option and emit a selection change event for this option\n   */\n  _clearPreviousSelectedOption(skip, emitEvent) {\n    // Null checks are necessary here, because the autocomplete\n    // or its options may not have been assigned yet.\n    this.autocomplete?.options?.forEach(option => {\n      if (option !== skip && option.selected) {\n        option.deselect(emitEvent);\n      }\n    });\n  }\n  _openPanelInternal(valueOnAttach = this._element.nativeElement.value) {\n    this._attachOverlay(valueOnAttach);\n    this._floatLabel();\n    // Add aria-owns attribute when the autocomplete becomes visible.\n    if (this._trackedModal) {\n      const panelId = this.autocomplete.id;\n      addAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    }\n  }\n  _attachOverlay(valueOnAttach) {\n    if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatAutocompleteMissingPanelError();\n    }\n    let overlayRef = this._overlayRef;\n    if (!overlayRef) {\n      this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, {\n        id: this._formField?.getLabelId()\n      });\n      overlayRef = this._overlay.create(this._getOverlayConfig());\n      this._overlayRef = overlayRef;\n      this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n        if (this.panelOpen && overlayRef) {\n          overlayRef.updateSize({\n            width: this._getPanelWidth()\n          });\n        }\n      });\n    } else {\n      // Update the trigger, panel width and direction, in case anything has changed.\n      this._positionStrategy.setOrigin(this._getConnectedElement());\n      overlayRef.updateSize({\n        width: this._getPanelWidth()\n      });\n    }\n    if (overlayRef && !overlayRef.hasAttached()) {\n      overlayRef.attach(this._portal);\n      this._valueOnAttach = valueOnAttach;\n      this._valueOnLastKeydown = null;\n      this._closingActionsSubscription = this._subscribeToClosingActions();\n    }\n    const wasOpen = this.panelOpen;\n    this.autocomplete._isOpen = this._overlayAttached = true;\n    this.autocomplete._latestOpeningTrigger = this;\n    this.autocomplete._setColor(this._formField?.color);\n    this._updatePanelState();\n    this._applyModalPanelOwnership();\n    // We need to do an extra `panelOpen` check in here, because the\n    // autocomplete won't be shown if there are no options.\n    if (this.panelOpen && wasOpen !== this.panelOpen) {\n      this._emitOpened();\n    }\n  }\n  /** Updates the panel's visibility state and any trigger state tied to id. */\n  _updatePanelState() {\n    this.autocomplete._setVisibility();\n    // Note that here we subscribe and unsubscribe based on the panel's visiblity state,\n    // because the act of subscribing will prevent events from reaching other overlays and\n    // we don't want to block the events if there are no options.\n    if (this.panelOpen) {\n      const overlayRef = this._overlayRef;\n      if (!this._keydownSubscription) {\n        // Use the `keydownEvents` in order to take advantage of\n        // the overlay event targeting provided by the CDK overlay.\n        this._keydownSubscription = overlayRef.keydownEvents().subscribe(this._handlePanelKeydown);\n      }\n      if (!this._outsideClickSubscription) {\n        // Subscribe to the pointer events stream so that it doesn't get picked up by other overlays.\n        // TODO(crisbeto): we should switch `_getOutsideClickStream` eventually to use this stream,\n        // but the behvior isn't exactly the same and it ends up breaking some internal tests.\n        this._outsideClickSubscription = overlayRef.outsidePointerEvents().subscribe();\n      }\n    } else {\n      this._keydownSubscription?.unsubscribe();\n      this._outsideClickSubscription?.unsubscribe();\n      this._keydownSubscription = this._outsideClickSubscription = null;\n    }\n  }\n  _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPosition(),\n      scrollStrategy: this._scrollStrategy(),\n      width: this._getPanelWidth(),\n      direction: this._dir ?? undefined,\n      panelClass: this._defaults?.overlayPanelClass\n    });\n  }\n  _getOverlayPosition() {\n    const strategy = this._overlay.position().flexibleConnectedTo(this._getConnectedElement()).withFlexibleDimensions(false).withPush(false);\n    this._setStrategyPositions(strategy);\n    this._positionStrategy = strategy;\n    return strategy;\n  }\n  /** Sets the positions on a position strategy based on the directive's input state. */\n  _setStrategyPositions(positionStrategy) {\n    // Note that we provide horizontal fallback positions, even though by default the dropdown\n    // width matches the input, because consumers can override the width. See #18854.\n    const belowPositions = [{\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'top'\n    }, {\n      originX: 'end',\n      originY: 'bottom',\n      overlayX: 'end',\n      overlayY: 'top'\n    }];\n    // The overlay edge connected to the trigger should have squared corners, while\n    // the opposite end has rounded corners. We apply a CSS class to swap the\n    // border-radius based on the overlay position.\n    const panelClass = this._aboveClass;\n    const abovePositions = [{\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'bottom',\n      panelClass\n    }, {\n      originX: 'end',\n      originY: 'top',\n      overlayX: 'end',\n      overlayY: 'bottom',\n      panelClass\n    }];\n    let positions;\n    if (this.position === 'above') {\n      positions = abovePositions;\n    } else if (this.position === 'below') {\n      positions = belowPositions;\n    } else {\n      positions = [...belowPositions, ...abovePositions];\n    }\n    positionStrategy.withPositions(positions);\n  }\n  _getConnectedElement() {\n    if (this.connectedTo) {\n      return this.connectedTo.elementRef;\n    }\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n  }\n  _getPanelWidth() {\n    return this.autocomplete.panelWidth || this._getHostWidth();\n  }\n  /** Returns the width of the input element, so the panel width can match it. */\n  _getHostWidth() {\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n  /**\n   * Reset the active item to -1. This is so that pressing arrow keys will activate the correct\n   * option.\n   *\n   * If the consumer opted-in to automatically activatating the first option, activate the first\n   * *enabled* option.\n   */\n  _resetActiveItem() {\n    const autocomplete = this.autocomplete;\n    if (autocomplete.autoActiveFirstOption) {\n      // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n      // because it activates the first option that passes the skip predicate, rather than the\n      // first *enabled* option.\n      let firstEnabledOptionIndex = -1;\n      for (let index = 0; index < autocomplete.options.length; index++) {\n        const option = autocomplete.options.get(index);\n        if (!option.disabled) {\n          firstEnabledOptionIndex = index;\n          break;\n        }\n      }\n      autocomplete._keyManager.setActiveItem(firstEnabledOptionIndex);\n    } else {\n      autocomplete._keyManager.setActiveItem(-1);\n    }\n  }\n  /** Determines whether the panel can be opened. */\n  _canOpen() {\n    const element = this._element.nativeElement;\n    return !element.readOnly && !element.disabled && !this.autocompleteDisabled;\n  }\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  _getWindow() {\n    return this._document?.defaultView || window;\n  }\n  /** Scrolls to a particular option in the list. */\n  _scrollToOption(index) {\n    // Given that we are not actually focusing active options, we must manually adjust scroll\n    // to reveal options below the fold. First, we find the offset of the option from the top\n    // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n    // the panel height + the option height, so the active option will be just visible at the\n    // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n    // will become the offset. If that offset is visible within the panel already, the scrollTop is\n    // not adjusted.\n    const autocomplete = this.autocomplete;\n    const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n    if (index === 0 && labelCount === 1) {\n      // If we've got one group label before the option and we're at the top option,\n      // scroll the list to the top. This is better UX than scrolling the list to the\n      // top of the option, because it allows the user to read the top group's label.\n      autocomplete._setScrollTop(0);\n    } else if (autocomplete.panel) {\n      const option = autocomplete.options.toArray()[index];\n      if (option) {\n        const element = option._getHostElement();\n        const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n        autocomplete._setScrollTop(newScrollPosition);\n      }\n    }\n  }\n  /**\n   * If the autocomplete trigger is inside of an `aria-modal` element, connect\n   * that modal to the options panel with `aria-owns`.\n   *\n   * For some browser + screen reader combinations, when navigation is inside\n   * of an `aria-modal` element, the screen reader treats everything outside\n   * of that modal as hidden or invisible.\n   *\n   * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n   * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n   * from reaching the panel.\n   *\n   * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n   * the options panel. This effectively communicates to assistive technology that the\n   * options panel is part of the same interaction as the modal.\n   *\n   * At time of this writing, this issue is present in VoiceOver.\n   * See https://github.com/angular/components/issues/20694\n   */\n  _applyModalPanelOwnership() {\n    // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n    // the `LiveAnnouncer` and any other usages.\n    //\n    // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n    // section of the DOM we need to look through. This should cover all the cases we support, but\n    // the selector can be expanded if it turns out to be too narrow.\n    const modal = this._element.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n    if (!modal) {\n      // Most commonly, the autocomplete trigger is not inside a modal.\n      return;\n    }\n    const panelId = this.autocomplete.id;\n    if (this._trackedModal) {\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n    }\n    addAriaReferencedId(modal, 'aria-owns', panelId);\n    this._trackedModal = modal;\n  }\n  /** Clears the references to the listbox overlay element from the modal it was added to. */\n  _clearFromModal() {\n    if (this._trackedModal) {\n      const panelId = this.autocomplete.id;\n      removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n      this._trackedModal = null;\n    }\n  }\n  static {\n    this.ɵfac = function MatAutocompleteTrigger_Factory(t) {\n      return new (t || MatAutocompleteTrigger)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(i3.ViewportRuler), i0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatAutocompleteTrigger,\n      selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]],\n      hostAttrs: [1, \"mat-mdc-autocomplete-trigger\"],\n      hostVars: 7,\n      hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() {\n            return ctx._handleFocus();\n          })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() {\n            return ctx._onTouched();\n          })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) {\n            return ctx._handleInput($event);\n          })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          })(\"click\", function MatAutocompleteTrigger_click_HostBindingHandler() {\n            return ctx._handleClick();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-controls\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", ctx.autocompleteDisabled ? null : \"listbox\");\n        }\n      },\n      inputs: {\n        autocomplete: [i0.ɵɵInputFlags.None, \"matAutocomplete\", \"autocomplete\"],\n        position: [i0.ɵɵInputFlags.None, \"matAutocompletePosition\", \"position\"],\n        connectedTo: [i0.ɵɵInputFlags.None, \"matAutocompleteConnectedTo\", \"connectedTo\"],\n        autocompleteAttribute: [i0.ɵɵInputFlags.None, \"autocomplete\", \"autocompleteAttribute\"],\n        autocompleteDisabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"matAutocompleteDisabled\", \"autocompleteDisabled\", booleanAttribute]\n      },\n      exportAs: [\"matAutocompleteTrigger\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n      host: {\n        'class': 'mat-mdc-autocomplete-trigger',\n        '[attr.autocomplete]': 'autocompleteAttribute',\n        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n        '[attr.aria-controls]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n        '[attr.aria-haspopup]': 'autocompleteDisabled ? null : \"listbox\"',\n        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n        // a little earlier. This avoids issues where IE delays the focusing of the input.\n        '(focusin)': '_handleFocus()',\n        '(blur)': '_onTouched()',\n        '(input)': '_handleInput($event)',\n        '(keydown)': '_handleKeydown($event)',\n        '(click)': '_handleClick()'\n      },\n      exportAs: 'matAutocompleteTrigger',\n      providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1$1.Overlay\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n    }]\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i4.MatFormField,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_FORM_FIELD]\n    }, {\n      type: Host\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: i3.ViewportRuler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n    }]\n  }], {\n    autocomplete: [{\n      type: Input,\n      args: ['matAutocomplete']\n    }],\n    position: [{\n      type: Input,\n      args: ['matAutocompletePosition']\n    }],\n    connectedTo: [{\n      type: Input,\n      args: ['matAutocompleteConnectedTo']\n    }],\n    autocompleteAttribute: [{\n      type: Input,\n      args: ['autocomplete']\n    }],\n    autocompleteDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'matAutocompleteDisabled',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MatAutocompleteModule {\n  static {\n    this.ɵfac = function MatAutocompleteModule_Factory(t) {\n      return new (t || MatAutocompleteModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatAutocompleteModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n      imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule, CdkScrollableModule, MatOptionModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatAutocompleteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule, MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n      exports: [CdkScrollableModule, MatAutocomplete, MatOptionModule, MatCommonModule, MatAutocompleteTrigger, MatAutocompleteOrigin],\n      providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n","import { Component, ElementRef, Inject, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatChipInputEvent } from \"@angular/material/chips\";\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Observable, startWith, debounceTime, switchMap, map, Subject, distinctUntilChanged, Subscription, of, catchError } from \"rxjs\";\r\nimport { MatAutocompleteSelectedEvent } from \"@angular/material/autocomplete\";\r\nimport { GroupsService } from \"../../../group/services/app-groups.service\";\r\nimport { TagsService } from \"../../../tag/services/tags.service\";\r\nimport { AppsService } from \"../../services/apps.service\";\r\nimport { UpdateAppRequestBody } from \"../../models/update-app-request-body\";\r\nimport { ConfirmationDialogComponent } from \"../../../../shared/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { isNullOrWhiteSpace } from \"../../../../shared/utils/other-utils\";\r\nimport { UpdateAppRequestBodyTag } from \"../../models/update-app-request-body-tag\";\r\nimport { AppEditComponentReturnModel } from \"../../models/app-editor-component-return.model\";\r\nimport { AppEditComponentModel } from \"../../models/app-edit-component.model\";\r\nimport { GetAppGroupsResponseGroup } from \"../../../group/models/get-app-groups-response-group\";\r\nimport { GetTagsResponseTag } from \"../../../tag/models/get-tags-response-tag\";\r\nimport { ConflictResolverDialogComponent, ConflictResolverReturnType } from \"../../../../shared/components/conflict-resolver-dialog/conflict-resolver-dialog.component\";\r\n\r\n@Component({\r\n    templateUrl: './app-update.component.html'\r\n})\r\nexport class AppUpdateComponent implements OnInit, OnDestroy {\r\n    myForm!: FormGroup;\r\n    filteredGroups$?: Observable<GetAppGroupsResponseGroup[]>;\r\n    filteredTags$?: Observable<GetTagsResponseTag[]>;\r\n    groupFirstTimeClicked: boolean = true;\r\n    tagFirstTimeClicked: boolean = true;\r\n    prefetchedAppTags: GetTagsResponseTag[] = [];\r\n    subscriptions = new Subscription();\r\n\r\n    @ViewChild('tagSearchInput') tagSearchInput!: ElementRef<HTMLInputElement>;\r\n    private destroy$ = new Subject<void>();\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private formBuilder: FormBuilder,\r\n        public dialogRef: MatDialogRef<AppUpdateComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public model: AppEditComponentModel,\r\n        private appsService: AppsService,\r\n        private groupsService: GroupsService,\r\n        private tagsService: TagsService) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.myForm = this.formBuilder.group({\r\n            displayName: [this.model.displayName],\r\n            clientName: [this.model.clientName, Validators.required],\r\n            slug: [this.model.slug, Validators.required],\r\n            groupName: [this.model.group?.name ?? ''],\r\n            description: [this.model.description],\r\n            imageUrl: [this.model.imageUrl],\r\n            wikiUrl: [this.model.wikiUrl],\r\n            tags: [[...(this.model.tags ?? [])]],\r\n            tagSearch: ['']\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    onAppGroupFieldFocus() {\r\n\r\n        if (!this.groupFirstTimeClicked) {\r\n            return;\r\n        }\r\n\r\n        this.groupFirstTimeClicked = false;\r\n\r\n        const formField = this.myForm.get('groupName')!;\r\n\r\n        const groupName$ = formField.valueChanges.pipe(\r\n            startWith(formField.value),\r\n            debounceTime(300),\r\n            distinctUntilChanged());\r\n\r\n        this.filteredGroups$ = groupName$.pipe(\r\n            switchMap(value => this.groupsService.getGroups({\r\n                searchTerm: value\r\n            }).pipe(map(response => response.data?.appGroups ?? []))));\r\n    }\r\n\r\n    onAppTagFieldFocus() {\r\n\r\n        if (!this.tagFirstTimeClicked) {\r\n            return;\r\n        }\r\n\r\n        this.tagFirstTimeClicked = false;\r\n\r\n        const formField = this.myForm.get('tagSearch')!;\r\n\r\n        const tagName$ = formField.valueChanges.pipe(\r\n            startWith(formField.value),\r\n            debounceTime(300),\r\n            distinctUntilChanged());\r\n\r\n        this.filteredTags$ = tagName$.pipe(\r\n            switchMap(value => this.tagsService.getTags({\r\n                searchTerm: value\r\n            }).pipe(map(response => {\r\n\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return [];\r\n                }\r\n\r\n                this.prefetchedAppTags = responseData.tags;\r\n\r\n                return this.prefetchedAppTags.filter(tag =>\r\n                    !this.tags.some(currentTag => currentTag.id === tag.id)\r\n                );\r\n            }))));\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.myForm.valid) {\r\n\r\n            const formValue = this.myForm.value;\r\n\r\n            const updatedClientName = formValue.clientName;\r\n\r\n            if (this.model.clientName !== updatedClientName) {\r\n\r\n                const title = 'Confirm edit';\r\n                const message = 'Updating the \"Client Name\" may cause problems. Do you want to proceed? (Potential start-up syncing issue)';\r\n\r\n                const subscription = this.dialog.open(ConfirmationDialogComponent, {\r\n                    width: '500px',\r\n                    data: { title, message }\r\n                }).afterClosed().subscribe(result => {\r\n                    if (result) {\r\n                        this.update(formValue);\r\n                    }\r\n                });\r\n\r\n                this.subscriptions.add(subscription);\r\n            } else {\r\n                this.update(formValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(formValue: any) {\r\n        const model: UpdateAppRequestBody = {\r\n            displayName: formValue.displayName,\r\n            client: {\r\n                id: this.model.clientId,\r\n                name: formValue.clientName\r\n            },\r\n            slug: formValue.slug,\r\n            group: isNullOrWhiteSpace(formValue.groupName)\r\n                ? null\r\n                : {\r\n                    name: formValue.groupName\r\n                },\r\n            description: formValue.description,\r\n            imageUrl: formValue.imageUrl,\r\n            wikiUrl: formValue.wikiUrl,\r\n            tags: formValue.tags,\r\n            rowVersion: this.model.rowVersion\r\n        };\r\n\r\n        const updateApp = (appId: string, body: UpdateAppRequestBody) => {\r\n            return this.appsService.updateApp({ appId, body });\r\n        }\r\n\r\n        const handleUpdate = (rowVersion?: string): Observable<any> => {\r\n            return updateApp(this.model.appId, model).pipe(\r\n                switchMap(response => {\r\n\r\n                    const responseData = response.data;\r\n\r\n                    if (!responseData && response.extras) {\r\n\r\n                        const conflictedData = response.extras['Conflicts'][this.model.appId];\r\n\r\n                        const availableReturnTypes: ConflictResolverReturnType[] = ['Discard', 'Override', 'Fetch Latest'];\r\n\r\n                        return this.dialog.open(ConflictResolverDialogComponent, {\r\n                            width: '400px',\r\n                            data: availableReturnTypes,\r\n                            autoFocus: false\r\n                        }).afterClosed().pipe(\r\n                            switchMap((type: ConflictResolverReturnType) => {\r\n                                if (type === \"Override\") {\r\n\r\n                                    const rowVersion = conflictedData.properties['RowVersion'].current;\r\n\r\n                                    model.rowVersion = rowVersion;\r\n\r\n                                    return handleUpdate(rowVersion);\r\n                                } else if (type === \"Fetch Latest\") {\r\n\r\n                                    const getAppSubscription = this.appsService.getAppById({ appIdOrSlug: this.model.appId }).subscribe({\r\n                                        next: (appResponse) => {\r\n\r\n                                            const appResponseData = appResponse.data;\r\n\r\n                                            if (!appResponseData) {\r\n                                                return;\r\n                                            }\r\n\r\n                                            const appEditComponentReturnModel: AppEditComponentReturnModel = {\r\n                                                displayName: appResponseData.displayName,\r\n                                                clientName: appResponseData.client.name,\r\n                                                slug: appResponseData.slug,\r\n                                                group: appResponseData.group ? { id: appResponseData.group.id, name: appResponseData.group.name, sortOrder: appResponseData.group.sortOrder } : null,\r\n                                                description: appResponseData.description,\r\n                                                imageUrl: appResponseData.imageUrl,\r\n                                                wikiUrl: appResponseData.wikiUrl,\r\n                                                tags: appResponseData.tags.map(t => ({ id: t.id, name: t.name, sortOrder: t.sortOrder })),\r\n                                                rowVersion: appResponseData.rowVersion,\r\n                                                type: \"Fetch Latest\"\r\n                                            };\r\n\r\n                                            this.snackBar.open(`Latest data fetched successfully!`, 'Close', {\r\n                                                horizontalPosition: 'right',\r\n                                                verticalPosition: 'top',\r\n                                                duration: 5000\r\n                                            });\r\n\r\n                                            this.dialogRef.close(appEditComponentReturnModel);\r\n                                        }\r\n                                    });\r\n\r\n                                    this.subscriptions.add(getAppSubscription);\r\n                                }\r\n\r\n                                return of(false);\r\n                            }));\r\n                    }\r\n                    else if (!responseData) {\r\n                        return of(false);\r\n                    }\r\n                    else {\r\n\r\n                        const appEditComponentReturnModel: AppEditComponentReturnModel = {\r\n                            displayName: responseData.displayName,\r\n                            clientName: responseData.clientName,\r\n                            slug: responseData.slug,\r\n                            group: responseData.group ? { id: responseData.group.id, name: responseData.group.name, sortOrder: responseData.group.sortOrder } : null,\r\n                            description: responseData.description,\r\n                            imageUrl: responseData.imageUrl,\r\n                            wikiUrl: responseData.wikiUrl,\r\n                            tags: responseData.tags.map(t => ({ id: t.id, name: t.name, sortOrder: t.sortOrder })),\r\n                            rowVersion: rowVersion ?? responseData.rowVersion\r\n                        };\r\n\r\n                        this.snackBar.open(`Data has been updated successfully!`, 'Close', {\r\n                            horizontalPosition: 'right',\r\n                            verticalPosition: 'top',\r\n                            duration: 5000\r\n                        });\r\n\r\n                        this.dialogRef.close(appEditComponentReturnModel);\r\n\r\n                    }\r\n\r\n\r\n                    return of(true);\r\n\r\n                }));\r\n        };\r\n\r\n        this.subscriptions.add(handleUpdate().subscribe());\r\n    }\r\n\r\n    onCancel() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    get tags(): UpdateAppRequestBodyTag[] {\r\n        return this.myForm.get('tags')!.value;\r\n    }\r\n\r\n    onTagEntered(event: MatChipInputEvent): void {\r\n        const value = (event.value || '');\r\n\r\n        this.addTag(value);\r\n    }\r\n\r\n    addTag(tag: string) {\r\n        const value = tag.trim();\r\n\r\n        const valueLowercase = value.toLowerCase();\r\n\r\n        if (value && this.tags.findIndex(t => t.name.toLowerCase() === valueLowercase) === -1) {\r\n\r\n            const id = this.prefetchedAppTags.find(t => t.name.toLowerCase() === valueLowercase)?.id ?? '0';\r\n\r\n            this.tags.push({\r\n                id: id,\r\n                name: value\r\n            });\r\n        }\r\n\r\n        this.myForm.get('tagSearch')?.setValue('');\r\n        this.tagSearchInput.nativeElement.value = '';\r\n    }\r\n\r\n    deleteTag(keyword: string) {\r\n        const index = this.tags.findIndex(tag => tag.name === keyword);\r\n        if (index !== -1) {\r\n            this.tags.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    onTagSelected(event: MatAutocompleteSelectedEvent): void {\r\n        const value = event.option.value as string;\r\n\r\n        this.addTag(value);\r\n    }\r\n}","<form [formGroup]=\"myForm\">\r\n    <h2 mat-dialog-title>Update - {{model.clientName}}</h2>\r\n    <mat-dialog-content>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Display Name</mat-label>\r\n            <input matInput formControlName=\"displayName\" [maxLength]=\"50\">\r\n            <mat-error>Please provide a valid value</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Client Name</mat-label>\r\n            <input matInput formControlName=\"clientName\" [maxLength]=\"50\">\r\n            <mat-error>Please provide a valid value</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Slug</mat-label>\r\n            <input matInput formControlName=\"slug\" [maxLength]=\"50\">\r\n            <mat-error>Please provide a valid value</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Group</mat-label>\r\n            <input matInput formControlName=\"groupName\" [maxLength]=\"50\" [matAutocomplete]=\"groupAuto\"\r\n                (focus)=\"onAppGroupFieldFocus()\">\r\n            <button mat-icon-button matSuffix *ngIf=\"myForm.get('groupName')?.value\" (click)=\"myForm.get('groupName')?.setValue('')\" type=\"button\"><mat-icon fontIcon=\"clear\"></mat-icon></button>\r\n            <mat-error>Please provide a valid value</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Description</mat-label>\r\n            <textarea matInput formControlName=\"description\" [maxLength]=\"250\"></textarea>\r\n            <mat-error>Please provide a valid value</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Image Url</mat-label>\r\n            <input matInput formControlName=\"imageUrl\">\r\n            <mat-error>Please provide a valid value</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Wiki Url</mat-label>\r\n            <input matInput formControlName=\"wikiUrl\">\r\n            <mat-error>Please provide a valid value</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Tags</mat-label>\r\n            <mat-chip-grid #chipGrid>\r\n                @for (tag of tags; track tag) {\r\n                <mat-chip-row (removed)=\"deleteTag(tag.name)\">\r\n                    {{tag.name}}\r\n                    <button matChipRemove>\r\n                        <mat-icon>cancel</mat-icon>\r\n                    </button>\r\n                </mat-chip-row>\r\n                }\r\n            </mat-chip-grid>\r\n            <input #tagSearchInput placeholder=\"New tag... (press 'Enter' to add)\" [matChipInputFor]=\"chipGrid\"\r\n                formControlName=\"tagSearch\" (matChipInputTokenEnd)=\"onTagEntered($event)\" [matAutocomplete]=\"auto\"\r\n                (focus)=\"onAppTagFieldFocus()\" />\r\n        </mat-form-field>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions class=\"modal-footer\">\r\n        <button mat-button mat-dialog-close>Cancel</button>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"myForm.invalid\" (click)=\"onSubmit()\">Save</button>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n<mat-autocomplete #groupAuto=\"matAutocomplete\">\r\n    <mat-option *ngFor=\"let option of filteredGroups$ | async\" [value]=\"option.name\">\r\n        {{ option.name }}\r\n    </mat-option>\r\n</mat-autocomplete>\r\n\r\n<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onTagSelected($event)\">\r\n    <mat-option *ngFor=\"let option of filteredTags$ | async\" [value]=\"option.name\">\r\n        {{ option.name }}\r\n    </mat-option>\r\n</mat-autocomplete>","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MatChipInputEvent } from \"@angular/material/chips\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { debounceTime, distinctUntilChanged, map, Observable, startWith, Subscription, switchMap } from \"rxjs\";\r\nimport { MatAutocompleteSelectedEvent } from \"@angular/material/autocomplete\";\r\nimport { CustomValidators } from \"../../../../shared/utils/custom-validators\";\r\nimport { AppsService } from \"../../services/apps.service\";\r\nimport { UtilityService } from \"../../../../shared/services/utility.service\";\r\nimport { ConfirmationDialogComponent } from \"../../../../shared/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { isNullOrWhiteSpace } from \"../../../../shared/utils/other-utils\";\r\nimport { GroupsService } from \"../../../group/services/app-groups.service\";\r\nimport { TagsService } from \"../../../tag/services/tags.service\";\r\nimport { CreateAppRequestBody } from \"../../models/create-app-request-body\";\r\nimport { GetAppGroupsResponseGroup } from \"../../../group/models/get-app-groups-response-group\";\r\nimport { GetTagsResponseTag } from \"../../../tag/models/get-tags-response-tag\";\r\nimport { WindowService } from \"../../../../core/services/window.service\";\r\n\r\n@Component({\r\n    templateUrl: './app-create.component.html',\r\n    styleUrls: ['./app-create.component.css']\r\n})\r\nexport class AppCreateComponent implements OnInit, OnDestroy {\r\n    isFullScreen: boolean = false;\r\n    form!: FormGroup;\r\n    filteredGroups$?: Observable<GetAppGroupsResponseGroup[]>;\r\n    filteredTags$?: Observable<GetTagsResponseTag[]>;\r\n    selectedGroupId: string | null = null;\r\n    groupFirstTimeClicked: boolean = true;\r\n    tagFirstTimeClicked: boolean = true;\r\n    prefetchedAppTags: GetTagsResponseTag[] = [];\r\n    isConnectionSecure?: boolean\r\n    subscriptions = new Subscription();\r\n\r\n    @ViewChild('tagSearchInput') tagSearchInput!: ElementRef<HTMLInputElement>;\r\n\r\n    constructor(public dialogRef: MatDialogRef<AppCreateComponent>,\r\n        private appsService: AppsService,\r\n        private groupsService: GroupsService,\r\n        private tagsService: TagsService,\r\n        private formBuilder: FormBuilder,\r\n        private utilityService: UtilityService,\r\n        private windowService: WindowService,\r\n        private snackBar: MatSnackBar,\r\n        private dialog: MatDialog\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.form = this.formBuilder.group({\r\n            displayName: [''],\r\n            clientName: ['', Validators.required],\r\n            slug: [''],\r\n            clientId: [uuidv4(), [Validators.required, CustomValidators.mustGuid]],\r\n            clientSecret: [uuidv4(), [Validators.required, CustomValidators.mustGuid]],\r\n            groupName: [''],\r\n            groupId: ['0'],\r\n            description: [''],\r\n            imageUrl: [''],\r\n            wikiUrl: [''],\r\n            tags: [[]],\r\n            tagSearch: ['']\r\n        });\r\n\r\n        this.isConnectionSecure = this.windowService.isConnectionSecure;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    generateGuid(formName: string) {\r\n        this.form.get(formName)?.setValue(uuidv4());\r\n    }\r\n\r\n    toggleFullScreen() {\r\n        this.isFullScreen = !this.isFullScreen;\r\n\r\n        const dialogElement = document.querySelector('.mat-mdc-dialog-surface');\r\n\r\n        if (this.isFullScreen) {\r\n\r\n            dialogElement?.setAttribute('style', `\r\n                  border-radius: 0 !important;\r\n                `);\r\n\r\n            this.dialogRef.updateSize('100%', '100%');\r\n        } else {\r\n            this.dialogRef.updateSize('1350px', '680px');\r\n            dialogElement?.removeAttribute('style');\r\n        }\r\n    }\r\n\r\n    get tags(): GetTagsResponseTag[] {\r\n        return this.form.get('tags')!.value;\r\n    }\r\n\r\n    onAppGroupFieldFocus() {\r\n\r\n        if (!this.groupFirstTimeClicked) {\r\n            return;\r\n        }\r\n\r\n        this.groupFirstTimeClicked = false;\r\n\r\n        const formField = this.form.get('groupName')!;\r\n\r\n        const groupName$ = formField.valueChanges.pipe(\r\n            startWith(formField.value),\r\n            debounceTime(300),\r\n            distinctUntilChanged());\r\n\r\n        this.filteredGroups$ = groupName$.pipe(\r\n            switchMap(value => this.groupsService.getGroups({\r\n                searchTerm: value\r\n            }).pipe(map(response => {\r\n                const responseData = response.data?.appGroups;\r\n\r\n                if (!responseData) {\r\n                    return [];\r\n                }\r\n\r\n                const selectedGroup = responseData.find(group => group.name.toLowerCase() === value.toLowerCase());\r\n                this.selectedGroupId = selectedGroup ? selectedGroup.id : null;\r\n\r\n                return responseData;\r\n            }\r\n            ))));\r\n    }\r\n\r\n    onAppTagFieldFocus() {\r\n\r\n        if (!this.tagFirstTimeClicked) {\r\n            return;\r\n        }\r\n\r\n        this.tagFirstTimeClicked = false;\r\n\r\n        const formField = this.form.get('tagSearch')!;\r\n\r\n        const tagName$ = formField.valueChanges.pipe(\r\n            startWith(formField.value),\r\n            debounceTime(300),\r\n            distinctUntilChanged());\r\n\r\n        this.filteredTags$ = tagName$.pipe(\r\n            switchMap(value => this.tagsService.getTags({\r\n                searchTerm: value\r\n            }).pipe(map(response => {\r\n\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return [];\r\n                }\r\n\r\n                this.prefetchedAppTags = responseData.tags;\r\n\r\n                return this.prefetchedAppTags.filter(tag =>\r\n                    !this.tags.some(currentTag => currentTag.id === tag.id)\r\n                );\r\n            }))));\r\n    }\r\n\r\n    onSubmit() {\r\n\r\n        if (!this.form.valid) {\r\n            return;\r\n        }\r\n\r\n        const title = 'Warn!';\r\n        const message = 'Unsaved \"Client Secret\" will not retrievable later. Do you want to proceed?';\r\n\r\n        const subscription = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: '500px',\r\n            data: { title, message }\r\n        }).afterClosed().subscribe(result => {\r\n            if (result) {\r\n                const formValue = this.form.value;\r\n\r\n                this.add(formValue);\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    add(formValue: any) {\r\n\r\n        const model: CreateAppRequestBody = {\r\n            displayName: formValue.displayName,\r\n            slug: formValue.slug,\r\n            client: {\r\n                name: formValue.clientName,\r\n                id: formValue.clientId,\r\n                secret: formValue.clientSecret\r\n            },\r\n            group: isNullOrWhiteSpace(formValue.groupName)\r\n                ? null\r\n                : {\r\n                    id: this.selectedGroupId ?? formValue.groupId,\r\n                    name: formValue.groupName,\r\n                    sortOrder: 0\r\n                },\r\n            description: formValue.description,\r\n            imageUrl: formValue.imageUrl,\r\n            wikiUrl: formValue.wikiUrl,\r\n            tags: formValue.tags\r\n        };\r\n\r\n        const subscription = this.appsService.createApp({ body: model }).subscribe(response => {\r\n            if (response) {\r\n\r\n                this.snackBar.open(`Added successfully!`, 'Close', {\r\n                    horizontalPosition: 'right',\r\n                    verticalPosition: 'top',\r\n                    duration: 5000\r\n                });\r\n\r\n                this.dialogRef.close(response.data);\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    onTagEntered(event: MatChipInputEvent): void {\r\n        const value = (event.value || '');\r\n\r\n        this.addTag(value);\r\n    }\r\n\r\n    addTag(tag: string) {\r\n        const value = tag.trim();\r\n\r\n        const valueLowercase = value.toLowerCase();\r\n\r\n        if (value && this.tags.findIndex(t => t.name.toLowerCase() === valueLowercase) === -1) {\r\n\r\n            const id = this.prefetchedAppTags.find(t => t.name.toLowerCase() === valueLowercase)?.id ?? '0';\r\n\r\n            this.tags.push({\r\n                id: id,\r\n                name: value,\r\n                sortOrder: 0,\r\n                rowVersion: ''\r\n            });\r\n        }\r\n\r\n        this.form.get('tagSearch')?.setValue('');\r\n        this.tagSearchInput.nativeElement.value = '';\r\n    }\r\n\r\n    deleteTag(keyword: string) {\r\n        const index = this.tags.findIndex(tag => tag.name === keyword);\r\n        if (index !== -1) {\r\n            this.tags.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    onTagSelected(event: MatAutocompleteSelectedEvent): void {\r\n        const value = event.option.value as string;\r\n\r\n        this.addTag(value);\r\n    }\r\n\r\n    copyToClipboard(input: string) {\r\n\r\n        const form = this.form.get(input);\r\n\r\n        if (form) {\r\n            this.utilityService.copyToClipboard(form.value);\r\n        }\r\n    }\r\n}","<div class=\"d-flex border-bottom\">\r\n    <div class=\"dialog-title\">Create a new app</div>\r\n    <span></span>\r\n    <span class=\"spacer\"></span>\r\n    <button mat-icon-button (click)=\"toggleFullScreen()\"\r\n        [matTooltip]=\"isFullScreen ? 'Exit full screen' : 'Enter full screen'\" matTooltipPosition=\"above\">\r\n        <mat-icon>{{ isFullScreen ? 'fullscreen_exit' : 'fullscreen' }}</mat-icon>\r\n    </button>\r\n    <button mat-icon-button mat-dialog-close matToolTip=\"Close\" matTooltipPosition=\"above\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-dialog-content>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Client Name</mat-label>\r\n            <input matInput formControlName=\"clientName\" />\r\n            <mat-hint>This name should match the project name specified in the project settings and must be unique (also\r\n                known as the startup project), e.g., \"Provider.Api\".</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Client Id</mat-label>\r\n            <input matInput formControlName=\"clientId\" />\r\n            <button color=\"primary\" type=\"button\" matSuffix mat-icon-button matTooltip=\"Random\"\r\n                matTooltipPosition=\"below\" (click)=\"generateGuid('clientId')\">\r\n                <mat-icon>casino</mat-icon>\r\n            </button>\r\n            <button color=\"primary\" type=\"button\" matSuffix mat-icon-button matTooltip=\"Copy\" matTooltipPosition=\"below\"\r\n                (click)=\"copyToClipboard('clientId')\" *ngIf=\"isConnectionSecure\">\r\n                <mat-icon>content_copy</mat-icon>\r\n            </button>\r\n            <mat-error *ngIf=\"form.get('clientId')?.hasError('invalidGuid')\" class=\"mb-2\">Invalid GUID. Please use the\r\n                format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Client Secret</mat-label>\r\n            <input matInput formControlName=\"clientSecret\" />\r\n            <mat-hint>Save it somewhere secure.</mat-hint>\r\n            <button color=\"primary\" type=\"button\" matSuffix mat-icon-button matTooltip=\"Random\"\r\n                matTooltipPosition=\"below\" (click)=\"generateGuid('clientSecret')\">\r\n                <mat-icon>casino</mat-icon>\r\n            </button>\r\n            <button color=\"primary\" type=\"button\" matSuffix mat-icon-button matTooltip=\"Copy\" matTooltipPosition=\"below\"\r\n                (click)=\"copyToClipboard('clientSecret')\" *ngIf=\"isConnectionSecure\">\r\n                <mat-icon>content_copy</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n        <mat-error *ngIf=\"form.get('clientSecret')?.hasError('invalidGuid')\" class=\"mb-2\">Invalid GUID. Please use the\r\n            format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.</mat-error>\r\n        <mat-accordion multi>\r\n            <mat-expansion-panel expanded=\"false\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>Others</mat-panel-title>\r\n                    <mat-panel-description>\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>Group</mat-label>\r\n                    <input matInput formControlName=\"groupName\" [maxLength]=\"50\" [matAutocomplete]=\"groupAuto\"\r\n                        (focus)=\"onAppGroupFieldFocus()\">\r\n                    <mat-error>Please provide a valid value</mat-error>\r\n                    <button mat-icon-button matSuffix *ngIf=\"form.get('groupName')?.value\"\r\n                        (click)=\"form.get('groupName')?.setValue('')\" type=\"button\"><mat-icon\r\n                            fontIcon=\"clear\"></mat-icon></button>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Display Name</mat-label>\r\n                    <textarea matInput formControlName=\"displayName\" [maxLength]=\"250\"></textarea>\r\n                    <mat-error>Please provide a valid value</mat-error>\r\n                </mat-form-field>\r\n                <!-- <mat-form-field>\r\n                    <mat-label>Slug</mat-label>\r\n                    <textarea matInput formControlName=\"slug\" [maxLength]=\"250\"></textarea>\r\n                    <mat-error>Please provide a valid value</mat-error>\r\n                </mat-form-field> -->\r\n                <mat-form-field>\r\n                    <mat-label>Description</mat-label>\r\n                    <textarea matInput formControlName=\"description\" [maxLength]=\"250\"></textarea>\r\n                    <mat-error>Please provide a valid value</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Image Url</mat-label>\r\n                    <input matInput formControlName=\"imageUrl\">\r\n                    <mat-error>Please provide a valid value</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>WikiUrl</mat-label>\r\n                    <input matInput formControlName=\"wikiUrl\">\r\n                    <mat-error>Please provide a valid value</mat-error>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\">\r\n                    <mat-label>Tags</mat-label>\r\n                    <mat-chip-grid #chipGrid>\r\n                        @for (tag of tags; track tag) {\r\n                        <mat-chip-row (removed)=\"deleteTag(tag.name)\">\r\n                            {{tag.name}}\r\n                            <button matChipRemove>\r\n                                <mat-icon>cancel</mat-icon>\r\n                            </button>\r\n                        </mat-chip-row>\r\n                        }\r\n                    </mat-chip-grid>\r\n                    <input #tagSearchInput placeholder=\"New tag... (press 'Enter' to add)\" [matChipInputFor]=\"chipGrid\"\r\n                        formControlName=\"tagSearch\" (matChipInputTokenEnd)=\"onTagEntered($event)\"\r\n                        [matAutocomplete]=\"auto\" (focus)=\"onAppTagFieldFocus()\" />\r\n                </mat-form-field>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions>\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" class=\"ml-3\">\r\n            Create\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>\r\n\r\n<mat-autocomplete #groupAuto=\"matAutocomplete\">\r\n    <mat-option *ngFor=\"let option of filteredGroups$ | async\" [value]=\"option.name\">\r\n        {{ option.name }}\r\n    </mat-option>\r\n</mat-autocomplete>\r\n\r\n<mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onTagSelected($event)\">\r\n    <mat-option *ngFor=\"let option of filteredTags$ | async\" [value]=\"option.name\">\r\n        {{ option.name }}\r\n    </mat-option>\r\n</mat-autocomplete>","export const APP_ROUTES = {\r\n    base: '',\r\n    create: 'create',\r\n    update: ':appId/update',\r\n    view: ':appId',\r\n};\r\n\r\nexport const APP_VIEW_ROUTES = {\r\n    viewNewIdentifierMapping: 'new',\r\n    viewSettings: ':identifierId/settings',\r\n    viewSettings2: 'settings',\r\n    viewSetting: ':identifierId/settings/:settingId',\r\n    viewConfiguration: ':identifierId/configuration',\r\n    viewCreateSetting: ':identifierId/settings/new',\r\n    viewUpdateSetting: ':identifierId/settings/:settingId/update',\r\n    viewCopySettingTo: ':identifierId/settings/:settingId/copyTo',\r\n    viewSettingHistories: ':identifierId/settings/:settingId/histories',\r\n    viewSettingHistory: ':identifierId/settings/:settingId/histories/:historyId',\r\n    viewInstances: ':identifierId/instances',\r\n    viewInstances2: 'instances',\r\n    viewInstance: ':identifierId/instances/:instanceId'\r\n};\r\n\r\nexport type APP_VIEW_ROUTES_TYPE =\r\n    'viewNewIdentifierMapping' |\r\n    'viewSettings' |\r\n    'viewSetting' |\r\n    'viewCreateSetting' |\r\n    'viewUpdateSetting' |\r\n    'viewCopySettingTo' |\r\n    'viewSettingHistories' |\r\n    'viewSettingHistory' |\r\n    'viewInstances' |\r\n    'viewInstance' |\r\n    'viewConfiguration' ;","import { HttpHeaders, HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable, OnDestroy } from \"@angular/core\";\r\nimport { catchError, Observable, of, Subject, takeUntil } from \"rxjs\";\r\nimport { AuthService } from \"../../core/services/auth.service\";\r\nimport { WindowService } from \"../../core/services/window.service\";\r\nimport { IResponse, IResponseAny } from \"../models/response\";\r\nimport { CreateAppIdentifierMappingRequest } from \"../../features/app/models/create-app-identifier-mapping-request\";\r\nimport { CreateAppIdentifierMappingResponse } from \"../../features/app/models/create-app-identifier-mapping-response\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppIdentifierMappingsService implements OnDestroy {\r\n    private headers: HttpHeaders = new HttpHeaders();\r\n    private route: string;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private authService: AuthService,\r\n        windowService: WindowService) {\r\n        this.route = windowService.controllerOptions.route;\r\n        this.authService.isAuthenticated$\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(isAuthenticated => {\r\n                this.headers = isAuthenticated\r\n                    ? new HttpHeaders({ 'Authorization': `${this.authService.token}` })\r\n                    : new HttpHeaders();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    getAppIdentifierMappingsByAppId(request: GetAppIdentifierMappingsRequest): Observable<IResponse<GetAppIdentifierMappingsResponse>> {\r\n\r\n        const url = this.route + '/v1/apps/' + request.appIdOrSlug + '/identifiers';\r\n\r\n        return this.httpClient.get<IResponse<GetAppIdentifierMappingsResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getAppIdentifierMappingsByAppSlug(request: GetAppIdentifierMappingsRequest): Observable<IResponse<GetAppIdentifierMappingsResponse>> {\r\n\r\n        const url = this.route + '/v1/apps/slug' + request.appIdOrSlug + '/identifiers';\r\n\r\n        return this.httpClient.get<IResponse<GetAppIdentifierMappingsResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getAppIdentifierMappingByAppIdAndIdentifierId(request: GetAppIdentifierMappingByAppAndIdentifierRequest): Observable<IResponse<GetAppIdentifierMappingByAppAndIdentifierResponse>> {\r\n\r\n        const url = this.route + '/v1/apps/' + request.appIdOrSlug + '/identifiers/' + request.identifierIdOrSlug;\r\n\r\n        return this.httpClient.get<IResponse<GetAppIdentifierMappingByAppAndIdentifierResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getAppIdentifierMappingByAppSlugAndIdentifierSlug(request: GetAppIdentifierMappingByAppAndIdentifierRequest): Observable<IResponse<GetAppIdentifierMappingByAppAndIdentifierResponse>> {\r\n\r\n        const url = this.route + '/v1/apps/slug/' + request.appIdOrSlug + '/identifiers/' + request.identifierIdOrSlug;\r\n\r\n        return this.httpClient.get<IResponse<GetAppIdentifierMappingByAppAndIdentifierResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    createAppIdentifierMapping(request: CreateAppIdentifierMappingRequest): Observable<IResponse<CreateAppIdentifierMappingResponse>> {\r\n\r\n        const url = this.route + '/v1/apps/' + request.appId + '/identifiers';\r\n\r\n        return this.httpClient.post<IResponse<CreateAppIdentifierMappingResponse>>(url, request.body, { headers: this.headers });\r\n    }\r\n\r\n    deleteAppIdentifierMapping(request: DeleteAppIdentifierMappingRequest): Observable<IResponseAny> {\r\n\r\n        const url = this.route + '/v1/apps/' + request.appId + '/identifiers/' + request.identifierId + '?rowVersion=' + encodeURIComponent(request.mappingRowVersion);\r\n\r\n        return this.httpClient.delete<IResponseAny>(url, { headers: this.headers });\r\n    }\r\n\r\n    updateAppIdentifierMappingSortOrder(request: UpdateAppIdentifierMappingSortOrderRequest): Observable<IResponse<UpdateAppIdentifierMappingSortOrderResponse>> {\r\n\r\n        const url = this.route + '/v1/apps/' + request.appId + '/identifiers/' + request.identifierId + '/sort-order';\r\n\r\n        return this.httpClient.put<IResponse<UpdateAppIdentifierMappingSortOrderResponse>>(url, request.body, { headers: this.headers }).pipe(\r\n            catchError((response: HttpErrorResponse) => {\r\n                if (response.status === 409) {\r\n                    return of(response.error as IResponse<UpdateAppIdentifierMappingSortOrderResponse>);\r\n                }\r\n\r\n                throw response;\r\n            })\r\n        );;\r\n    }\r\n}\r\n\r\nexport interface DeleteAppIdentifierMappingRequest {\r\n    appId: string;\r\n    identifierId: string;\r\n    mappingRowVersion: string;\r\n}\r\n\r\nexport interface UpdateAppIdentifierMappingSortOrderRequest {\r\n    appId: string;\r\n    identifierId: string;\r\n    body: UpdateAppIdentifierMappingSortOrderRequestBody;\r\n}\r\n\r\nexport interface UpdateAppIdentifierMappingSortOrderRequestBody {\r\n    ascent: boolean;\r\n    rowVersion: string;\r\n}\r\n\r\nexport interface UpdateAppIdentifierMappingSortOrderResponse {\r\n    sortOrder: number;\r\n    rowVersion: string;\r\n}\r\n\r\nexport interface GetAppIdentifierMappingsRequest {\r\n    appIdOrSlug: string;\r\n}\r\n\r\nexport interface GetAppIdentifierMappingsResponseIdentifier {\r\n    id: string;\r\n    sortOrder: number;\r\n    mappingSortOrder: number;\r\n    mappingRowVersion: string;\r\n}\r\n\r\nexport interface GetAppIdentifierMappingsResponse {\r\n    minSortOrder: number;\r\n    maxSortOrder: number;\r\n    mappingMinSortOrder: number;\r\n    mappingMaxSortOrder: number;\r\n    identifiers: GetAppIdentifierMappingsResponseIdentifier[];\r\n}\r\n\r\nexport interface GetAppIdentifierMappingByAppAndIdentifierRequest {\r\n    appIdOrSlug: string;\r\n    identifierIdOrSlug: string;\r\n}\r\n\r\nexport interface GetAppIdentifierMappingByAppAndIdentifierResponse {\r\n    mappingSortOrder: number;\r\n    appId: string;\r\n    identifier: GetAppIdentifierMappingByAppAndIdentifierResponseSettingIdentifer\r\n}\r\n\r\nexport interface GetAppIdentifierMappingByAppAndIdentifierResponseSettingIdentifer {\r\n    id: string;\r\n    sortOrder: number;\r\n}","import { AfterViewInit, Component, ElementRef, Inject, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { debounceTime, distinctUntilChanged, map, Observable, startWith, Subject, Subscription, switchMap, timeout } from \"rxjs\";\r\nimport { isNullOrWhiteSpace } from \"../../../../shared/utils/other-utils\";\r\nimport { GetIdentifierResponse } from \"../../../identifier/models/get-identifier-response\";\r\nimport { IdentifiersService } from \"../../../identifier/services/identifiers.service\";\r\nimport { SetSortOrderPosition } from \"../../../sponsor/models/set-order-position.enum\";\r\nimport { GetIdentifiersResponseIdentifier } from \"../../../identifier/models/get-identifiers-response-identifier\";\r\nimport { AppIdentifierMappingsService } from \"../../../../shared/services/app-identifier-mappings.service\";\r\nimport { CreateAppIdentifierMappingRequestBody } from \"../../../app/models/create-app-identifier-mapping-request-body\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { CreateAppIdentifierMappingResponse } from \"../../../app/models/create-app-identifier-mapping-response\";\r\nimport { IResponse } from \"../../../../shared/models/response\";\r\n\r\n@Component({\r\n    templateUrl: './identifier-mapping-create.component.html'\r\n})\r\nexport class IdentifierMappingCreateComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    myForm!: FormGroup;\r\n    filteredAppIdentifiers$?: Observable<GetIdentifierResponse[]>;\r\n    selectedAppIdentifierId: string | null = null;\r\n    selectedAppIdentifierOrder: number | null = null;\r\n    fieldFirstTimeClicked: boolean = true;\r\n    title?: string = '';\r\n    isManualOrder: boolean = false;\r\n    setSortOrderPositions = SetSortOrderPosition;\r\n    defaultPosition: SetSortOrderPosition = SetSortOrderPosition.Bottom;\r\n\r\n    private destroy$ = new Subject<void>();\r\n    private subscriptions: Subscription = new Subscription();\r\n\r\n    @ViewChild('input') input!: ElementRef<HTMLInputElement>;\r\n\r\n    constructor(\r\n        private snackBar: MatSnackBar,\r\n        public dialogRef: MatDialogRef<IdentifierMappingCreateComponent>,\r\n        private formBuilder: FormBuilder,\r\n        @Inject(MAT_DIALOG_DATA) public model: AppIdentifierAddComponentModel,\r\n        private identifiersService: IdentifiersService,\r\n        private appIdentifierMappingsService: AppIdentifierMappingsService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.title = this.model.title ? this.model.title : `New mapping - ${this.model.clientName}`;\r\n\r\n        this.myForm = this.formBuilder.group({\r\n            identifierName: ['', [Validators.required, this.identifierValidator]],\r\n            identifierId: ['0'],\r\n            position: [this.defaultPosition]\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            this.input.nativeElement.focus();\r\n        }, 0);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    identifierValidator = (control: any) => {\r\n\r\n        if (isNullOrWhiteSpace(control.value)) {\r\n            return { invalidIdentifierName: true };\r\n        }\r\n\r\n        if (this.model.identifiers.some(s => s.name.toLowerCase() === control.value.toLowerCase())) {\r\n            return { identifierExists: true };\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    onFieldFocus() {\r\n\r\n        if (!this.fieldFirstTimeClicked) {\r\n            return;\r\n        }\r\n\r\n        this.fieldFirstTimeClicked = false;\r\n\r\n        const formField = this.myForm.get('identifierName')!;\r\n\r\n        const identifierName$ = formField.valueChanges.pipe(\r\n            startWith(formField.value),\r\n            debounceTime(300),\r\n            distinctUntilChanged());\r\n\r\n        this.filteredAppIdentifiers$ = identifierName$.pipe(\r\n            switchMap(value => this.identifiersService.getIdentifiers({\r\n                searchTerm: value\r\n            }).pipe(map(response => {\r\n\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return [];\r\n                }\r\n\r\n                const identifiers = responseData.identifiers.filter(s => !this.model.identifiers.some(i => i.id === s.id));\r\n\r\n                const selectedIdentifier = identifiers.find(group => group.name.toLowerCase() === value.toLowerCase());\r\n                this.selectedAppIdentifierId = selectedIdentifier ? selectedIdentifier.id : null;\r\n                this.selectedAppIdentifierOrder = selectedIdentifier ? selectedIdentifier.sortOrder : null;\r\n\r\n                return identifiers;\r\n            }\r\n            ))));\r\n    }\r\n\r\n    onSubmit() {\r\n\r\n        if (!this.myForm.valid) {\r\n            return;\r\n        }\r\n\r\n        const formValue = this.myForm.value;\r\n\r\n        const model: CreateAppIdentifierMappingRequestBody = {\r\n            setSortOrderPosition: formValue.position,\r\n            identifier: {\r\n                id: this.selectedAppIdentifierId ?? formValue.identifierId,\r\n                name: formValue.identifierName\r\n            }\r\n        };\r\n\r\n        const subscription = this.appIdentifierMappingsService.createAppIdentifierMapping({\r\n            appId: this.model.appId,\r\n            body: model\r\n        }).subscribe({\r\n            next: (response) => {\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                const returnModel: AppIdentifierAddComponentReturnModel = {\r\n                    mappingSortOrder: responseData.identifier.mappingSortOrder,\r\n                    identifierId: responseData.identifier.id,\r\n                    identifierName: model.identifier.name,\r\n                    identifierSortOrder: responseData.identifier.sortOrder\r\n                };\r\n\r\n                this.snackBar.open(`Added successfully!`, 'Close', {\r\n                    horizontalPosition: 'right',\r\n                    verticalPosition: 'top',\r\n                    duration: 5000\r\n                });\r\n\r\n                this.dialogRef.close(returnModel);\r\n\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n\r\n                const error = err.error as IResponse<CreateAppIdentifierMappingResponse>;\r\n\r\n                if(error){\r\n\r\n                    if(error.errors?.find(e => e.traces === 'MappingAlreadyExists')){\r\n\r\n                        const errorSubscription = this.appIdentifierMappingsService.getAppIdentifierMappingByAppSlugAndIdentifierSlug({\r\n                            appIdOrSlug: this.model.appSlug,\r\n                            identifierIdOrSlug: formValue.identifierName\r\n                        }).subscribe(resp => {\r\n\r\n                            const responseData = resp.data;\r\n\r\n                            if(!responseData){\r\n                                return;\r\n                            }\r\n\r\n                            const returnModel: AppIdentifierAddComponentReturnModel = {\r\n                                mappingSortOrder: responseData.mappingSortOrder,\r\n                                identifierId: responseData.identifier.id,\r\n                                identifierName: model.identifier.name,\r\n                                identifierSortOrder: responseData.identifier.sortOrder\r\n                            };\r\n\r\n\r\n                            this.dialogRef.close(returnModel);\r\n                        });\r\n\r\n                        this.subscriptions.add(errorSubscription);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n    \r\n\r\n    onPositionChange(): void {\r\n        const position = this.myForm.get('position')?.value;\r\n        if (position === -1) {\r\n            this.isManualOrder = true;\r\n        } else {\r\n            this.isManualOrder = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface AppIdentifierAddComponentModel {\r\n    appId: string;\r\n    appSlug: string;\r\n    clientName: string;\r\n    identifiers: GetIdentifiersResponseIdentifier[];\r\n    title?: string;\r\n}\r\n\r\nexport interface AppIdentifierAddComponentReturnModel {\r\n    mappingSortOrder: number;\r\n    identifierId: string;\r\n    identifierName: string;\r\n    identifierSortOrder: number;\r\n}","<div class=\"d-flex mb-2 pb-2 border-bottom\">\r\n    <mat-card-header>\r\n        <mat-card-title>{{title}}</mat-card-title>\r\n    </mat-card-header>\r\n    <span></span>\r\n    <span class=\"spacer\"></span>\r\n    <!-- <button mat-icon-button (click)=\"toggleFullScreen()\"\r\n        [matTooltip]=\"isFullScreen ? 'Exit full screen' : 'Enter full screen'\" matTooltipPosition=\"above\">\r\n        <mat-icon>{{ isFullScreen ? 'fullscreen_exit' : 'fullscreen' }}</mat-icon>\r\n    </button> -->\r\n    <button mat-icon-button mat-dialog-close matToolTip=\"Close\" matTooltipPosition=\"above\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-card-content class=\"mt-2\">\r\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Name</mat-label>\r\n            <input #input type=\"text\" matInput formControlName=\"identifierName\" [maxLength]=\"50\"\r\n                [matAutocomplete]=\"groupAuto\" (focus)=\"onFieldFocus()\">\r\n            <mat-hint>If identifier missing, will be created along with the mapping.</mat-hint>\r\n            <button mat-icon-button matSuffix *ngIf=\"myForm.get('identifierName')!.value\" type=\"button\"\r\n                (click)=\"myForm.get('identifierName')!.setValue('')\" matTooltip=\"clear\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n            <button mat-icon-button matSuffix [disabled]=\"myForm.invalid\" type=\"submit\" color=\"primary\">\r\n                <mat-icon>check_circle</mat-icon>\r\n            </button>\r\n            <mat-error *ngIf=\"myForm.get('identifierName')?.hasError('identifierExists')\">Identifier already\r\n                exists.</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Position</mat-label>\r\n            <mat-select formControlName=\"position\" (selectionChange)=\"onPositionChange()\">\r\n                <mat-option [value]=\"setSortOrderPositions.Top\">Top</mat-option>\r\n                <mat-option [value]=\"setSortOrderPositions.Bottom\">Bottom</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n</mat-card-content>\r\n\r\n<mat-autocomplete #groupAuto=\"matAutocomplete\">\r\n    <mat-option *ngFor=\"let option of filteredAppIdentifiers$ | async\" [value]=\"option.name\">\r\n        {{ option.name }}\r\n    </mat-option>\r\n</mat-autocomplete>","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { catchError, Observable, of, Subject, takeUntil } from 'rxjs';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { WindowService } from '../../../core/services/window.service';\r\nimport { CreateSettingRequest } from '../models/create-setting-request';\r\nimport { CreateSettingResponse } from '../models/create-setting-response';\r\nimport { GetSettingsDataRequest } from '../models/get-settings-data-request';\r\nimport { UpdateSettingDataRequest } from '../models/update-setting-data-request';\r\nimport { UpdateSettingDataResponse } from '../models/update-setting-data-response';\r\nimport { GetSettingDataRequest } from '../models/get-setting-data-request';\r\nimport { GetSettingDataResponse } from '../models/get-setting-data-response';\r\nimport { CopySettingToRequest } from '../models/copy-setting-to-request';\r\nimport { CopySettingToResponse } from '../models/copy-setting-to-response';\r\nimport { DeleteSettingRequest } from '../models/delete-setting-request';\r\nimport { UpdateSettingRequest } from '../models/update-setting-request';\r\nimport { UpdateSettingResponse } from '../models/update-setting-response';\r\nimport { IResponse, IResponseAny } from '../../../shared/models/response';\r\nimport { GetSettingByIdRequest } from '../models/get-setting-by-id-request';\r\nimport { GetSettingByIdResponse } from '../models/get-setting-by-id-response';\r\nimport { GetSettingsDataResponse } from '../models/get-settings-data-response';\r\nimport { GetSettingsByIdentifierIdResponseData } from '../models/get-settings-by-identifier-id-response-data';\r\nimport { GetSettingsByIdentifierIdRequest } from '../models/get-settings-by-identifier-id-request';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SettingsService implements OnDestroy {\r\n    private headers: HttpHeaders = new HttpHeaders();\r\n    private route: string;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private authService: AuthService,\r\n        windowService: WindowService) {\r\n        this.route = windowService.controllerOptions.route;\r\n        this.authService.isAuthenticated$\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe(isAuthenticated => {\r\n          this.headers = isAuthenticated\r\n            ? new HttpHeaders({ 'Authorization': `${this.authService.token}` })\r\n            : new HttpHeaders();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n      }\r\n\r\n    getSettingsByAppIdAndIdentifierId(request: GetSettingsByIdentifierIdRequest): Observable<IResponse<GetSettingsByIdentifierIdResponseData[]>> {\r\n\r\n        const url = this.route + '/v1/apps/' + request.appIdOrSlug + '/identifiers/' + request.identifierIdOrSlug + '/settings';\r\n\r\n        return this.httpClient.get<IResponse<GetSettingsByIdentifierIdResponseData[]>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getSettingsByAppSlugAndIdentifierSlug(request: GetSettingsByIdentifierIdRequest): Observable<IResponse<GetSettingsByIdentifierIdResponseData[]>> {\r\n\r\n        const url = this.route + '/v1/apps/slug' + request.appIdOrSlug + '/identifiers/' + request.identifierIdOrSlug + '/settings';\r\n\r\n        return this.httpClient.get<IResponse<GetSettingsByIdentifierIdResponseData[]>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getSettingsData(request: GetSettingsDataRequest): Observable<IResponse<GetSettingsDataResponse>> {\r\n\r\n        let url = this.route + '/v1/apps/' + request.appId + '/settings/data';\r\n\r\n        let params = new HttpParams();\r\n\r\n        if (request.identifierId) {\r\n            params = params.append('identifierId', request.identifierId);\r\n        }\r\n\r\n        if (request.ids && request.ids.length > 0) {\r\n            params = params.append('ids', request.ids.join(','));\r\n        }\r\n\r\n        const queryParams = params.toString()\r\n\r\n        url += queryParams ? '?' + queryParams : '';\r\n\r\n        return this.httpClient.get<IResponse<GetSettingsDataResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    copySettingTo(request: CopySettingToRequest): Observable<IResponse<CopySettingToResponse>> {\r\n        \r\n        const url = this.route + '/v1/settings/' + request.settingId + '/copy';\r\n\r\n        return this.httpClient.post<IResponse<CopySettingToResponse>>(url, request.body, { headers: this.headers });\r\n    }\r\n\r\n    getSettingData(request: GetSettingDataRequest): Observable<IResponse<GetSettingDataResponse>> {\r\n\r\n        const url = this.route + '/v1/settings/' + request.settingId + '/data';\r\n\r\n        return this.httpClient.get<IResponse<GetSettingDataResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    deleteSetting(request: DeleteSettingRequest): Observable<IResponseAny> {\r\n\r\n        const url = this.route + '/v1/settings/' + request.settingId + '?rowVersion=' + encodeURIComponent(request.rowVersion);\r\n\r\n        return this.httpClient.delete<IResponseAny>(url, { headers: this.headers });\r\n    }\r\n\r\n    getSettingById(request: GetSettingByIdRequest): Observable<IResponse<GetSettingByIdResponse>> {\r\n\r\n        let url = this.route + '/v1/settings/' + request.settingId;\r\n\r\n        let params = new HttpParams();\r\n\r\n        if(request.excludes){\r\n            params = params.append('excludes', request.excludes.join(','));\r\n        }\r\n\r\n        const queryParams = params.toString();\r\n\r\n        url +=  queryParams ? '?' + queryParams : '';\r\n\r\n        return this.httpClient.get<IResponse<GetSettingByIdResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    updateSetting(request: UpdateSettingRequest): Observable<IResponse<UpdateSettingResponse>> {\r\n\r\n        const url = this.route + '/v1/settings/' + request.settingId;\r\n\r\n        return this.httpClient.put<IResponse<UpdateSettingResponse>>(url, request.body, { headers: this.headers }).pipe(\r\n            catchError((response: HttpErrorResponse) => {\r\n                if(response.status === 409){\r\n                    return of(response.error as IResponse<UpdateSettingResponse>);\r\n                }\r\n\r\n                throw response;\r\n            })\r\n        );;\r\n    }\r\n\r\n    createSetting(request: CreateSettingRequest): Observable<IResponse<CreateSettingResponse>> {\r\n\r\n        const url = this.route + '/v1/settings';\r\n\r\n        return this.httpClient.post<IResponse<CreateSettingResponse>>(url, request.body, { headers: this.headers });\r\n    }\r\n\r\n    updateSettingData(request: UpdateSettingDataRequest): Observable<IResponse<UpdateSettingDataResponse>> {\r\n\r\n        const url = this.route + '/v1/settings/' + request.settingId + '/data';\r\n\r\n        return this.httpClient.put<IResponse<UpdateSettingDataResponse>>(url, request.body, { headers: this.headers }).pipe(\r\n            catchError((response: HttpErrorResponse) => {\r\n                if(response.status === 409){\r\n                    return of(response.error as IResponse<UpdateSettingDataResponse>);\r\n                }\r\n\r\n                throw response;\r\n            })\r\n        );\r\n    }\r\n}","import * as i1 from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, booleanAttribute, Directive, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRipple, MatPseudoCheckbox, MatCommonModule, MatRippleModule } from '@angular/material/core';\n\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nfunction MatButtonToggle_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nfunction MatButtonToggle_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS', {\n  providedIn: 'root',\n  factory: MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    hideSingleSelectionIndicator: false,\n    hideMultipleSelectionIndicator: false\n  };\n}\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatButtonToggleGroup),\n  multi: true\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by button toggle. */\nclass MatButtonToggleChange {\n  constructor( /** The button toggle that emits the event. */\n  source, /** The value assigned to the button toggle. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n  /** `name` attribute for the underlying `input` element. */\n  get name() {\n    return this._name;\n  }\n  set name(value) {\n    this._name = value;\n    this._markButtonsForCheck();\n  }\n  /** Value of the toggle group. */\n  get value() {\n    const selected = this._selectionModel ? this._selectionModel.selected : [];\n    if (this.multiple) {\n      return selected.map(toggle => toggle.value);\n    }\n    return selected[0] ? selected[0].value : undefined;\n  }\n  set value(newValue) {\n    this._setSelectionByValue(newValue);\n    this.valueChange.emit(this.value);\n  }\n  /** Selected button toggles in the group. */\n  get selected() {\n    const selected = this._selectionModel ? this._selectionModel.selected : [];\n    return this.multiple ? selected : selected[0] || null;\n  }\n  /** Whether multiple button toggles can be selected. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = value;\n    this._markButtonsForCheck();\n  }\n  /** Whether multiple button toggle group is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._markButtonsForCheck();\n  }\n  /** Whether checkmark indicator for single-selection button toggle groups is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._markButtonsForCheck();\n  }\n  /** Whether checkmark indicator for multiple-selection button toggle groups is hidden. */\n  get hideMultipleSelectionIndicator() {\n    return this._hideMultipleSelectionIndicator;\n  }\n  set hideMultipleSelectionIndicator(value) {\n    this._hideMultipleSelectionIndicator = value;\n    this._markButtonsForCheck();\n  }\n  constructor(_changeDetector, defaultOptions) {\n    this._changeDetector = _changeDetector;\n    this._multiple = false;\n    this._disabled = false;\n    /**\n     * The method to be called in order to update ngModel.\n     * Now `ngModel` binding is not supported in multiple selection mode.\n     */\n    this._controlValueAccessorChangeFn = () => {};\n    /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n    this._onTouched = () => {};\n    this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n    /**\n     * Event that emits whenever the value of the group changes.\n     * Used to facilitate two-way data binding.\n     * @docs-private\n     */\n    this.valueChange = new EventEmitter();\n    /** Event emitted when the group's value changes. */\n    this.change = new EventEmitter();\n    this.appearance = defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    this.hideSingleSelectionIndicator = defaultOptions?.hideSingleSelectionIndicator ?? false;\n    this.hideMultipleSelectionIndicator = defaultOptions?.hideMultipleSelectionIndicator ?? false;\n  }\n  ngOnInit() {\n    this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n  }\n  ngAfterContentInit() {\n    this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n  }\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value Value to be set to the model.\n   */\n  writeValue(value) {\n    this.value = value;\n    this._changeDetector.markForCheck();\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /** Dispatch change event with current selection and group value. */\n  _emitChangeEvent(toggle) {\n    const event = new MatButtonToggleChange(toggle, this.value);\n    this._rawValue = event.value;\n    this._controlValueAccessorChangeFn(event.value);\n    this.change.emit(event);\n  }\n  /**\n   * Syncs a button toggle's selected state with the model value.\n   * @param toggle Toggle to be synced.\n   * @param select Whether the toggle should be selected.\n   * @param isUserInput Whether the change was a result of a user interaction.\n   * @param deferEvents Whether to defer emitting the change events.\n   */\n  _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n    // Deselect the currently-selected toggle, if we're in single-selection\n    // mode and the button being toggled isn't selected at the moment.\n    if (!this.multiple && this.selected && !toggle.checked) {\n      this.selected.checked = false;\n    }\n    if (this._selectionModel) {\n      if (select) {\n        this._selectionModel.select(toggle);\n      } else {\n        this._selectionModel.deselect(toggle);\n      }\n    } else {\n      deferEvents = true;\n    }\n    // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n    // the side-effect is that we may end up updating the model value out of sequence in others\n    // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n    if (deferEvents) {\n      Promise.resolve().then(() => this._updateModelValue(toggle, isUserInput));\n    } else {\n      this._updateModelValue(toggle, isUserInput);\n    }\n  }\n  /** Checks whether a button toggle is selected. */\n  _isSelected(toggle) {\n    return this._selectionModel && this._selectionModel.isSelected(toggle);\n  }\n  /** Determines whether a button toggle should be checked on init. */\n  _isPrechecked(toggle) {\n    if (typeof this._rawValue === 'undefined') {\n      return false;\n    }\n    if (this.multiple && Array.isArray(this._rawValue)) {\n      return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n    }\n    return toggle.value === this._rawValue;\n  }\n  /** Updates the selection state of the toggles in the group based on a value. */\n  _setSelectionByValue(value) {\n    this._rawValue = value;\n    if (!this._buttonToggles) {\n      return;\n    }\n    if (this.multiple && value) {\n      if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Value must be an array in multiple-selection mode.');\n      }\n      this._clearSelection();\n      value.forEach(currentValue => this._selectValue(currentValue));\n    } else {\n      this._clearSelection();\n      this._selectValue(value);\n    }\n  }\n  /** Clears the selected toggles. */\n  _clearSelection() {\n    this._selectionModel.clear();\n    this._buttonToggles.forEach(toggle => toggle.checked = false);\n  }\n  /** Selects a value if there's a toggle that corresponds to it. */\n  _selectValue(value) {\n    const correspondingOption = this._buttonToggles.find(toggle => {\n      return toggle.value != null && toggle.value === value;\n    });\n    if (correspondingOption) {\n      correspondingOption.checked = true;\n      this._selectionModel.select(correspondingOption);\n    }\n  }\n  /** Syncs up the group's value with the model and emits the change event. */\n  _updateModelValue(toggle, isUserInput) {\n    // Only emit the change event for user input.\n    if (isUserInput) {\n      this._emitChangeEvent(toggle);\n    }\n    // Note: we emit this one no matter whether it was a user interaction, because\n    // it is used by Angular to sync up the two-way data binding.\n    this.valueChange.emit(this.value);\n  }\n  /** Marks all of the child button toggles to be checked. */\n  _markButtonsForCheck() {\n    this._buttonToggles?.forEach(toggle => toggle._markForCheck());\n  }\n  static {\n    this.ɵfac = function MatButtonToggleGroup_Factory(t) {\n      return new (t || MatButtonToggleGroup)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatButtonToggleGroup,\n      selectors: [[\"mat-button-toggle-group\"]],\n      contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatButtonToggle, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n        }\n      },\n      hostAttrs: [\"role\", \"group\", 1, \"mat-button-toggle-group\"],\n      hostVars: 5,\n      hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-disabled\", ctx.disabled);\n          i0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n        }\n      },\n      inputs: {\n        appearance: \"appearance\",\n        name: \"name\",\n        vertical: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"vertical\", \"vertical\", booleanAttribute],\n        value: \"value\",\n        multiple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"multiple\", \"multiple\", booleanAttribute],\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        hideSingleSelectionIndicator: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n        hideMultipleSelectionIndicator: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hideMultipleSelectionIndicator\", \"hideMultipleSelectionIndicator\", booleanAttribute]\n      },\n      outputs: {\n        valueChange: \"valueChange\",\n        change: \"change\"\n      },\n      exportAs: [\"matButtonToggleGroup\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, {\n        provide: MAT_BUTTON_TOGGLE_GROUP,\n        useExisting: MatButtonToggleGroup\n      }]), i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonToggleGroup, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-button-toggle-group',\n      providers: [MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, {\n        provide: MAT_BUTTON_TOGGLE_GROUP,\n        useExisting: MatButtonToggleGroup\n      }],\n      host: {\n        'role': 'group',\n        'class': 'mat-button-toggle-group',\n        '[attr.aria-disabled]': 'disabled',\n        '[class.mat-button-toggle-vertical]': 'vertical',\n        '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"'\n      },\n      exportAs: 'matButtonToggleGroup',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n    }]\n  }], {\n    _buttonToggles: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatButtonToggle), {\n        // Note that this would technically pick up toggles\n        // from nested groups, but that's not a case that we support.\n        descendants: true\n      }]\n    }],\n    appearance: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    change: [{\n      type: Output\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideMultipleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/** Single button inside of a toggle group. */\nclass MatButtonToggle {\n  /** Unique ID for the underlying `button` element. */\n  get buttonId() {\n    return `${this.id}-button`;\n  }\n  /** The appearance style of the button. */\n  get appearance() {\n    return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n  }\n  set appearance(value) {\n    this._appearance = value;\n  }\n  /** Whether the button is checked. */\n  get checked() {\n    return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n  }\n  set checked(value) {\n    if (value !== this._checked) {\n      this._checked = value;\n      if (this.buttonToggleGroup) {\n        this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Whether the button is disabled. */\n  get disabled() {\n    return this._disabled || this.buttonToggleGroup && this.buttonToggleGroup.disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    this._focusMonitor = _focusMonitor;\n    this._checked = false;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    this.ariaLabelledby = null;\n    this._disabled = false;\n    /** Event emitted when the group value changes. */\n    this.change = new EventEmitter();\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n    this.buttonToggleGroup = toggleGroup;\n    this.appearance = defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n  }\n  ngOnInit() {\n    const group = this.buttonToggleGroup;\n    this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n    if (group) {\n      if (group._isPrechecked(this)) {\n        this.checked = true;\n      } else if (group._isSelected(this) !== this._checked) {\n        // As side effect of the circular dependency between the toggle group and the button,\n        // we may end up in a state where the button is supposed to be checked on init, but it\n        // isn't, because the checked value was assigned too early. This can happen when Ivy\n        // assigns the static input value before the `ngOnInit` has run.\n        group._syncButtonToggle(this, this._checked);\n      }\n    }\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n  ngOnDestroy() {\n    const group = this.buttonToggleGroup;\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    // Remove the toggle from the selection once it's destroyed. Needs to happen\n    // on the next tick in order to avoid \"changed after checked\" errors.\n    if (group && group._isSelected(this)) {\n      group._syncButtonToggle(this, false, false, true);\n    }\n  }\n  /** Focuses the button. */\n  focus(options) {\n    this._buttonElement.nativeElement.focus(options);\n  }\n  /** Checks the button toggle due to an interaction with the underlying native button. */\n  _onButtonClick() {\n    const newChecked = this._isSingleSelector() ? true : !this._checked;\n    if (newChecked !== this._checked) {\n      this._checked = newChecked;\n      if (this.buttonToggleGroup) {\n        this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n        this.buttonToggleGroup._onTouched();\n      }\n    }\n    // Emit a change event when it's the single selector\n    this.change.emit(new MatButtonToggleChange(this, this.value));\n  }\n  /**\n   * Marks the button toggle as needing checking for change detection.\n   * This method is exposed because the parent button toggle group will directly\n   * update bound properties of the radio button.\n   */\n  _markForCheck() {\n    // When the group value changes, the button will not be notified.\n    // Use `markForCheck` to explicit update button toggle's status.\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Gets the name that should be assigned to the inner DOM node. */\n  _getButtonName() {\n    if (this._isSingleSelector()) {\n      return this.buttonToggleGroup.name;\n    }\n    return this.name || null;\n  }\n  /** Whether the toggle is in single selection mode. */\n  _isSingleSelector() {\n    return this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n  }\n  static {\n    this.ɵfac = function MatButtonToggle_Factory(t) {\n      return new (t || MatButtonToggle)(i0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_GROUP, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatButtonToggle,\n      selectors: [[\"mat-button-toggle\"]],\n      viewQuery: function MatButtonToggle_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n        }\n      },\n      hostAttrs: [\"role\", \"presentation\", 1, \"mat-button-toggle\"],\n      hostVars: 12,\n      hostBindings: function MatButtonToggle_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() {\n            return ctx.focus();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"id\", ctx.id)(\"name\", null);\n          i0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n        }\n      },\n      inputs: {\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n        id: \"id\",\n        name: \"name\",\n        value: \"value\",\n        tabIndex: \"tabIndex\",\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        appearance: \"appearance\",\n        checked: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"checked\", \"checked\", booleanAttribute],\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      outputs: {\n        change: \"change\"\n      },\n      exportAs: [\"matButtonToggle\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 8,\n      vars: 11,\n      consts: [[\"button\", \"\"], [\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"click\", \"id\", \"disabled\"], [1, \"mat-button-toggle-label-content\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"]],\n      template: function MatButtonToggle_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"button\", 1, 0);\n          i0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onButtonClick());\n          });\n          i0.ɵɵelementStart(2, \"span\", 2);\n          i0.ɵɵtemplate(3, MatButtonToggle_Conditional_3_Template, 1, 1, \"mat-pseudo-checkbox\", 3)(4, MatButtonToggle_Conditional_4_Template, 1, 1, \"mat-pseudo-checkbox\", 3);\n          i0.ɵɵprojection(5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(6, \"span\", 4)(7, \"span\", 5);\n        }\n        if (rf & 2) {\n          const button_r3 = i0.ɵɵreference(1);\n          i0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled || null);\n          i0.ɵɵattribute(\"tabindex\", ctx.disabled ? -1 : ctx.tabIndex)(\"aria-pressed\", ctx.checked)(\"name\", ctx._getButtonName())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(3, ctx.buttonToggleGroup && ctx.checked && !ctx.buttonToggleGroup.multiple && !ctx.buttonToggleGroup.hideSingleSelectionIndicator ? 3 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(4, ctx.buttonToggleGroup && ctx.checked && ctx.buttonToggleGroup.multiple && !ctx.buttonToggleGroup.hideMultipleSelectionIndicator ? 4 : -1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"matRippleTrigger\", button_r3)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n        }\n      },\n      dependencies: [MatRipple, MatPseudoCheckbox],\n      styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);border-radius:var(--mat-legacy-button-toggle-shape)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:var(--mat-standard-button-toggle-shape);border:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard .mat-pseudo-checkbox,.mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var( --mat-standard-button-toggle-selected-state-text-color )}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-legacy-button-toggle-text-color);font-family:var(--mat-legacy-button-toggle-label-text-font);font-size:var(--mat-legacy-button-toggle-label-text-size);line-height:var(--mat-legacy-button-toggle-label-text-line-height);font-weight:var(--mat-legacy-button-toggle-label-text-weight);letter-spacing:var(--mat-legacy-button-toggle-label-text-tracking);--mat-minimal-pseudo-checkbox-selected-checkmark-color: var( --mat-legacy-button-toggle-selected-state-text-color )}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-legacy-button-toggle-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle .mat-pseudo-checkbox{margin-right:12px}[dir=rtl] .mat-button-toggle .mat-pseudo-checkbox{margin-right:0;margin-left:12px}.mat-button-toggle-checked{color:var(--mat-legacy-button-toggle-selected-state-text-color);background-color:var(--mat-legacy-button-toggle-selected-state-background-color)}.mat-button-toggle-disabled{color:var(--mat-legacy-button-toggle-disabled-state-text-color);background-color:var(--mat-legacy-button-toggle-disabled-state-background-color);--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var( --mat-legacy-button-toggle-disabled-state-text-color )}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-legacy-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard{color:var(--mat-standard-button-toggle-text-color);background-color:var(--mat-standard-button-toggle-background-color);font-family:var(--mat-standard-button-toggle-label-text-font);font-size:var(--mat-standard-button-toggle-label-text-size);line-height:var(--mat-standard-button-toggle-label-text-line-height);font-weight:var(--mat-standard-button-toggle-label-text-weight);letter-spacing:var(--mat-standard-button-toggle-label-text-tracking)}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-standard-button-toggle-divider-color)}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-selected-state-text-color);background-color:var(--mat-standard-button-toggle-selected-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-standard-button-toggle-disabled-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var( --mat-standard-button-toggle-disabled-selected-state-text-color )}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-disabled-selected-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-standard-button-toggle-state-layer-color)}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-hover-state-layer-opacity)}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-focus-state-layer-opacity)}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-legacy-button-toggle-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-standard-button-toggle-height)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-legacy-button-toggle-state-layer-color)}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{--mat-focus-indicator-border-radius:var(--mat-standard-button-toggle-shape)}.mat-button-toggle-group-appearance-standard .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape);border-bottom-right-radius:var(--mat-standard-button-toggle-shape)}.mat-button-toggle-group-appearance-standard .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-left-radius:var(--mat-standard-button-toggle-shape);border-bottom-left-radius:var(--mat-standard-button-toggle-shape)}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mat-button-toggle',\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matButtonToggle',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n        '[class.mat-button-toggle-checked]': 'checked',\n        '[class.mat-button-toggle-disabled]': 'disabled',\n        '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n        'class': 'mat-button-toggle',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.id]': 'id',\n        '[attr.name]': 'null',\n        '(focus)': 'focus()',\n        'role': 'presentation'\n      },\n      standalone: true,\n      imports: [MatRipple, MatPseudoCheckbox],\n      template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <!-- Render checkmark at the beginning for single-selection. -->\\n    @if (buttonToggleGroup && checked && !buttonToggleGroup.multiple && !buttonToggleGroup.hideSingleSelectionIndicator) {\\n      <mat-pseudo-checkbox\\n          class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n          [disabled]=\\\"disabled\\\"\\n          state=\\\"checked\\\"\\n          aria-hidden=\\\"true\\\"\\n          appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n    }\\n    <!-- Render checkmark at the beginning for multiple-selection. -->\\n    @if (buttonToggleGroup && checked && buttonToggleGroup.multiple && !buttonToggleGroup.hideMultipleSelectionIndicator) {\\n      <mat-pseudo-checkbox\\n          class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n          [disabled]=\\\"disabled\\\"\\n          state=\\\"checked\\\"\\n          aria-hidden=\\\"true\\\"\\n          appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n    }\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\",\n      styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0);border-radius:var(--mat-legacy-button-toggle-shape)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:var(--mat-standard-button-toggle-shape);border:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard .mat-pseudo-checkbox,.mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-selected-checkmark-color: var( --mat-standard-button-toggle-selected-state-text-color )}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-legacy-button-toggle-text-color);font-family:var(--mat-legacy-button-toggle-label-text-font);font-size:var(--mat-legacy-button-toggle-label-text-size);line-height:var(--mat-legacy-button-toggle-label-text-line-height);font-weight:var(--mat-legacy-button-toggle-label-text-weight);letter-spacing:var(--mat-legacy-button-toggle-label-text-tracking);--mat-minimal-pseudo-checkbox-selected-checkmark-color: var( --mat-legacy-button-toggle-selected-state-text-color )}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-legacy-button-toggle-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle .mat-pseudo-checkbox{margin-right:12px}[dir=rtl] .mat-button-toggle .mat-pseudo-checkbox{margin-right:0;margin-left:12px}.mat-button-toggle-checked{color:var(--mat-legacy-button-toggle-selected-state-text-color);background-color:var(--mat-legacy-button-toggle-selected-state-background-color)}.mat-button-toggle-disabled{color:var(--mat-legacy-button-toggle-disabled-state-text-color);background-color:var(--mat-legacy-button-toggle-disabled-state-background-color);--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var( --mat-legacy-button-toggle-disabled-state-text-color )}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-legacy-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard{color:var(--mat-standard-button-toggle-text-color);background-color:var(--mat-standard-button-toggle-background-color);font-family:var(--mat-standard-button-toggle-label-text-font);font-size:var(--mat-standard-button-toggle-label-text-size);line-height:var(--mat-standard-button-toggle-label-text-line-height);font-weight:var(--mat-standard-button-toggle-label-text-weight);letter-spacing:var(--mat-standard-button-toggle-label-text-tracking)}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-standard-button-toggle-divider-color)}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-standard-button-toggle-divider-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-selected-state-text-color);background-color:var(--mat-standard-button-toggle-selected-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-standard-button-toggle-disabled-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-state-background-color)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled .mat-pseudo-checkbox{--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color: var( --mat-standard-button-toggle-disabled-selected-state-text-color )}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-standard-button-toggle-disabled-selected-state-text-color);background-color:var(--mat-standard-button-toggle-disabled-selected-state-background-color)}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-standard-button-toggle-state-layer-color)}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-hover-state-layer-opacity)}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:var(--mat-standard-button-toggle-focus-state-layer-opacity)}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-legacy-button-toggle-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-standard-button-toggle-height)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-legacy-button-toggle-state-layer-color)}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{--mat-focus-indicator-border-radius:var(--mat-standard-button-toggle-shape)}.mat-button-toggle-group-appearance-standard .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-standard-button-toggle-shape);border-bottom-right-radius:var(--mat-standard-button-toggle-shape)}.mat-button-toggle-group-appearance-standard .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-left-radius:var(--mat-standard-button-toggle-shape);border-bottom-left-radius:var(--mat-standard-button-toggle-shape)}\"]\n    }]\n  }], () => [{\n    type: MatButtonToggleGroup,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_BUTTON_TOGGLE_GROUP]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i1.FocusMonitor\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n    }]\n  }], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    _buttonElement: [{\n      type: ViewChild,\n      args: ['button']\n    }],\n    id: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    appearance: [{\n      type: Input\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    change: [{\n      type: Output\n    }]\n  });\n})();\nclass MatButtonToggleModule {\n  static {\n    this.ɵfac = function MatButtonToggleModule_Factory(t) {\n      return new (t || MatButtonToggleModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatButtonToggleModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatRippleModule, MatButtonToggle, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonToggleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatButtonToggleGroup, MatButtonToggle],\n      exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n","import { ChangeDetectorRef, Component, Inject, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { debounceTime, distinctUntilChanged, map, Observable, startWith, Subject, Subscription, switchMap } from \"rxjs\";\r\nimport { MatSelect } from \"@angular/material/select\";\r\nimport { GetIdentifierResponse } from \"../../../identifier/models/get-identifier-response\";\r\nimport { isNullOrWhiteSpace } from \"../../../../shared/utils/other-utils\";\r\nimport { SettingsService } from \"../../services/setting.service\";\r\nimport { WindowService } from \"../../../../core/services/window.service\";\r\nimport { CopySettingToRequestBody } from \"../../models/copy-setting-to-request-body\";\r\nimport { IdentifiersService } from \"../../../identifier/services/identifiers.service\";\r\nimport { AppsService } from \"../../../app/services/apps.service\";\r\nimport { GetAppsResponseApp } from \"../../../app/models/get-apps-response-app\";\r\n\r\n@Component({\r\n    templateUrl: './setting-copy-to.component.html'\r\n})\r\nexport class SettingCopyToComponent implements OnInit, OnDestroy {\r\n    myForm!: FormGroup;\r\n    filteredAppIdentifiers$?: Observable<GetIdentifierResponse[]>;\r\n    selectedAppIdentifierId: string | null = null;\r\n    selectedAppIdentifierOrder: number | null = null;\r\n    fieldFirstTimeClicked: boolean = true;\r\n    selectedApp: string | null = null;\r\n    isAppsFetched: boolean = false;\r\n    apps: GetAppsResponseApp[] = [];\r\n    appFilterType: string = \"1\";\r\n    @ViewChild('appSelect') appSelect!: MatSelect;\r\n    subscriptions: Subscription = new Subscription();\r\n\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        private cdr: ChangeDetectorRef,\r\n        private snackBar: MatSnackBar,\r\n        public dialogRef: MatDialogRef<SettingCopyToComponent>,\r\n        private formBuilder: FormBuilder,\r\n        @Inject(MAT_DIALOG_DATA) public model: CopySettingToIdentifierComponentModel,\r\n        private settingsService: SettingsService,\r\n        private appsService: AppsService,\r\n        private identifiersService: IdentifiersService,\r\n        private windowService: WindowService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.apps.push({\r\n            id: this.model.appId,\r\n            client: {\r\n                id: this.model.clientId,\r\n                name: this.model.clientName\r\n            }\r\n        });\r\n\r\n        this.myForm = this.formBuilder.group({\r\n            targetAppId: [this.model.appId, [Validators.required, this.appClientValidator]],\r\n            identifierName: ['', [Validators.required, this.identifierValidator]],\r\n            identifierId: ['0']\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    getApps(): void {\r\n        if (this.isAppsFetched || !this.windowService.isProvider) {\r\n            return;\r\n        }\r\n\r\n        this.isAppsFetched = true;\r\n\r\n        const subscription = this.appsService.getApps({}).subscribe({\r\n            next: (response) => {\r\n                if (!response.data) {\r\n                    return;\r\n                }\r\n\r\n                this.apps = response.data;\r\n                this.cdr.detectChanges();\r\n                this.appSelect.open();\r\n            },\r\n            error: () => {\r\n                this.isAppsFetched = false;\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    appClientValidator = (control: any) => {\r\n\r\n        if (control.value !== this.model.appId) {\r\n\r\n            this.identifierFilterChanged();\r\n\r\n            const identifierControl = this.myForm?.get('identifierName');\r\n\r\n            if (identifierControl?.hasError('identifierExists')) {\r\n                const currentErrors = identifierControl.errors;\r\n\r\n                if (currentErrors) {\r\n                    delete currentErrors['identifierExists'];\r\n                    identifierControl.setErrors(Object.keys(currentErrors).length ? currentErrors : null);\r\n                }\r\n            }\r\n        } else {\r\n\r\n            const identifierControl = this.myForm?.get('identifierName');\r\n\r\n            if (identifierControl) {\r\n                if (this.model.notAvailableAppIdentifiers.some(a => a.name.toLocaleLowerCase() === identifierControl.value.toLocaleLowerCase())) {\r\n\r\n                    const currentErrors = identifierControl.errors || {};\r\n                    currentErrors['identifierExists'] = true;\r\n                    identifierControl.setErrors(currentErrors);\r\n\r\n                } else {\r\n                    const currentErrors = identifierControl.errors;\r\n\r\n                    if (currentErrors && currentErrors['identifierExists']) {\r\n                        delete currentErrors['identifierExists'];\r\n                        identifierControl.setErrors(Object.keys(currentErrors).length ? currentErrors : null);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    identifierValidator = (control: any) => {\r\n\r\n        if (isNullOrWhiteSpace(control.value)) {\r\n            return { invalidIdentifierName: true };\r\n        }\r\n\r\n        if (this.model.appId === this.myForm.get('targetAppId')?.value) {\r\n            if (this.model.notAvailableAppIdentifiers.some(a => a.name.toLocaleLowerCase() === control.value.toLocaleLowerCase())) {\r\n                return { identifierExists: true };\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    clear() {\r\n        this.myForm.get('identifierName')?.setValue('');\r\n\r\n        this.identifierFilterChanged();\r\n    }\r\n\r\n    onFieldFocus() {\r\n\r\n        if (!this.fieldFirstTimeClicked) {\r\n            return;\r\n        }\r\n\r\n        this.fieldFirstTimeClicked = false;\r\n\r\n        const formField = this.myForm.get('identifierName')!;\r\n\r\n        const identifierName$ = formField.valueChanges.pipe(\r\n            startWith(formField.value),\r\n            debounceTime(300),\r\n            distinctUntilChanged());\r\n\r\n        this.filteredAppIdentifiers$ = identifierName$.pipe(\r\n            switchMap((value) => {\r\n\r\n                const targetAppId = this.myForm.get('targetAppId')!.value;\r\n\r\n                const appId = this.apps.find(a => a.id === targetAppId)!.id;\r\n\r\n                return this.identifiersService.getIdentifiers({\r\n                    searchTerm: value,\r\n                    appId: this.appFilterType ? appId : undefined,\r\n                    isAppMapped: this.appFilterType === '1'\r\n                }).pipe(map(response => {\r\n\r\n                    if (!response.data) {\r\n                        return [];\r\n                    }\r\n\r\n                    const identifiers = appId == this.model.appId ? response.data.identifiers.filter(d => !this.model.notAvailableAppIdentifiers.some(a => a.name.toLocaleLowerCase() === d.name.toLocaleLowerCase())) : response.data.identifiers;\r\n\r\n                    const selectedIdentifier = identifiers.find(group => group.name.toLowerCase() === value.toLowerCase());\r\n                    this.selectedAppIdentifierId = selectedIdentifier ? selectedIdentifier.id : null;\r\n                    this.selectedAppIdentifierOrder = selectedIdentifier ? selectedIdentifier.sortOrder : null;\r\n\r\n                    return identifiers;\r\n                }))\r\n            }));\r\n    }\r\n\r\n    identifierFilterChanged() {\r\n\r\n        const targetAppId = this.myForm.get('targetAppId')!.value;\r\n\r\n        const appId = this.apps.find(a => a.id === targetAppId)!.id;\r\n\r\n        const formField = this.myForm.get('identifierName')!;\r\n        this.filteredAppIdentifiers$ = this.identifiersService.getIdentifiers({\r\n            searchTerm: formField.value,\r\n            appId: this.appFilterType ? appId : undefined,\r\n            isAppMapped: this.appFilterType === '1'\r\n        }).pipe(map(response => {\r\n\r\n            if (!response.data) {\r\n                return [];\r\n            }\r\n\r\n            const identifiers = appId == this.model.appId ? response.data.identifiers.filter(d => !this.model.notAvailableAppIdentifiers.some(a => a.name.toLocaleLowerCase() === d.name.toLocaleLowerCase())) : response.data.identifiers;\r\n\r\n            const selectedIdentifier = identifiers.find(group => group.name.toLowerCase() === formField.value.toLowerCase());\r\n            this.selectedAppIdentifierId = selectedIdentifier ? selectedIdentifier.id : null;\r\n            this.selectedAppIdentifierOrder = selectedIdentifier ? selectedIdentifier.sortOrder : null;\r\n\r\n            return identifiers;\r\n        }));\r\n    }\r\n\r\n    onSubmit() {\r\n\r\n        if (!this.myForm.valid) {\r\n            return;\r\n        }\r\n\r\n        const formValue = this.myForm.value;\r\n\r\n        const model: CopySettingToRequestBody = {\r\n            targetAppId: formValue.targetAppId,\r\n            identifier: {\r\n                id: this.selectedAppIdentifierId ?? formValue.identifierId,\r\n                name: formValue.identifierName\r\n            }\r\n        };\r\n\r\n        const subscription = this.settingsService.copySettingTo({\r\n            settingId: this.model.currentSettingId,\r\n            body: model\r\n        }).subscribe(response => {\r\n\r\n            if (response.success) {\r\n\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                const returnModel: CopyAppSettingToComponentReturnModel = {\r\n                    settingId: responseData.setting.id,\r\n                    clientId: responseData.clientId,\r\n                    appSlug: responseData.appSlug,\r\n                    classId: responseData.setting.classId,\r\n                    identifierId: responseData.identifier.id,\r\n                    identifierName: responseData.identifier.name,\r\n                    identifierSortOrder: responseData.identifier.sortOrder,\r\n                    identifierMappingSortOrder: responseData.identifier.mappingSortOrder\r\n                };\r\n\r\n                this.snackBar.open(`Copied successfully!`, 'Close', {\r\n                    horizontalPosition: 'right',\r\n                    verticalPosition: 'top',\r\n                    duration: 5000\r\n                });\r\n\r\n                this.dialogRef.close(returnModel);\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    close(){\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n\r\nexport interface CopySettingToIdentifierComponentModel {\r\n    clientName: string;\r\n    clientId: string;\r\n    computedIdentifier: string;\r\n    className: string;\r\n    appId: string;\r\n    currentSettingId: string;\r\n    currentAppIdentifierName: string;\r\n    currentAppIdentifierId: string;\r\n    notAvailableAppIdentifiers: GetIdentifierResponse[]\r\n}\r\n\r\nexport interface CopyAppSettingToComponentReturnModel {\r\n    settingId: string;\r\n    clientId: string;\r\n    appSlug: string;\r\n    classId: string;\r\n    identifierId: string;\r\n    identifierName: string;\r\n    identifierSortOrder: number;\r\n    identifierMappingSortOrder: number;\r\n}","<div class=\"d-flex mb-2 pb-2 border-bottom\">\r\n    <mat-card-header>\r\n        <mat-card-title>Copy '{{model.className}}' to</mat-card-title>\r\n    </mat-card-header>\r\n    <span></span>\r\n    <span class=\"spacer\"></span>\r\n    <button mat-icon-button matToolTip=\"Close\" matTooltipPosition=\"above\" (click)=\"close()\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<mat-card-content class=\"mt-2\">\r\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\r\n        <mat-form-field appearance=\"fill\" (click)=\"getApps()\">\r\n            <mat-label>Target client name</mat-label>\r\n            <mat-select formControlName=\"targetAppId\" #appSelect>\r\n                <mat-option *ngFor=\"let app of apps\" [value]=\"app.id\">{{ app.client.name }}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Target identifier name</mat-label>\r\n            <input type=\"text\" matInput formControlName=\"identifierName\" [maxLength]=\"50\"\r\n                [matAutocomplete]=\"groupAuto\" (focus)=\"onFieldFocus()\">\r\n            <button type=\"button\" mat-icon-button matSuffix *ngIf=\"myForm.get('identifierName')!.value\"\r\n                (click)=\"clear()\" matTooltip=\"clear\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n            <button mat-icon-button matSuffix [disabled]=\"myForm.invalid\" type=\"submit\" color=\"primary\">\r\n                <mat-icon>check_circle</mat-icon>\r\n            </button>\r\n            <mat-error *ngIf=\"myForm.get('identifierName')?.hasError('identifierExists')\">Setting already\r\n                exists.</mat-error>\r\n            <mat-hint>If identifier missing, will be created along with the mapping.</mat-hint>\r\n        </mat-form-field>\r\n    </form>\r\n</mat-card-content>\r\n\r\n<mat-autocomplete #groupAuto=\"matAutocomplete\">\r\n    <mat-option (click)=\"$event.stopPropagation()\">\r\n        <mat-button-toggle-group [(ngModel)]=\"appFilterType\" (click)=\"$event.stopPropagation()\" (change)=\"identifierFilterChanged()\">\r\n            <mat-button-toggle value=\"1\">Mapped</mat-button-toggle>\r\n            <mat-button-toggle value=\"0\">Unmapped</mat-button-toggle>\r\n            <mat-button-toggle value=\"\">All</mat-button-toggle>\r\n          </mat-button-toggle-group>\r\n    </mat-option>\r\n    <mat-option *ngFor=\"let option of filteredAppIdentifiers$ | async\" [value]=\"option.name\">\r\n        {{ option.name }}\r\n    </mat-option>\r\n</mat-autocomplete>","import { HttpHeaders, HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, OnDestroy } from \"@angular/core\";\r\nimport { Observable, Subject, takeUntil } from \"rxjs\";\r\nimport { AuthService } from \"../../../core/services/auth.service\";\r\nimport { WindowService } from \"../../../core/services/window.service\";\r\nimport { IResponse } from \"../../../shared/models/response\";\r\nimport { PatchConfigurationRequest } from \"../models/patch-configuration-request\";\r\nimport { PatchConfigurationResponse } from \"../models/patch-configuration-response\";\r\nimport { GetConfigurationByAppAndIdentifierRequest } from \"../../instance/models/get-configuration-by-app-and-identifier-request\";\r\nimport { GetConfigurationByAppAndIdentifierResponse } from \"../../instance/models/get-configuration-by-app-and-identifier-response\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ConfigurationsService implements OnDestroy {\r\n    private headers: HttpHeaders = new HttpHeaders();\r\n    private route: string;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private authService: AuthService,\r\n        windowService: WindowService) {\r\n        this.route = windowService.controllerOptions.route;\r\n        this.authService.isAuthenticated$\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(isAuthenticated => {\r\n                this.headers = isAuthenticated\r\n                    ? new HttpHeaders({ 'Authorization': `${this.authService.token}` })\r\n                    : new HttpHeaders();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    getConfigurationByAppAndIdentifier(request: GetConfigurationByAppAndIdentifierRequest): Observable<IResponse<GetConfigurationByAppAndIdentifierResponse>> {\r\n\r\n        let url = this.route + `/v1/apps/${request.appId}/identifiers/${request.identifierId}/configuration`;\r\n\r\n        return this.httpClient.get<IResponse<GetConfigurationByAppAndIdentifierResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    patchConfiguration(request: PatchConfigurationRequest): Observable<IResponse<PatchConfigurationResponse>> {\r\n\r\n        let url = this.route + `/v1/apps/${request.appId}/identifiers/${request.identifierId}/configuration`;\r\n\r\n        return this.httpClient.patch<IResponse<PatchConfigurationResponse>>(url, request.body, { headers: this.headers });\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs/internal/BehaviorSubject\";\r\nimport { UserPreferencesService } from \"../../../shared/services/user-preferences.service\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AppViewService {\r\n    private settingViewSubject = new BehaviorSubject<SettingViewModel | undefined>(undefined);\r\n    private appViewMultiSelectionEnabledSubject: BehaviorSubject<boolean>;\r\n\r\n    settingView$ = this.settingViewSubject.asObservable();\r\n    appViewMultiSelectionEnabled$: Observable<boolean>;\r\n\r\n    constructor(private userPreferencesService: UserPreferencesService) {\r\n        this.appViewMultiSelectionEnabledSubject = new BehaviorSubject(userPreferencesService.appViewMultiSelectionEnabled);\r\n        this.appViewMultiSelectionEnabled$ = this.appViewMultiSelectionEnabledSubject.asObservable();\r\n    }\r\n\r\n    get settingView() {\r\n        return this.settingViewSubject.getValue();\r\n    }\r\n\r\n    get appViewMultiSelectionEnabled() {\r\n        return this.appViewMultiSelectionEnabledSubject.getValue();\r\n    }\r\n\r\n    emitSettingView(settingView: SettingViewModel | undefined) {\r\n        this.settingViewSubject.next(settingView);\r\n    }\r\n\r\n    emitAppViewMultiSelectionEnabled(isEnabled: boolean){\r\n        this.userPreferencesService.setAppViewMultiSelectionEnabled(isEnabled);\r\n        this.appViewMultiSelectionEnabledSubject.next(isEnabled);\r\n    }\r\n}\r\n\r\nexport type SettingViewType =\r\n    'viewSetting' |\r\n    'viewCreateSetting' |\r\n    'viewUpdateSetting' |\r\n    'viewCopySettingTo' |\r\n    'viewSettingHistories' |\r\n    'viewSettingHistory';\r\n\r\nexport interface SettingViewModel {\r\n    selectedSettingId?: string;\r\n    selectedHistoryId?: string;\r\n    settingViewType: SettingViewType;\r\n}","/// <reference path=\"../../../../../node_modules/monaco-editor/monaco.d.ts\" />\r\nimport { Component, Input, ViewChild, ElementRef, OnInit, forwardRef, EventEmitter, Output, OnDestroy } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'json-editor',\r\n    templateUrl: './json-editor.component.html',\r\n    styleUrls: ['./json-editor.component.css'],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => JsonEditorComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class JsonEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n    @Input() id?: string;\r\n    @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\r\n    editor!: monaco.editor.IStandaloneCodeEditor;\r\n    private editorChangeSubscription: monaco.IDisposable | undefined;\r\n    @Input() editorWidth = '100%';\r\n    @Input() theme = \"vs-light\";\r\n    @Input() readonly = false;\r\n\r\n    @Input() value: object = {};\r\n\r\n    @Output() invalidData = new EventEmitter<boolean>()\r\n    @Output() dataChange = new EventEmitter<string>();\r\n\r\n    onChange: any = () => { };\r\n    onTouched: any = () => { };\r\n\r\n    height: number = 0;\r\n\r\n    ngOnInit(): void {\r\n        this.initializeEditor();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.editor) {\r\n            this.editor.dispose();\r\n        }\r\n\r\n        if (this.editorChangeSubscription) {\r\n            this.editorChangeSubscription.dispose();\r\n        }\r\n    }\r\n\r\n    get editorHeight() {\r\n        return `${this.height}px`;\r\n    }\r\n\r\n    initializeEditor(): void {\r\n\r\n        if (this.editor) {\r\n            return;\r\n        }\r\n\r\n        const value = this.getJsonValue();\r\n\r\n        this.adjustHeight(value);\r\n\r\n        this.editor = monaco.editor.create(this.editorContainer.nativeElement, {\r\n            value,\r\n            language: 'json',\r\n            theme: this.theme,\r\n            automaticLayout: true,\r\n            readOnly: this.readonly,\r\n            minimap: { enabled: true },\r\n            glyphMargin: false,\r\n            lineNumbers: 'on',\r\n            folding: true,\r\n            scrollBeyondLastLine: true,\r\n            renderLineHighlight: 'none',\r\n            overviewRulerLanes: 0,\r\n            lineDecorationsWidth: 0,\r\n            hideCursorInOverviewRuler: true,\r\n            occurrencesHighlight: 'off',\r\n            quickSuggestions: false,\r\n            codeLens: false,\r\n            renderWhitespace: 'none',\r\n            hover: { enabled: false },\r\n            contextmenu: false,\r\n            wordBasedSuggestions: 'off',\r\n            fontLigatures: false,\r\n            renderFinalNewline: 'off',\r\n            inlayHints: { enabled: 'off' },\r\n            suggestOnTriggerCharacters: false\r\n        });\r\n\r\n        this.editorChangeSubscription = this.editor.onDidChangeModelContent(() => {\r\n            this.updateEditorValue();\r\n        });\r\n    }\r\n\r\n    updateEditorValue(): void {\r\n        const value = this.editor.getValue();\r\n\r\n        this.adjustHeight(value);\r\n\r\n        try {\r\n            this.value = JSON.parse(value);\r\n            if (typeof this.value === 'object' && this.value !== null) {\r\n                this.emitInvalidData(false);\r\n            } else {\r\n                this.emitInvalidData(true);\r\n            }\r\n        } catch {\r\n            this.emitInvalidData(true);\r\n        }\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    emitInvalidData(invalid: boolean) {\r\n        this.invalidData.emit(invalid);\r\n    }\r\n\r\n    getJsonValue(): string {\r\n        return this.value ? JSON.stringify(this.value, null, 4) : '{}';\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value || {};\r\n\r\n        if (this.editor && value) {\r\n\r\n            const jsonValue = this.getJsonValue();\r\n\r\n            this.editor.setValue(jsonValue);\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    adjustHeight(value: string) {\r\n\r\n        const height = this.getContentHeight(value);\r\n\r\n        this.height = Math.min(300, height);\r\n    }\r\n\r\n    getContentHeight(content: string): number {\r\n        const lineHeight = 19;\r\n        const lineCount = (content.match(/\\n/g) || []).length + 1;\r\n        return lineHeight * lineCount;\r\n    }\r\n\r\n    formatCode() {\r\n        this.editor.getAction('editor.action.formatDocument')?.run();\r\n    }\r\n}","<div class=\"editor-container\" #editorContainer [ngStyle]=\"{ height: editorHeight, width: editorWidth }\"></div>","import { Component, ElementRef, Inject, OnDestroy, OnInit, QueryList, ViewChildren } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { ThemeService } from \"../../../../core/services/theme.service\";\r\nimport { UtilityService } from \"../../../../shared/services/utility.service\";\r\nimport { isValidGuid, computeIdentifier } from \"../../../../shared/utils/hash-utils\";\r\nimport { SettingsService } from \"../../services/setting.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { CreateSettingRequestBody } from \"../../models/create-setting-request-body\";\r\nimport { SettingCreateComponentReturnModel } from \"../../models/setting-create-component-return.model\";\r\nimport { SettingCreateComponentModel } from \"../../models/setting-create-component.model\";\r\nimport { WindowService } from \"../../../../core/services/window.service\";\r\n\r\n@Component({\r\n    templateUrl: './setting-create.component.html'\r\n})\r\nexport class SettingCreateComponent implements OnInit, OnDestroy {\r\n    isFullScreen: boolean = false;\r\n    form!: FormGroup;\r\n    classFullName: string = '';\r\n    computedIdentifierPreview: string = '';\r\n    theme: string;\r\n    jsonInvalid: boolean = false;\r\n    isConnectionSecure?: boolean;\r\n    subscriptions: Subscription = new Subscription();\r\n\r\n    @ViewChildren('textarea') textareas!: QueryList<ElementRef<HTMLTextAreaElement>>;\r\n\r\n    constructor(public dialogRef: MatDialogRef<SettingCreateComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: SettingCreateComponentModel,\r\n        private settingsService: SettingsService,\r\n        private formBuilder: FormBuilder,\r\n        private utilityService: UtilityService,\r\n        private windowService: WindowService,\r\n        private snackBar: MatSnackBar,\r\n        private themeService: ThemeService) {\r\n        this.theme = this.themeService.isDarkTheme() ? 'vs-dark' : 'vs-light';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.form = this.formBuilder.group({\r\n            computedIdentifier: ['', Validators.required],\r\n            classNamespace: ['', Validators.required],\r\n            className: ['', Validators.required],\r\n            classFullName: ['', Validators.required],\r\n            data: [{}, [Validators.required]],\r\n            storeInSeparateFile: [true],\r\n            ignoreOnFileChange: [false],\r\n            registrationMode: [1]\r\n        });\r\n\r\n        this.subscriptions.add(this.form.get('classNamespace')!.valueChanges.subscribe(() => this.updateClassFullName()));\r\n        this.subscriptions.add(this.form.get('className')!.valueChanges.subscribe(() => this.updateClassFullName()));\r\n        this.subscriptions.add(this.form.get('computedIdentifier')!.valueChanges.subscribe(value => this.updateComputedIdentifierPreview(value)));\r\n\r\n        this.isConnectionSecure = this.windowService.isConnectionSecure\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    updateClassFullName(): void {\r\n        const classNamespace = this.form.get('classNamespace')?.value;\r\n        const className = this.form.get('className')?.value;\r\n\r\n        if (classNamespace && className) {\r\n            const classFullName = `${classNamespace}.${className}`\r\n            this.form.get('classFullName')?.setValue(classFullName, { emitEvent: false });\r\n\r\n            const computedIdentifier = this.form.get('computedIdentifier');\r\n\r\n            const classComputedIdentifierValue = computedIdentifier!.value;\r\n\r\n            if (!classComputedIdentifierValue || classFullName.includes(classComputedIdentifierValue)) {\r\n                computedIdentifier?.setValue(classFullName);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateComputedIdentifierPreview(value: string): void {\r\n        if (value && isValidGuid(value)) {\r\n            this.computedIdentifierPreview = value;\r\n        } else if (value) {\r\n            this.computedIdentifierPreview = computeIdentifier(value);\r\n        } else {\r\n            this.computedIdentifierPreview = '';\r\n        }\r\n    }\r\n\r\n    toggleFullScreen() {\r\n        this.isFullScreen = !this.isFullScreen;\r\n\r\n        const dialogElement = document.querySelector('.mat-mdc-dialog-surface');\r\n\r\n        if (this.isFullScreen) {\r\n\r\n            dialogElement?.setAttribute('style', `\r\n                  border-radius: 0 !important;\r\n                `);\r\n\r\n            this.dialogRef.updateSize('100%', '100%');\r\n        } else {\r\n            this.dialogRef.updateSize('1350px', '680px');\r\n            dialogElement?.removeAttribute('style');\r\n        }\r\n    }\r\n\r\n    add() {\r\n\r\n        if (this.form.valid) {\r\n\r\n            const formValue = this.form.value;\r\n\r\n            const rawData = JSON.stringify(formValue.data);\r\n\r\n            const model: CreateSettingRequestBody = {\r\n                appId: this.data.appId,\r\n                identifierId: this.data.identifierId,\r\n                computedIdentifier: this.computedIdentifierPreview,\r\n                class: {\r\n                    namespace: formValue.classNamespace,\r\n                    name: formValue.className,\r\n                    fullName: formValue.classFullName,\r\n                },\r\n                data: rawData,\r\n                storeInSeparateFile: formValue.storeInSeparateFile,\r\n                ignoreOnFileChange: formValue.ignoreOnFileChange,\r\n                registrationMode: formValue.registrationMode\r\n            }\r\n\r\n            const subscription = this.settingsService.createSetting({\r\n                body: model\r\n            }).subscribe(response => {\r\n\r\n                const responseData = response.data;\r\n\r\n                if(!responseData){\r\n                    return;\r\n                }\r\n\r\n                const addAppSettingComponentReturnModel: SettingCreateComponentReturnModel = {\r\n                    id: responseData.settingId,\r\n                    version: \"0\",\r\n                    classId: responseData.classId,\r\n                    computedIdentifier: this.computedIdentifierPreview,\r\n                    className: model.class.name,\r\n                    classNamespace: model.class.namespace,\r\n                    classFullName: model.class.fullName,\r\n                    rawData: rawData,\r\n                    parsedData: { ...formValue.data },\r\n                    storeInSeparateFile: model.storeInSeparateFile,\r\n                    ignoreOnFileChange: model.ignoreOnFileChange,\r\n                    registrationMode: model.registrationMode\r\n                };\r\n\r\n                this.snackBar.open(`Added successfully!`, 'Close', {\r\n                    horizontalPosition: 'right',\r\n                    verticalPosition: 'top',\r\n                    duration: 5000\r\n                });\r\n\r\n                this.dialogRef.close(addAppSettingComponentReturnModel);\r\n            });\r\n\r\n            this.subscriptions.add(subscription);\r\n        }\r\n    }\r\n\r\n    download() {\r\n\r\n        const data = this.form.get('data')?.value;\r\n\r\n        // const classFullName = this.form.get('classFullName')?.value ?? this.data.clientName;\r\n\r\n        // const model = {\r\n        //     [classFullName]: data\r\n        // };\r\n\r\n        const value = JSON.stringify(data, null, 4);\r\n\r\n        this.utilityService.download(value, this.form.get('className')?.value ?? this.data.clientName);\r\n    }\r\n\r\n    upload(event: any) {\r\n        this.utilityService.upload(event.target.files[0] as File).then(content => {\r\n\r\n            const parsedData = JSON.parse(content);\r\n\r\n            if (typeof parsedData === 'object' && parsedData !== null) {\r\n                this.form.get('data')?.setValue(parsedData);\r\n            } else {\r\n                throw (\"Invalid JSON data\");\r\n            }\r\n\r\n            this.snackBar.open(`Changes applied. Click Save icon to confirm.`, 'Close', {\r\n                horizontalPosition: 'right',\r\n                verticalPosition: 'top',\r\n                duration: 5000\r\n            });\r\n\r\n        }).catch(error => {\r\n            this.snackBar.open(`Error occurred while uploading file. Error: ${error}`, 'Close', {\r\n                horizontalPosition: 'right',\r\n                verticalPosition: 'top',\r\n                duration: 8000\r\n            });\r\n        });\r\n    }\r\n\r\n    copyToClipboard(input: any) {\r\n\r\n        let value = input ?? '{}';\r\n\r\n        if (typeof input === 'object') {\r\n\r\n            value = JSON.stringify(input, null, 4)\r\n        }\r\n\r\n        this.utilityService.copyToClipboard(value);\r\n    }\r\n\r\n    invalidData($event: any) {\r\n        this.jsonInvalid = $event;\r\n    }\r\n}","<div class=\"d-flex border-bottom\">\r\n    <div class=\"dialog-title\">Create > {{data.clientName}}</div>\r\n    <div class=\"dialog-subtitle\">{{this.data.identifierName}}</div>\r\n    <span></span>\r\n    <span class=\"spacer\"></span>\r\n    <button mat-icon-button (click)=\"toggleFullScreen()\"\r\n        [matTooltip]=\"isFullScreen ? 'Exit full screen' : 'Enter full screen'\" matTooltipPosition=\"above\">\r\n        <mat-icon>{{ isFullScreen ? 'fullscreen_exit' : 'fullscreen' }}</mat-icon>\r\n    </button>\r\n    <button mat-icon-button mat-dialog-close matToolTip=\"Close\" matTooltipPosition=\"above\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"add()\">\r\n    <mat-dialog-content>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Class Namespace</mat-label>\r\n            <input matInput formControlName=\"classNamespace\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Class Name</mat-label>\r\n            <input matInput formControlName=\"className\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Class Full Name</mat-label>\r\n            <input matInput formControlName=\"classFullName\" />\r\n        </mat-form-field>\r\n\r\n        <div class=\"d-flex\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Computed Identifier <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                    matTooltip=\"The computer identifier is either provided directly as a GUID or is computed based on the class name (or other string identifier) using an MD5 hash of the UTF-8 bytes of the string. This allows each setting class to have a unique identifier.\"></mat-icon></mat-label>\r\n                <input matInput formControlName=\"computedIdentifier\" />\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Computed Identifier Preview</mat-label>\r\n                <input matInput [value]=\"computedIdentifierPreview\" disabled />\r\n                <button type=\"button\" matSuffix mat-icon-button matTooltip=\"Copy\" matTooltipPosition=\"below\"\r\n                    (click)=\"copyToClipboard(computedIdentifierPreview)\" [disabled]=\"!computedIdentifierPreview\" *ngIf=\"isConnectionSecure\">\r\n                    <mat-icon>content_copy</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-accordion multi>\r\n            <mat-expansion-panel expanded=\"\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>Data (Json)</mat-panel-title>\r\n                    <mat-panel-description>\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"d-flex\">\r\n                    <span class=\"spacer\"></span>\r\n                    <button type=\"button\" mat-button matTooltip=\"Download\" color=\"primary\" (click)=\"download()\">\r\n                        <mat-icon>download</mat-icon>\r\n                    </button>\r\n                    <button type=\"button\" mat-button matTooltip=\"Upload\" color=\"primary\" (click)=\"fileInput.click()\">\r\n                        <mat-icon>upload</mat-icon>\r\n                        <input class=\"d-none\" type=\"file\" #fileInput accept=\".json,.txt\" (change)=\"upload($event)\">\r\n                    </button>\r\n                    <button type=\"button\" mat-button matTooltip=\"Copy\" color=\"primary\"\r\n                        (click)=\"copyToClipboard(this.form.get('data')?.value)\" *ngIf=\"isConnectionSecure\">\r\n                        <mat-icon>content_copy</mat-icon>\r\n                    </button>\r\n                </div>\r\n\r\n                <json-editor formControlName=\"data\" [theme]=\"theme\" (invalidData)=\"invalidData($event)\">\r\n                </json-editor>\r\n                <!-- <mat-form-field appearance=\"fill\" class=\"custom-form-field\">\r\n                    <mat-label></mat-label>\r\n                    <textarea matInput formControlName=\"data\" #textarea></textarea>\r\n                </mat-form-field>\r\n                <mat-error *ngIf=\"form.get('data')?.hasError('invalidJson')\" class=\"mb-1\">Invalid JSON format.</mat-error> -->\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions>\r\n        <button class=\"ml-3\" mat-raised-button color=\"primary\" [disabled]=\"form.invalid || jsonInvalid\">\r\n            Add\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>","import { HttpHeaders, HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, OnDestroy } from \"@angular/core\";\r\nimport { AuthService } from \"../../../core/services/auth.service\";\r\nimport { WindowService } from \"../../../core/services/window.service\";\r\nimport { RestoreSettingHistoryResponse } from \"../models/restore-setting-history-response\";\r\nimport { Observable, Subject, takeUntil } from \"rxjs\";\r\nimport { RestoreSettingHistoryRequest } from \"../models/restore-setting-history-request\";\r\nimport { GetSettingHistoriesRequest } from \"../models/get-setting-histories-request\";\r\nimport { IResponse } from \"../../../shared/models/response\";\r\nimport { GetSettingHistoriesResponse } from \"../models/get-setting-histories-response\";\r\nimport { GetSettingHistoryRequest } from \"../models/get-setting-history-request\";\r\nimport { GetSettingHistoryResponse } from \"../models/get-setting-history-response\";\r\nimport { GetSettingHistoryDataRequest } from \"../models/get-setting-history-data-request\";\r\nimport { GetSettingHistoryDataResponse } from \"../models/get-setting-history-data-response\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SettingHistoriesService implements OnDestroy {\r\n    private headers: HttpHeaders = new HttpHeaders();\r\n    private route: string;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private authService: AuthService,\r\n        windowService: WindowService) {\r\n        this.route = windowService.controllerOptions.route;\r\n        this.authService.isAuthenticated$\r\n        .pipe(takeUntil(this.destroy$))\r\n        .subscribe(isAuthenticated => {\r\n          this.headers = isAuthenticated\r\n            ? new HttpHeaders({ 'Authorization': `${this.authService.token}` })\r\n            : new HttpHeaders();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n      }\r\n\r\n    getSettingHistoryData(request: GetSettingHistoryDataRequest): Observable<IResponse<GetSettingHistoryDataResponse>> {\r\n\r\n        const url = this.route + '/v1/setting-histories/' + request.historyId + '/data';\r\n\r\n        return this.httpClient.get<IResponse<GetSettingHistoryDataResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getSettingHistoryById(request: GetSettingHistoryRequest): Observable<IResponse<GetSettingHistoryResponse>> {\r\n\r\n        const url = this.route + '/v1/setting-histories/' + request.historyIdOrSlug;\r\n\r\n        return this.httpClient.get<IResponse<GetSettingHistoryResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getSettingHistoryBySlug(request: GetSettingHistoryRequest): Observable<IResponse<GetSettingHistoryResponse>> {\r\n\r\n        const url = this.route + '/v1/setting-histories/slug/' + request.historyIdOrSlug;\r\n\r\n        return this.httpClient.get<IResponse<GetSettingHistoryResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getSettingHistories(request: GetSettingHistoriesRequest): Observable<IResponse<GetSettingHistoriesResponse[]>> {\r\n\r\n        const url = this.route + '/v1/settings/' + request.settingId + '/histories';\r\n\r\n        return this.httpClient.get<IResponse<GetSettingHistoriesResponse[]>>(url, { headers: this.headers });\r\n    }\r\n\r\n    restoreSettingHistory(request: RestoreSettingHistoryRequest): Observable<IResponse<RestoreSettingHistoryResponse>> {\r\n\r\n        const url = this.route + '/v1/setting-histories/' + request.historyId + '/restore';\r\n\r\n        return this.httpClient.post<IResponse<RestoreSettingHistoryResponse>>(url, request.body, { headers: this.headers });\r\n    }\r\n}","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst _c0 = [\"input\"];\nconst _c1 = [\"label\"];\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n  providedIn: 'root',\n  factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    color: 'accent',\n    clickAction: 'check-indeterminate'\n  };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n  /** The initial state of the component before any user interaction. */\n  TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n  /** The state representing the component when it's becoming checked. */\n  TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n  /** The state representing the component when it's becoming unchecked. */\n  TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n  /** The state representing the component when it's becoming indeterminate. */\n  TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatCheckbox),\n  multi: true\n};\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {}\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n  /** Focuses the checkbox. */\n  focus() {\n    this._inputElement.nativeElement.focus();\n  }\n  /** Creates the change event that will be emitted by the checkbox. */\n  _createChangeEvent(isChecked) {\n    const event = new MatCheckboxChange();\n    event.source = this;\n    event.checked = isChecked;\n    return event;\n  }\n  /** Gets the element on which to add the animation CSS classes. */\n  _getAnimationTargetElement() {\n    return this._inputElement?.nativeElement;\n  }\n  /** Returns the unique id for the visual hidden input. */\n  get inputId() {\n    return `${this.id || this._uniqueId}-input`;\n  }\n  constructor(_elementRef, _changeDetectorRef, _ngZone, tabIndex, _animationMode, _options) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._ngZone = _ngZone;\n    this._animationMode = _animationMode;\n    this._options = _options;\n    /** CSS classes to add when transitioning between the different checkbox states. */\n    this._animationClasses = {\n      uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n      uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n      checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n      checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n      indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n      indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked'\n    };\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     */\n    this.ariaLabel = '';\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    this.ariaLabelledby = null;\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    this.labelPosition = 'after';\n    /** Name value will be applied to the input element if present */\n    this.name = null;\n    /** Event emitted when the checkbox's `checked` value changes. */\n    this.change = new EventEmitter();\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    this.indeterminateChange = new EventEmitter();\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    this._onTouched = () => {};\n    this._currentAnimationClass = '';\n    this._currentCheckState = TransitionCheckState.Init;\n    this._controlValueAccessorChangeFn = () => {};\n    this._validatorChangeFn = () => {};\n    this._checked = false;\n    this._disabled = false;\n    this._indeterminate = false;\n    this._options = this._options || defaults;\n    this.color = this._options.color || defaults.color;\n    this.tabIndex = parseInt(tabIndex) || 0;\n    this.id = this._uniqueId = `mat-mdc-checkbox-${++nextUniqueId}`;\n  }\n  ngOnChanges(changes) {\n    if (changes['required']) {\n      this._validatorChangeFn();\n    }\n  }\n  ngAfterViewInit() {\n    this._syncIndeterminate(this._indeterminate);\n  }\n  /** Whether the checkbox is checked. */\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    if (value != this.checked) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Whether the checkbox is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    if (value !== this.disabled) {\n      this._disabled = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n   * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n   * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n   * set to false.\n   */\n  get indeterminate() {\n    return this._indeterminate;\n  }\n  set indeterminate(value) {\n    const changed = value != this._indeterminate;\n    this._indeterminate = value;\n    if (changed) {\n      if (this._indeterminate) {\n        this._transitionCheckState(TransitionCheckState.Indeterminate);\n      } else {\n        this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      }\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n    this._syncIndeterminate(this._indeterminate);\n  }\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n    // component will be only marked for check, but no actual change detection runs automatically.\n    // Instead of going back into the zone in order to trigger a change detection which causes\n    // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n    // an explicit change detection for the checkbox view and its children.\n    this._changeDetectorRef.detectChanges();\n  }\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value) {\n    this.checked = !!value;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  // Implemented as a part of Validator.\n  validate(control) {\n    return this.required && control.value !== true ? {\n      'required': true\n    } : null;\n  }\n  // Implemented as a part of Validator.\n  registerOnValidatorChange(fn) {\n    this._validatorChangeFn = fn;\n  }\n  _transitionCheckState(newState) {\n    let oldState = this._currentCheckState;\n    let element = this._getAnimationTargetElement();\n    if (oldState === newState || !element) {\n      return;\n    }\n    if (this._currentAnimationClass) {\n      element.classList.remove(this._currentAnimationClass);\n    }\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n    this._currentCheckState = newState;\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.add(this._currentAnimationClass);\n      // Remove the animation class to avoid animation when the checkbox is moved between containers\n      const animationClass = this._currentAnimationClass;\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          element.classList.remove(animationClass);\n        }, 1000);\n      });\n    }\n  }\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(this._createChangeEvent(this.checked));\n    // Assigning the value again here is redundant, but we have to do it in case it was\n    // changed inside the `change` listener which will cause the input to be out of sync.\n    if (this._inputElement) {\n      this._inputElement.nativeElement.checked = this.checked;\n    }\n  }\n  /** Toggles the `checked` state of the checkbox. */\n  toggle() {\n    this.checked = !this.checked;\n    this._controlValueAccessorChangeFn(this.checked);\n  }\n  _handleInputClick() {\n    const clickAction = this._options?.clickAction;\n    // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n    if (!this.disabled && clickAction !== 'noop') {\n      // When user manually click on the checkbox, `indeterminate` is set to false.\n      if (this.indeterminate && clickAction !== 'check') {\n        Promise.resolve().then(() => {\n          this._indeterminate = false;\n          this.indeterminateChange.emit(this._indeterminate);\n        });\n      }\n      this._checked = !this._checked;\n      this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      // Emit our custom change event if the native input emitted one.\n      // It is important to only emit it, if the native input triggered one, because\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\n      this._emitChangeEvent();\n    } else if (!this.disabled && clickAction === 'noop') {\n      // Reset native input when clicked with noop. The native checkbox becomes checked after\n      // click, reset it to be align with `checked` value of `mat-checkbox`.\n      this._inputElement.nativeElement.checked = this.checked;\n      this._inputElement.nativeElement.indeterminate = this.indeterminate;\n    }\n  }\n  _onInteractionEvent(event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n  _onBlur() {\n    // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n    // Angular does not expect events to be raised during change detection, so any state change\n    // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n    // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n    // telling the form control it has been touched until the next tick.\n    Promise.resolve().then(() => {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  _getAnimationClassForCheckStateTransition(oldState, newState) {\n    // Don't transition if animations are disabled.\n    if (this._animationMode === 'NoopAnimations') {\n      return '';\n    }\n    switch (oldState) {\n      case TransitionCheckState.Init:\n        // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n        // [checked] bound to it.\n        if (newState === TransitionCheckState.Checked) {\n          return this._animationClasses.uncheckedToChecked;\n        } else if (newState == TransitionCheckState.Indeterminate) {\n          return this._checked ? this._animationClasses.checkedToIndeterminate : this._animationClasses.uncheckedToIndeterminate;\n        }\n        break;\n      case TransitionCheckState.Unchecked:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.uncheckedToChecked : this._animationClasses.uncheckedToIndeterminate;\n      case TransitionCheckState.Checked:\n        return newState === TransitionCheckState.Unchecked ? this._animationClasses.checkedToUnchecked : this._animationClasses.checkedToIndeterminate;\n      case TransitionCheckState.Indeterminate:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.indeterminateToChecked : this._animationClasses.indeterminateToUnchecked;\n    }\n    return '';\n  }\n  /**\n   * Syncs the indeterminate value with the checkbox DOM node.\n   *\n   * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n   * property is supported on an element boils down to `if (propName in element)`. Domino's\n   * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n   * server-side rendering.\n   */\n  _syncIndeterminate(value) {\n    const nativeCheckbox = this._inputElement;\n    if (nativeCheckbox) {\n      nativeCheckbox.nativeElement.indeterminate = value;\n    }\n  }\n  _onInputClick() {\n    this._handleInputClick();\n  }\n  _onTouchTargetClick() {\n    this._handleInputClick();\n    if (!this.disabled) {\n      // Normally the input should be focused already, but if the click\n      // comes from the touch target, then we might have to focus it ourselves.\n      this._inputElement.nativeElement.focus();\n    }\n  }\n  /**\n   *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n   *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n   *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n   *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n   *  bubbles when the label is clicked.\n   */\n  _preventBubblingFromLabel(event) {\n    if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n      event.stopPropagation();\n    }\n  }\n  static {\n    this.ɵfac = function MatCheckbox_Factory(t) {\n      return new (t || MatCheckbox)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatCheckbox,\n      selectors: [[\"mat-checkbox\"]],\n      viewQuery: function MatCheckbox_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(MatRipple, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-checkbox\"],\n      hostVars: 14,\n      hostBindings: function MatCheckbox_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null);\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"mat-accent\");\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mdc-checkbox--disabled\", ctx.disabled)(\"mat-mdc-checkbox-disabled\", ctx.disabled)(\"mat-mdc-checkbox-checked\", ctx.checked);\n        }\n      },\n      inputs: {\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n        ariaDescribedby: [i0.ɵɵInputFlags.None, \"aria-describedby\", \"ariaDescribedby\"],\n        id: \"id\",\n        required: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute],\n        labelPosition: \"labelPosition\",\n        name: \"name\",\n        value: \"value\",\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => value == null ? undefined : numberAttribute(value)],\n        color: \"color\",\n        checked: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"checked\", \"checked\", booleanAttribute],\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        indeterminate: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"indeterminate\", \"indeterminate\", booleanAttribute]\n      },\n      outputs: {\n        change: \"change\",\n        indeterminateChange: \"indeterminateChange\"\n      },\n      exportAs: [\"matCheckbox\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, {\n        provide: NG_VALIDATORS,\n        useExisting: MatCheckbox,\n        multi: true\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c2,\n      decls: 15,\n      vars: 19,\n      consts: [[\"checkbox\", \"\"], [\"input\", \"\"], [\"label\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"click\", \"labelPosition\"], [1, \"mdc-checkbox\"], [1, \"mat-mdc-checkbox-touch-target\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"mdc-checkbox__native-control\", 3, \"blur\", \"click\", \"change\", \"checked\", \"indeterminate\", \"disabled\", \"id\", \"required\", \"tabIndex\"], [1, \"mdc-checkbox__ripple\"], [1, \"mdc-checkbox__background\"], [\"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-checkbox__checkmark\"], [\"fill\", \"none\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-checkbox__checkmark-path\"], [1, \"mdc-checkbox__mixedmark\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-checkbox-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-label\", 3, \"for\"]],\n      template: function MatCheckbox_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 3);\n          i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._preventBubblingFromLabel($event));\n          });\n          i0.ɵɵelementStart(1, \"div\", 4, 0)(3, \"div\", 5);\n          i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onTouchTargetClick());\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 6, 1);\n          i0.ɵɵlistener(\"blur\", function MatCheckbox_Template_input_blur_4_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onBlur());\n          })(\"click\", function MatCheckbox_Template_input_click_4_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onInputClick());\n          })(\"change\", function MatCheckbox_Template_input_change_4_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onInteractionEvent($event));\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"div\", 7);\n          i0.ɵɵelementStart(7, \"div\", 8);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(8, \"svg\", 9);\n          i0.ɵɵelement(9, \"path\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelement(10, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"label\", 13, 2);\n          i0.ɵɵprojection(14);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          const checkbox_r2 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"mdc-checkbox--selected\", ctx.checked);\n          i0.ɵɵproperty(\"checked\", ctx.checked)(\"indeterminate\", ctx.indeterminate)(\"disabled\", ctx.disabled)(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.disabled ? -1 : ctx.tabIndex);\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-checked\", ctx.indeterminate ? \"mixed\" : null)(\"name\", ctx.name)(\"value\", ctx.value);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"matRippleTrigger\", checkbox_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"for\", ctx.inputId);\n        }\n      },\n      dependencies: [MatRipple, _MatInternalFormField],\n      styles: [\".mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}@keyframes mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}}@keyframes mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}}.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2)}.mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:focus:not(:checked):not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-checkbox',\n      host: {\n        'class': 'mat-mdc-checkbox',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n        '[class.mdc-checkbox--disabled]': 'disabled',\n        '[id]': 'id',\n        // Add classes that users can use to more easily target disabled or checked checkboxes.\n        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n        '[class.mat-mdc-checkbox-checked]': 'checked',\n        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"'\n      },\n      providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, {\n        provide: NG_VALIDATORS,\n        useExisting: MatCheckbox,\n        multi: true\n      }],\n      exportAs: 'matCheckbox',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      imports: [MatRipple, _MatInternalFormField],\n      template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\"\\n         #label\\n         [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\",\n      styles: [\".mdc-touch-target-wrapper{display:inline}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:mdc-animation-deceleration-curve-timing-function;transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom}.mdc-checkbox[hidden]{display:none}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{pointer-events:none;border:2px solid rgba(0,0,0,0);border-radius:6px;box-sizing:content-box;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:100%;width:100%}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring{border-color:CanvasText}}.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{content:\\\"\\\";border:2px solid rgba(0,0,0,0);border-radius:8px;display:block;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);height:calc(100% + 4px);width:calc(100% + 4px)}@media screen and (forced-colors: active){.mdc-checkbox.mdc-ripple-upgraded--background-focused .mdc-checkbox__focus-ring::after,.mdc-checkbox:not(.mdc-ripple-upgraded):focus .mdc-checkbox__focus-ring::after{border-color:CanvasText}}@media all and (-ms-high-contrast: none){.mdc-checkbox .mdc-checkbox__focus-ring{display:none}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled{cursor:default;pointer-events:none}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--upgraded .mdc-checkbox__checkmark{opacity:1}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear 0s;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear 0s;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear 0s;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background{transition:border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark-path,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit}.mdc-checkbox__native-control:disabled{cursor:default;pointer-events:none}.mdc-checkbox--touch{margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox--touch .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__checkmark{transition:opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__checkmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background .mdc-checkbox__mixedmark,.mdc-checkbox__native-control[data-indeterminate=true]~.mdc-checkbox__background .mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__checkmark-path,.mdc-checkbox.mdc-checkbox--upgraded .mdc-checkbox__mixedmark{transition:none}.mdc-checkbox{padding:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);margin:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2)}.mdc-checkbox .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-disabled-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control[disabled]:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[disabled]:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true][disabled]~.mdc-checkbox__background{border-color:transparent;background-color:var(--mdc-checkbox-disabled-selected-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__checkmark{color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:disabled~.mdc-checkbox__background .mdc-checkbox__mixedmark{border-color:var(--mdc-checkbox-disabled-selected-checkmark-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-icon-color);background-color:var(--mdc-checkbox-selected-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-icon-color);background-color:transparent}}.mdc-checkbox.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:hover .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}@keyframes mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}}@keyframes mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-hover-icon-color);background-color:var(--mdc-checkbox-selected-hover-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-hover-icon-color);background-color:transparent}}.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:hover.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:hover.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-FF212121FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active .mdc-checkbox__native-control[data-indeterminate=true]:enabled~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}@keyframes mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336{0%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}50%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}}@keyframes mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336{0%,80%{border-color:var(--mdc-checkbox-selected-pressed-icon-color);background-color:var(--mdc-checkbox-selected-pressed-icon-color)}100%{border-color:var(--mdc-checkbox-unselected-pressed-icon-color);background-color:transparent}}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-in-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background,.mdc-checkbox:not(:disabled):active.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__native-control:enabled~.mdc-checkbox__background{animation-name:mdc-checkbox-fade-out-background-8A000000FFF4433600000000FFF44336}.mdc-checkbox .mdc-checkbox__background{top:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - 18px) / 2)}.mdc-checkbox .mdc-checkbox__native-control{top:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);right:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);left:calc((var(--mdc-checkbox-state-layer-size) - var(--mdc-checkbox-state-layer-size)) / 2);width:var(--mdc-checkbox-state-layer-size);height:var(--mdc-checkbox-state-layer-size)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:focus:not(:checked):not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mdc-checkbox-unselected-focus-icon-color)}.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:checked~.mdc-checkbox__background,.mdc-checkbox .mdc-checkbox__native-control:enabled:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mdc-checkbox-selected-focus-icon-color);background-color:var(--mdc-checkbox-selected-focus-icon-color)}.mdc-checkbox:hover .mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox:hover .mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-unselected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-unselected-pressed-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-hover-state-layer-opacity);background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-hover-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-focus-state-layer-opacity);background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-focus-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple{opacity:var(--mdc-checkbox-selected-pressed-state-layer-opacity);background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mdc-checkbox:active .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mdc-checkbox-selected-pressed-state-layer-color)}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox .mdc-checkbox__background{-webkit-print-color-adjust:exact;color-adjust:exact}.mat-mdc-checkbox._mat-animation-noopable *,.mat-mdc-checkbox._mat-animation-noopable *::before{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color)}.mat-mdc-checkbox label:empty{display:none}.cdk-high-contrast-active .mat-mdc-checkbox.mat-mdc-checkbox-disabled{opacity:.5}.cdk-high-contrast-active .mat-mdc-checkbox .mdc-checkbox__checkmark{--mdc-checkbox-selected-checkmark-color: CanvasText;--mdc-checkbox-disabled-selected-checkmark-color: CanvasText}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display)}.mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-mdc-focus-indicator::before{content:\\\"\\\"}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n    }]\n  }], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    id: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    indeterminateChange: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    _inputElement: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    _labelElement: [{\n      type: ViewChild,\n      args: ['label']\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? undefined : numberAttribute(value)\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    ripple: [{\n      type: ViewChild,\n      args: [MatRipple]\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    indeterminate: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatCheckboxRequiredValidator_BaseFactory;\n      return function MatCheckboxRequiredValidator_Factory(t) {\n        return (ɵMatCheckboxRequiredValidator_BaseFactory || (ɵMatCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator)))(t || MatCheckboxRequiredValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatCheckboxRequiredValidator,\n      selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n      providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass _MatCheckboxRequiredValidatorModule {\n  static {\n    this.ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(t) {\n      return new (t || _MatCheckboxRequiredValidatorModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: _MatCheckboxRequiredValidatorModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCheckboxRequiredValidator],\n      exports: [MatCheckboxRequiredValidator]\n    }]\n  }], null, null);\n})();\nclass MatCheckboxModule {\n  static {\n    this.ɵfac = function MatCheckboxModule_Factory(t) {\n      return new (t || MatCheckboxModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatCheckboxModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCheckbox, MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCheckbox, MatCommonModule],\n      exports: [MatCheckbox, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, TransitionCheckState, _MatCheckboxRequiredValidatorModule };\n","/// <reference path=\"../../../../../node_modules/monaco-editor/monaco.d.ts\" />\r\nimport { Component, Input, ViewChild, ElementRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'json-diff-editor',\r\n    templateUrl: './json-diff-editor.component.html',\r\n    styleUrls: ['./json-diff-editor.component.css']\r\n})\r\nexport class JsonDiffEditorComponent implements OnInit, OnChanges {\r\n    @ViewChild('diffEditorContainer', { static: true }) diffEditorContainer!: ElementRef;\r\n    diffEditor!: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    @Input() originalData: any = {};\r\n    @Input() modifiedData: any = {};\r\n    @Input() editorWidth = '100%';\r\n    @Input() theme = 'vs-light';\r\n    @Input() sideBySide = true;\r\n\r\n    private originalModel!: monaco.editor.ITextModel | null;\r\n    private modifiedModel!: monaco.editor.ITextModel | null;\r\n\r\n    ngOnInit(): void {\r\n        this.initializeEditor();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.diffEditor) {\r\n            this.diffEditor.dispose();\r\n        }\r\n\r\n        if (this.originalModel) {\r\n            this.originalModel.dispose();\r\n        }\r\n        \r\n        if (this.modifiedModel) {\r\n            this.modifiedModel.dispose();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes['originalData'] || changes['modifiedData']) {\r\n            this.updateEditorContent();\r\n        }\r\n    }\r\n\r\n    height: number = 75;\r\n\r\n    get editorHeight() {\r\n        return `${this.height}px`;\r\n    }\r\n\r\n    initializeEditor(): void {\r\n\r\n        if (this.diffEditor) {\r\n            return;\r\n        }\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(this.diffEditorContainer.nativeElement, {\r\n            theme: this.theme,\r\n            automaticLayout: true,\r\n            renderSideBySide: this.sideBySide,\r\n            renderOverviewRuler: true,\r\n            minimap: { enabled: true },\r\n            glyphMargin: false,\r\n            lineNumbers: 'on',\r\n            folding: true,\r\n            scrollBeyondLastLine: true,\r\n            renderLineHighlight: 'line',\r\n            selectionHighlight: true,\r\n            renderWhitespace: 'none',\r\n            links: false,\r\n            contextmenu: false,\r\n            cursorBlinking: 'solid',\r\n            smoothScrolling: true,\r\n            wordWrap: 'on',\r\n            enableSplitViewResizing: true,\r\n            renderIndicators: false,\r\n            readOnly: true,\r\n            ignoreTrimWhitespace: true,\r\n            hideCursorInOverviewRuler: true,\r\n            renderControlCharacters: false,\r\n        });\r\n\r\n        this.updateEditorContent();\r\n    }\r\n\r\n    updateEditorContent(): void {\r\n\r\n        if (!this.diffEditor) {\r\n            return;\r\n        }\r\n\r\n        const originalContent = JSON.stringify(this.originalData, null, 4);\r\n        const modifiedContent = JSON.stringify(this.modifiedData, null, 4);\r\n\r\n        this.originalModel = monaco.editor.createModel(originalContent, 'json');\r\n        this.modifiedModel = monaco.editor.createModel(modifiedContent, 'json');\r\n\r\n        this.diffEditor.setModel({\r\n            original: this.originalModel,\r\n            modified: this.modifiedModel\r\n        });\r\n\r\n        this.adjustHeight(originalContent.length > modifiedContent.length ? originalContent : modifiedContent);\r\n    }\r\n\r\n    adjustHeight(value: string) {\r\n\r\n        const height = this.getContentHeight(value);\r\n\r\n        this.height = Math.min(300, height);\r\n    }\r\n\r\n    getContentHeight(content: string): number {\r\n        const lineHeight = 19;\r\n        const lineCount = (content.match(/\\n/g) || []).length + 1;\r\n        return lineHeight * lineCount;\r\n    }\r\n\r\n    toggleSideBySide(): void {\r\n        this.sideBySide = !this.sideBySide;\r\n\r\n        if (!this.diffEditor) {\r\n            return;\r\n        }\r\n\r\n        this.diffEditor.updateOptions({\r\n            renderSideBySide: this.sideBySide,\r\n        });\r\n    }\r\n}","<div #diffEditorContainer [style.width]=\"editorWidth\" [style.height]=\"editorHeight\"></div>\r\n<mat-checkbox [checked]=\"sideBySide\" (click)=\"toggleSideBySide()\">Render side by side</mat-checkbox>\r\n","import { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar, MatSnackBarRef, TextOnlySnackBar } from \"@angular/material/snack-bar\";\r\nimport { MatSelect } from \"@angular/material/select\";\r\nimport { SettingHistoriesService } from \"../../services/setting-histories.service\";\r\nimport { Component, AfterViewInit, ViewChild, Inject, OnDestroy } from \"@angular/core\";\r\nimport { ThemeService } from \"../../../../core/services/theme.service\";\r\nimport { UtilityService } from \"../../../../shared/services/utility.service\";\r\nimport { RestoreSettingHistoryRequestBody } from \"../../models/restore-setting-history-request-body\";\r\nimport { GetSettingHistoriesResponse } from \"../../models/get-setting-histories-response\";\r\nimport { of, Subscription, switchMap } from \"rxjs\";\r\nimport { HistoryData } from \"../../models/history-data\";\r\nimport { SettingHistoryListComponentResponseModel } from \"../../models/setting-history-list-component-response.model\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { IResponse } from \"../../../../shared/models/response\";\r\nimport { RestoreSettingHistoryResponse } from \"../../models/restore-setting-history-response\";\r\nimport { ConflictResolverDialogComponent, ConflictResolverReturnType } from \"../../../../shared/components/conflict-resolver-dialog/conflict-resolver-dialog.component\";\r\nimport { WindowService } from \"../../../../core/services/window.service\";\r\n\r\nexport interface SettingHistoryListComponentModel {\r\n    clientName: string;\r\n    clientId: string;\r\n    settingId: string;\r\n    className: string;\r\n    classFullName: string;\r\n    computedIdentifier: string;\r\n    identifierName: string;\r\n    currentVersion: string;\r\n    tempData: object;\r\n    currentRawData: string;\r\n    currentParsedData: object;\r\n    rowVersion: string;\r\n    model: GetSettingHistoriesResponse[];\r\n}\r\n\r\n@Component({\r\n    templateUrl: './setting-history-list.component.html',\r\n    styleUrls: ['./setting-history-list.component.css']\r\n})\r\nexport class SettingHistoryListComponent implements AfterViewInit, OnDestroy {\r\n    @ViewChild('versionSelection') versionSelection!: MatSelect;\r\n    model: GetSettingHistoriesResponse[] = [];\r\n    versionToHistoryDictionary: Record<string, HistoryData> = {};\r\n    isFullScreen: boolean = false;\r\n    theme: string;\r\n    isConnectionSecure?: boolean;\r\n    selectedVersionToLoading: { [key: string]: boolean } = {};\r\n    subscriptions: Subscription = new Subscription();\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        public dialogRef: MatDialogRef<SettingHistoryListComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: SettingHistoryListComponentModel,\r\n        private settingHistoriesService: SettingHistoriesService,\r\n        private utilityService: UtilityService,\r\n        private windowService: WindowService,\r\n        private snackBar: MatSnackBar,\r\n        private themeService: ThemeService) {\r\n\r\n        this.theme = this.themeService.isDarkTheme() ? 'vs-dark' : 'vs-light';\r\n        this.isConnectionSecure = this.windowService.isConnectionSecure;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            this.versionSelection.open();\r\n        }, 150);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    selectedVersion: string = '';\r\n    selectedData = { rawData: '', parsedData: {} };\r\n    isSelected: boolean = false;\r\n    isRestoreButtonEnabled: boolean = true;\r\n    isCompareClicked: boolean = false;\r\n\r\n    onVersionSelected() {\r\n\r\n        this.isRestoreButtonEnabled = true;\r\n        this.isSelected = true;\r\n\r\n        const historyData = this.versionToHistoryDictionary[this.selectedVersion];\r\n\r\n        if (historyData !== undefined) {\r\n            this.selectedData = { rawData: historyData.rawData, parsedData: historyData.parsedData };\r\n            this.selectedVersionToLoading[this.selectedVersion] = false;\r\n            return;\r\n        }\r\n\r\n        this.selectedVersionToLoading[this.selectedVersion] = true;\r\n\r\n        const history = this.data.model.find(m => m.version === this.selectedVersion);\r\n\r\n        if (!history) {\r\n            return;\r\n        }\r\n\r\n        const subscription = this.settingHistoriesService.getSettingHistoryData({\r\n            historyId: history.id\r\n        }).subscribe({\r\n            next: (response) => {\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                const rawData = responseData.data;\r\n                const parsedData = JSON.parse(responseData.data);\r\n\r\n                this.versionToHistoryDictionary[this.selectedVersion] = { historyId: history.id, rawData, parsedData, rowVersion: history.rowVersion }\r\n\r\n                this.selectedData = { rawData, parsedData };\r\n\r\n                this.selectedVersionToLoading[this.selectedVersion] = false;\r\n            },\r\n            error: (errr) => {\r\n                this.selectedVersionToLoading[this.selectedVersion] = false;\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    copyToClipboard() {\r\n        const value = JSON.stringify(this.selectedData.parsedData, null, 4)\r\n\r\n        this.utilityService.copyToClipboard(value);\r\n    }\r\n\r\n    download() {\r\n\r\n        // const model = {\r\n        //     [this.data.classFullName]: this.selectedData.parsedData\r\n        // };\r\n\r\n        const value = JSON.stringify(this.selectedData.parsedData, null, 4)\r\n\r\n        this.utilityService.download(value, this.data.className);\r\n    }\r\n\r\n    restore() {\r\n        const historyData = this.versionToHistoryDictionary[this.selectedVersion];\r\n\r\n        this.isRestoreButtonEnabled = false;\r\n\r\n        const restoreSettingHistoryRequestBody: RestoreSettingHistoryRequestBody = {\r\n            settingRowVersion: this.data.rowVersion,\r\n            historyRowVersion: historyData.rowVersion\r\n        };\r\n\r\n        let model: SettingHistoryListComponentResponseModel;\r\n\r\n        const subscription = this.settingHistoriesService.restoreSettingHistory({\r\n            historyId: historyData.historyId,\r\n            body: restoreSettingHistoryRequestBody\r\n        }).subscribe({\r\n            next: (response) => {\r\n\r\n                if (response.data) {\r\n                    this.snackBar.open(`Setting restored!`, 'Close', {\r\n                        horizontalPosition: 'right',\r\n                        verticalPosition: 'top',\r\n                        duration: 1500\r\n                    });\r\n\r\n                    this.dialogRef.close({\r\n                        fetchLatest: true\r\n                    });\r\n                }\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n\r\n                const error = err.error as IResponse<RestoreSettingHistoryResponse>;\r\n\r\n                if (error.errors) {\r\n\r\n                    if (error.status === 409) {\r\n                        const availableReturnTypes: ConflictResolverReturnType[] = ['Discard', 'Fetch Latest'];\r\n\r\n                        const conflictResolverDialogComponent = this.dialog.open(ConflictResolverDialogComponent, {\r\n                            width: '400px',\r\n                            data: availableReturnTypes,\r\n                            autoFocus: false\r\n                        }).afterClosed().subscribe((type: ConflictResolverReturnType) => {\r\n                            if (type === \"Fetch Latest\") {\r\n\r\n                                model = {\r\n                                    rawData: '',\r\n                                    parsedData: {},\r\n                                    version: '',\r\n                                    settingRowVersion: '',\r\n                                    fetchLatest: true\r\n                                };\r\n\r\n                                this.dialogRef.close(model);\r\n                            }\r\n                        });\r\n\r\n                        this.subscriptions.add(conflictResolverDialogComponent);\r\n                    }\r\n                    else if (error.errors.find(e => e.traces == 'HistoryAlreadyRestored')) {\r\n                        model = {\r\n                            rawData: '',\r\n                            parsedData: {},\r\n                            version: '',\r\n                            settingRowVersion: '',\r\n                            fetchLatest: true\r\n                        };\r\n\r\n                        this.dialogRef.close(model);\r\n                    }\r\n                }\r\n\r\n                this.isRestoreButtonEnabled = true;\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    toggleFullScreen() {\r\n        this.isFullScreen = !this.isFullScreen;\r\n\r\n        const dialogElement = document.querySelector('.mat-mdc-dialog-surface');\r\n\r\n        if (this.isFullScreen) {\r\n            dialogElement?.setAttribute('style', `\r\n                  border-radius: 0 !important;\r\n                `);\r\n\r\n            this.dialogRef.updateSize('100%', '100%');\r\n        } else {\r\n            this.dialogRef.updateSize('1350px', '680px');\r\n            dialogElement?.removeAttribute('style');\r\n        }\r\n    }\r\n}","<div class=\"d-flex border-bottom\">\r\n  <div class=\"dialog-title\">Histories > {{data.clientName}}</div>\r\n  <div class=\"dialog-subtitle\">{{data.identifierName}} - {{this.data.className}}</div>\r\n  <span></span>\r\n  <span class=\"spacer\"></span>\r\n  <button mat-icon-button (click)=\"toggleFullScreen()\"\r\n    [matTooltip]=\"isFullScreen ? 'Exit full screen' : 'Enter full screen'\" matTooltipPosition=\"above\">\r\n    <mat-icon>{{ isFullScreen ? 'fullscreen_exit' : 'fullscreen' }}</mat-icon>\r\n  </button>\r\n  <button mat-icon-button mat-dialog-close matTooltip=\"Close\" matTooltipPosition=\"above\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</div>\r\n\r\n<mat-form-field class=\"custom-form-field\">\r\n  <mat-label>Version</mat-label>\r\n  <mat-select [(ngModel)]=\"selectedVersion\" (selectionChange)=\"onVersionSelected()\" #versionSelection>\r\n    <mat-option *ngFor=\"let history of this.data.model\" [value]=\"history.version\"\r\n      [disabled]=\"history.version === data.currentVersion\">v{{history.version}} -\r\n      {{history.createdOn}}</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\r\n<ng-container *ngIf=\"isSelected\">\r\n  <div class=\"d-flex\">\r\n    <button mat-button matTooltip=\"Restore\" color=\"primary\" (click)=\"restore()\" [disabled]=\"!isRestoreButtonEnabled\">\r\n      <mat-icon iconPositionEnd>restore</mat-icon>\r\n    </button>\r\n    <span class=\"spacer\"></span>\r\n    <button mat-button matTooltip=\"Download\" color=\"primary\" (click)=\"download()\">\r\n      <mat-icon>download</mat-icon>\r\n    </button>\r\n    <button mat-button matTooltip=\"Copy\" color=\"primary\" (click)=\"copyToClipboard()\" *ngIf=\"isConnectionSecure\">\r\n      <mat-icon>content_copy</mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-accordion>\r\n    <div class=\"loading-container\" *ngIf=\"selectedVersionToLoading[selectedVersion]\">\r\n      <div class=\"mat-bg-primary position-absolute rounded-circle app-icon-animation\"><img class=\"app-icon bg-white\"></div>\r\n      <div class=\"loading-spinner\"></div>\r\n    </div>\r\n    <mat-expansion-panel [expanded]=\"true\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>View Data</mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <json-editor [readonly]=\"true\" [(ngModel)]=\"selectedData.parsedData\" [theme]=\"theme\"></json-editor>\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>Compare Data</mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <json-diff-editor [modifiedData]=\"selectedData.parsedData\" [originalData]=\"data.currentParsedData\"\r\n        [sideBySide]=\"true\" [theme]=\"theme\"></json-diff-editor>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</ng-container>","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i1 from '@angular/cdk/a11y';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst _c0 = [\"switch\"];\nconst _c1 = [\"*\"];\nfunction MatSlideToggle_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 12);\n    i0.ɵɵelement(2, \"path\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"svg\", 14);\n    i0.ɵɵelement(4, \"path\", 15);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    disableToggleValue: false,\n    hideIcon: false\n  })\n});\n\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlideToggle),\n  multi: true\n};\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n  constructor( /** The source slide toggle of the event. */\n  source, /** The new `checked` value of the slide toggle. */\n  checked) {\n    this.source = source;\n    this.checked = checked;\n  }\n}\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\nclass MatSlideToggle {\n  _createChangeEvent(isChecked) {\n    return new MatSlideToggleChange(this, isChecked);\n  }\n  /** Returns the unique id for the visual hidden button. */\n  get buttonId() {\n    return `${this.id || this._uniqueId}-button`;\n  }\n  /** Focuses the slide-toggle. */\n  focus() {\n    this._switchElement.nativeElement.focus();\n  }\n  /** Whether the slide-toggle element is checked or not. */\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    this._checked = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Returns the unique id for the visual hidden input. */\n  get inputId() {\n    return `${this.id || this._uniqueId}-input`;\n  }\n  constructor(_elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n    this._elementRef = _elementRef;\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this.defaults = defaults;\n    this._onChange = _ => {};\n    this._onTouched = () => {};\n    this._validatorOnChange = () => {};\n    this._checked = false;\n    /** Name value will be applied to the input element if present. */\n    this.name = null;\n    /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n    this.labelPosition = 'after';\n    /** Used to set the aria-label attribute on the underlying input element. */\n    this.ariaLabel = null;\n    /** Used to set the aria-labelledby attribute on the underlying input element. */\n    this.ariaLabelledby = null;\n    /** Whether the slide toggle is disabled. */\n    this.disabled = false;\n    /** Whether the slide toggle has a ripple. */\n    this.disableRipple = false;\n    /** Tabindex of slide toggle. */\n    this.tabIndex = 0;\n    /** An event will be dispatched each time the slide-toggle changes its value. */\n    this.change = new EventEmitter();\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     */\n    this.toggleChange = new EventEmitter();\n    this.tabIndex = parseInt(tabIndex) || 0;\n    this.color = defaults.color || 'accent';\n    this._noopAnimations = animationMode === 'NoopAnimations';\n    this.id = this._uniqueId = `mat-mdc-slide-toggle-${++nextUniqueId}`;\n    this.hideIcon = defaults.hideIcon ?? false;\n    this._labelId = this._uniqueId + '-label';\n  }\n  ngAfterContentInit() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n      if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n        this._focused = true;\n        this._changeDetectorRef.markForCheck();\n      } else if (!focusOrigin) {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state\n        // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n          this._focused = false;\n          this._onTouched();\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    });\n  }\n  ngOnChanges(changes) {\n    if (changes['required']) {\n      this._validatorOnChange();\n    }\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  writeValue(value) {\n    this.checked = !!value;\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /** Implemented as a part of Validator. */\n  validate(control) {\n    return this.required && control.value !== true ? {\n      'required': true\n    } : null;\n  }\n  /** Implemented as a part of Validator. */\n  registerOnValidatorChange(fn) {\n    this._validatorOnChange = fn;\n  }\n  /** Implemented as a part of ControlValueAccessor. */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Toggles the checked state of the slide-toggle. */\n  toggle() {\n    this.checked = !this.checked;\n    this._onChange(this.checked);\n  }\n  /**\n   * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n   */\n  _emitChangeEvent() {\n    this._onChange(this.checked);\n    this.change.emit(this._createChangeEvent(this.checked));\n  }\n  /** Method being called whenever the underlying button is clicked. */\n  _handleClick() {\n    this.toggleChange.emit();\n    if (!this.defaults.disableToggleValue) {\n      this.checked = !this.checked;\n      this._onChange(this.checked);\n      this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n  }\n  _getAriaLabelledBy() {\n    if (this.ariaLabelledby) {\n      return this.ariaLabelledby;\n    }\n    // Even though we have a `label` element with a `for` pointing to the button, we need the\n    // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n    return this.ariaLabel ? null : this._labelId;\n  }\n  static {\n    this.ɵfac = function MatSlideToggle_Factory(t) {\n      return new (t || MatSlideToggle)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSlideToggle,\n      selectors: [[\"mat-slide-toggle\"]],\n      viewQuery: function MatSlideToggle_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._switchElement = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-slide-toggle\"],\n      hostVars: 13,\n      hostBindings: function MatSlideToggle_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.id);\n          i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"name\", null)(\"aria-labelledby\", null);\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-mdc-slide-toggle-focused\", ctx._focused)(\"mat-mdc-slide-toggle-checked\", ctx.checked)(\"_mat-animation-noopable\", ctx._noopAnimations);\n        }\n      },\n      inputs: {\n        name: \"name\",\n        id: \"id\",\n        labelPosition: \"labelPosition\",\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n        ariaDescribedby: [i0.ɵɵInputFlags.None, \"aria-describedby\", \"ariaDescribedby\"],\n        required: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute],\n        color: \"color\",\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n        checked: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"checked\", \"checked\", booleanAttribute],\n        hideIcon: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hideIcon\", \"hideIcon\", booleanAttribute]\n      },\n      outputs: {\n        change: \"change\",\n        toggleChange: \"toggleChange\"\n      },\n      exportAs: [\"matSlideToggle\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, {\n        provide: NG_VALIDATORS,\n        useExisting: MatSlideToggle,\n        multi: true\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 13,\n      vars: 24,\n      consts: [[\"switch\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"labelPosition\"], [\"role\", \"switch\", \"type\", \"button\", 1, \"mdc-switch\", 3, \"click\", \"tabIndex\", \"disabled\"], [1, \"mdc-switch__track\"], [1, \"mdc-switch__handle-track\"], [1, \"mdc-switch__handle\"], [1, \"mdc-switch__shadow\"], [1, \"mdc-elevation-overlay\"], [1, \"mdc-switch__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-slide-toggle-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-switch__icons\"], [1, \"mdc-label\", 3, \"click\", \"for\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--on\"], [\"d\", \"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--off\"], [\"d\", \"M20 13H4v-2h16v2z\"]],\n      template: function MatSlideToggle_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2, 0);\n          i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_button_click_1_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleClick());\n          });\n          i0.ɵɵelement(3, \"div\", 3);\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n          i0.ɵɵelement(7, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 8);\n          i0.ɵɵelement(9, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(10, MatSlideToggle_Conditional_10_Template, 5, 0, \"div\", 10);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"label\", 11);\n          i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_label_click_11_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView($event.stopPropagation());\n          });\n          i0.ɵɵprojection(12);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          const switch_r2 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"mdc-switch--selected\", ctx.checked)(\"mdc-switch--unselected\", !ctx.checked)(\"mdc-switch--checked\", ctx.checked)(\"mdc-switch--disabled\", ctx.disabled);\n          i0.ɵɵproperty(\"tabIndex\", ctx.disabled ? -1 : ctx.tabIndex)(\"disabled\", ctx.disabled);\n          i0.ɵɵattribute(\"id\", ctx.buttonId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx._getAriaLabelledBy())(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-required\", ctx.required || null)(\"aria-checked\", ctx.checked);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"matRippleTrigger\", switch_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n          i0.ɵɵadvance();\n          i0.ɵɵconditional(10, !ctx.hideIcon ? 10 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"for\", ctx.buttonId);\n          i0.ɵɵattribute(\"id\", ctx._labelId);\n        }\n      },\n      dependencies: [MatRipple, _MatInternalFormField],\n      styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mdc-switch-disabled-label-text-color)}.mdc-switch{width:var(--mdc-switch-track-width)}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color)}.mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color)}.mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation)}.mdc-switch .mdc-switch__focus-ring-wrapper,.mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height)}.mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape)}.mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width)}.mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width))}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size)}.mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size);width:var(--mdc-switch-state-layer-size)}.mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height)}.mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color)}.mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color)}.mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mdc-switch__handle{transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-switch-unselected-handle-size);height:var(--mat-switch-unselected-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-switch-selected-handle-size);height:var(--mat-switch-selected-handle-size)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-switch-with-icon-handle-size);height:var(--mat-switch-with-icon-handle-size)}.mat-mdc-slide-toggle:active .mdc-switch:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-switch-pressed-handle-size);height:var(--mat-switch-pressed-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{margin:var(--mat-switch-selected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-selected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{margin:var(--mat-switch-unselected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-unselected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle:active .mdc-switch--selected:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-selected-pressed-handle-horizontal-margin)}.mat-mdc-slide-toggle:active .mdc-switch--unselected:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-unselected-pressed-handle-horizontal-margin)}.mdc-switch__track::after,.mdc-switch__track::before{border-width:var(--mat-switch-track-outline-width);border-color:var(--mat-switch-track-outline-color)}.mdc-switch--selected .mdc-switch__track::after,.mdc-switch--selected .mdc-switch__track::before{border-width:var(--mat-switch-selected-track-outline-width)}.mdc-switch--disabled .mdc-switch__track::after,.mdc-switch--disabled .mdc-switch__track::before{border-width:var(--mat-switch-disabled-unselected-track-outline-width);border-color:var(--mat-switch-disabled-unselected-track-outline-color)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-selected-handle-opacity)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-unselected-handle-opacity)}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlideToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slide-toggle',\n      host: {\n        'class': 'mat-mdc-slide-toggle',\n        '[id]': 'id',\n        // Needs to be removed since it causes some a11y issues (see #21266).\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.name]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[class.mat-mdc-slide-toggle-focused]': '_focused',\n        '[class.mat-mdc-slide-toggle-checked]': 'checked',\n        '[class._mat-animation-noopable]': '_noopAnimations',\n        '[class]': 'color ? \"mat-\" + color : \"\"'\n      },\n      exportAs: 'matSlideToggle',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, {\n        provide: NG_VALIDATORS,\n        useExisting: MatSlideToggle,\n        multi: true\n      }],\n      standalone: true,\n      imports: [MatRipple, _MatInternalFormField],\n      template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [tabIndex]=\\\"disabled ? -1 : tabIndex\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <div class=\\\"mdc-switch__track\\\"></div>\\n    <div class=\\\"mdc-switch__handle-track\\\">\\n      <div class=\\\"mdc-switch__handle\\\">\\n        <div class=\\\"mdc-switch__shadow\\\">\\n          <div class=\\\"mdc-elevation-overlay\\\"></div>\\n        </div>\\n        <div class=\\\"mdc-switch__ripple\\\">\\n          <div class=\\\"mat-mdc-slide-toggle-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></div>\\n        </div>\\n        @if (!hideIcon) {\\n          <div class=\\\"mdc-switch__icons\\\">\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--on\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n            </svg>\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--off\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n            </svg>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\",\n      styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mdc-switch-disabled-label-text-color)}.mdc-switch{width:var(--mdc-switch-track-width)}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color)}.mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color)}.mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation)}.mdc-switch .mdc-switch__focus-ring-wrapper,.mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height)}.mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape)}.mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width)}.mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width))}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size)}.mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size);width:var(--mdc-switch-state-layer-size)}.mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height)}.mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color)}.mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color)}.mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mdc-switch__handle{transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-switch-unselected-handle-size);height:var(--mat-switch-unselected-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-switch-selected-handle-size);height:var(--mat-switch-selected-handle-size)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-switch-with-icon-handle-size);height:var(--mat-switch-with-icon-handle-size)}.mat-mdc-slide-toggle:active .mdc-switch:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-switch-pressed-handle-size);height:var(--mat-switch-pressed-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{margin:var(--mat-switch-selected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-selected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{margin:var(--mat-switch-unselected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-unselected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle:active .mdc-switch--selected:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-selected-pressed-handle-horizontal-margin)}.mat-mdc-slide-toggle:active .mdc-switch--unselected:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-unselected-pressed-handle-horizontal-margin)}.mdc-switch__track::after,.mdc-switch__track::before{border-width:var(--mat-switch-track-outline-width);border-color:var(--mat-switch-track-outline-color)}.mdc-switch--selected .mdc-switch__track::after,.mdc-switch--selected .mdc-switch__track::before{border-width:var(--mat-switch-selected-track-outline-width)}.mdc-switch--disabled .mdc-switch__track::after,.mdc-switch--disabled .mdc-switch__track::before{border-width:var(--mat-switch-disabled-unselected-track-outline-width);border-color:var(--mat-switch-disabled-unselected-track-outline-color)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-selected-handle-opacity)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-unselected-handle-opacity)}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.FocusMonitor\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    _switchElement: [{\n      type: ViewChild,\n      args: ['switch']\n    }],\n    name: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideIcon: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    change: [{\n      type: Output\n    }],\n    toggleChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatSlideToggleRequiredValidator_BaseFactory;\n      return function MatSlideToggleRequiredValidator_Factory(t) {\n        return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(t || MatSlideToggleRequiredValidator);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatSlideToggleRequiredValidator,\n      selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n    type: Directive,\n    args: [{\n      selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n      providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n      standalone: true\n    }]\n  }], null, null);\n})();\n\n/**\n * @deprecated No longer used, `MatSlideToggle` implements required validation directly.\n * @breaking-change 19.0.0\n */\nclass _MatSlideToggleRequiredValidatorModule {\n  static {\n    this.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) {\n      return new (t || _MatSlideToggleRequiredValidatorModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: _MatSlideToggleRequiredValidatorModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatSlideToggleRequiredValidator],\n      exports: [MatSlideToggleRequiredValidator]\n    }]\n  }], null, null);\n})();\nclass MatSlideToggleModule {\n  static {\n    this.ɵfac = function MatSlideToggleModule_Factory(t) {\n      return new (t || MatSlideToggleModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSlideToggleModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatSlideToggle, MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSlideToggleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatSlideToggle, MatCommonModule],\n      exports: [MatSlideToggle, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n","import { Component, EventEmitter, Inject, OnDestroy, OnInit, Output } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { ConfirmationDialogComponent } from \"../../../../shared/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { UtilityService } from \"../../../../shared/services/utility.service\";\r\nimport { isValidGuid, computeIdentifier } from \"../../../../shared/utils/hash-utils\";\r\nimport { SettingsService } from \"../../services/setting.service\";\r\nimport { UpdateSettingRequestBody } from \"../../models/update-setting-request-body\";\r\nimport { catchError, Observable, of, Subscription, switchMap } from \"rxjs\";\r\nimport { SettingUpdateComponentReturnModel } from \"../../models/setting-update-component-return.model\";\r\nimport { SettingUpdateComponentModel } from \"../../models/setting-update-component.model\";\r\nimport { ConflictResolverDialogComponent, ConflictResolverReturnType } from \"../../../../shared/components/conflict-resolver-dialog/conflict-resolver-dialog.component\";\r\nimport { WindowService } from \"../../../../core/services/window.service\";\r\nimport { IResponseAny } from \"../../../../shared/models/response\";\r\n\r\n@Component({\r\n    templateUrl: './setting-update.component.html'\r\n})\r\nexport class SettingUpdateComponent implements OnInit, OnDestroy {\r\n    isFullScreen: boolean = false;\r\n    form!: FormGroup;\r\n    computedIdentifierPreview: string = '';\r\n    subscriptions: Subscription = new Subscription();\r\n    isConnectionSecure?: boolean;\r\n\r\n    constructor(public dialogRef: MatDialogRef<SettingUpdateComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: SettingUpdateComponentModel,\r\n        private settingsService: SettingsService,\r\n        private formBuilder: FormBuilder,\r\n        private utilityService: UtilityService,\r\n        private windowService: WindowService,\r\n        private dialog: MatDialog,\r\n        private snackBar: MatSnackBar\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.form = this.formBuilder.group({\r\n            computedIdentifier: [this.data.computedIdentifier, Validators.required],\r\n            classNamespace: [this.data.classNamespace, Validators.required],\r\n            className: [this.data.className, Validators.required],\r\n            classFullName: [this.data.classFullName, Validators.required],\r\n            isDataValidationEnabled: [this.data.isDataValidationEnabled],\r\n            storeInSeparateFile: [this.data.storeInSeparateFile],\r\n            ignoreOnFileChange: [this.data.storeInSeparateFile ? this.data.ignoreOnFileChange ?? false : null],\r\n            registrationMode: [this.data.registrationMode]\r\n        });\r\n\r\n        this.computedIdentifierPreview = this.data.computedIdentifier;\r\n\r\n        this.subscriptions.add(this.form.get('computedIdentifier')!.valueChanges.subscribe(value => this.updateComputedIdentifierPreview(value)));\r\n\r\n        this.isConnectionSecure = this.windowService.isConnectionSecure;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    updateComputedIdentifierPreview(value: string): void {\r\n        if (value && isValidGuid(value)) {\r\n            this.computedIdentifierPreview = value;\r\n        } else if (value) {\r\n            this.computedIdentifierPreview = computeIdentifier(value);\r\n        } else {\r\n            this.computedIdentifierPreview = '';\r\n        }\r\n    }\r\n\r\n    toggleFullScreen() {\r\n        this.isFullScreen = !this.isFullScreen;\r\n\r\n        const dialogElement = document.querySelector('.mat-mdc-dialog-surface');\r\n\r\n        if (this.isFullScreen) {\r\n\r\n            dialogElement?.setAttribute('style', `\r\n                  border-radius: 0 !important;\r\n                `);\r\n\r\n            this.dialogRef.updateSize('100%', '100%');\r\n        } else {\r\n            this.dialogRef.updateSize('1350px', '680px');\r\n            dialogElement?.removeAttribute('style');\r\n        }\r\n    }\r\n\r\n    copyToClipboard(input: string) {\r\n\r\n        this.utilityService.copyToClipboard(input);\r\n    }\r\n\r\n    onSubmit() {\r\n\r\n        if (!this.form.valid) {\r\n            return;\r\n        }\r\n\r\n        const formValue = this.form.value;\r\n\r\n        if (this.data.computedIdentifier === this.computedIdentifierPreview) {\r\n            this.edit(formValue);\r\n            return;\r\n        }\r\n\r\n        const title = 'Confirm edit';\r\n        const message = 'Updating the \"Computed Identifier\" may cause problems. Do you want to proceed? (Potential unmatching)';\r\n\r\n        const subscription = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: '500px',\r\n            data: { title, message }\r\n        }).afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this.edit(formValue);\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    edit(formValue: any) {\r\n        const model: UpdateSettingRequestBody = {\r\n            computedIdentifier: this.computedIdentifierPreview,\r\n            dataValidationDisabled: !formValue.isDataValidationEnabled,\r\n            rowVersion: this.data.settingRowVersion,\r\n            class: {\r\n                namespace: formValue.classNamespace,\r\n                name: formValue.className,\r\n                fullName: formValue.classFullName,\r\n                rowVersion: this.data.classRowVersion\r\n            },\r\n            storeInSeparateFile: formValue.storeInSeparateFile,\r\n            ignoreOnFileChange: formValue.ignoreOnFileChange,\r\n            registrationMode: formValue.registrationMode\r\n        };\r\n\r\n        let editAppSettingComponentReturnModel: SettingUpdateComponentReturnModel;\r\n\r\n        const updateSetting = (model: UpdateSettingRequestBody) => {\r\n            return this.settingsService.updateSetting({\r\n                settingId: this.data.id,\r\n                body: model\r\n            });\r\n        };\r\n\r\n        const handleUpdate = (request: UpdateSettingRequestBody): Observable<any> => {\r\n            return updateSetting(request).pipe(\r\n                switchMap(response => {\r\n\r\n                    const responseData = response.data;\r\n\r\n                    editAppSettingComponentReturnModel = {\r\n                        computedIdentifier: model.computedIdentifier,\r\n                        classNamespace: formValue.classNamespace,\r\n                        className: formValue.className,\r\n                        classFullName: formValue.classFullName,\r\n                        isDataValidationEnabled: formValue.isDataValidationEnabled,\r\n                        rowVersion: responseData?.rowVersion ?? '',\r\n                        storeInSeparateFile: request.storeInSeparateFile,\r\n                        ignoreOnFileChange: request.storeInSeparateFile ? request.ignoreOnFileChange : null,\r\n                        registrationMode: request.registrationMode,\r\n                        type: editAppSettingComponentReturnModel?.type\r\n                    };\r\n\r\n\r\n                    if (!responseData && response.extras) {\r\n\r\n                        const availableReturnTypes: ConflictResolverReturnType[] = ['Discard', 'Override', 'Fetch Latest'];\r\n\r\n                        return this.dialog.open(ConflictResolverDialogComponent, {\r\n                            width: '400px',\r\n                            data: availableReturnTypes,\r\n                            autoFocus: false\r\n                        }).afterClosed().pipe(switchMap((type: ConflictResolverReturnType) => {\r\n\r\n                            if (type === \"Fetch Latest\") {\r\n\r\n                                editAppSettingComponentReturnModel.type = \"Fetch Latest\";\r\n\r\n                                return of(true);\r\n\r\n                            } else if (type === 'Override') {\r\n\r\n                                const settingRowVersion = response.extras!['Conflicts'][\"SettingId\"]?.properties[\"RowVersion\"].current;\r\n\r\n                                const classRowVersion = response.extras!['Conflicts'][\"ClassId\"]?.properties[\"RowVersion\"].current;\r\n\r\n                                editAppSettingComponentReturnModel.type = \"Override\";\r\n\r\n                                if (settingRowVersion) {\r\n                                    model.rowVersion = settingRowVersion;\r\n                                }\r\n\r\n                                if (classRowVersion) {\r\n                                    model.class.rowVersion = classRowVersion;\r\n                                }\r\n\r\n                                return handleUpdate(model);\r\n                            }\r\n\r\n                            return of(false);\r\n\r\n                        }));\r\n                    } else {\r\n\r\n                        this.snackBar.open(`Data has been updated successfully! A restart is required for the changes to take effect.`, 'Close', {\r\n                            horizontalPosition: 'right',\r\n                            verticalPosition: 'top',\r\n                            duration: 5000\r\n                        });\r\n\r\n                        return of(true);\r\n                    }\r\n                })\r\n            )\r\n        };\r\n\r\n        const subscription = handleUpdate(model).subscribe({\r\n            next: (close: boolean) => {\r\n\r\n                if (close) {\r\n                    this.dialogRef?.close(editAppSettingComponentReturnModel);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n}","<div class=\"d-flex border-bottom\">\r\n    <div class=\"dialog-title\">Update > {{data.clientName}}</div>\r\n    <div class=\"dialog-subtitle\">{{data.identifierName}} - {{data.className}}</div>\r\n    <span></span>\r\n    <span class=\"spacer\"></span>\r\n    <button mat-icon-button (click)=\"toggleFullScreen()\"\r\n        [matTooltip]=\"isFullScreen ? 'Exit full screen' : 'Enter full screen'\">\r\n        <mat-icon>{{ isFullScreen ? 'fullscreen_exit' : 'fullscreen' }}</mat-icon>\r\n    </button>\r\n    <button mat-icon-button mat-dialog-close>\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</div>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-dialog-content>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Class Namespace</mat-label>\r\n            <input matInput formControlName=\"classNamespace\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Class Name</mat-label>\r\n            <input matInput formControlName=\"className\" />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>Class Full Name</mat-label>\r\n            <input matInput formControlName=\"classFullName\" />\r\n        </mat-form-field>\r\n\r\n        <div class=\"d-flex\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Computed Identifier</mat-label>\r\n                <input matInput formControlName=\"computedIdentifier\" />\r\n                <mat-icon matSuffix fontIcon=\"info\" matTooltip=\"A unique GUID is generated by combining the namespace and class name (unless manually assigned a different value). This GUID is used to uniquely identify each setting class.\"></mat-icon>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Computed Identifier Preview</mat-label>\r\n                <input matInput [value]=\"computedIdentifierPreview\" disabled />\r\n                <button type=\"button\" matSuffix mat-icon-button matTooltip=\"Copy\" matTooltipPosition=\"below\"\r\n                    (click)=\"copyToClipboard(computedIdentifierPreview)\" [disabled]=\"!computedIdentifierPreview\" *ngIf=\"isConnectionSecure\">\r\n                    <mat-icon>content_copy</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-form-field appearance=\"fill\" >\r\n            <mat-label>Registration Mode <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                matTooltip=\"Defines how the setting is registered in dependency injection, allowing resolution through configuration options or as a singleton service.\"></mat-icon></mat-label>\r\n            <mat-select formControlName=\"registrationMode\">\r\n                <mat-option class=\"custom-option\" [value]=\"1\">\r\n                    <span>Configure</span>\r\n                    <span class=\"spacer\"></span>\r\n                    <button color=\"accent\" mat-icon-button matTooltipPosition=\"left\" matTooltip=\"Setting can be resolved through configuration options interfaces, such as IOptions<T>, IOptionsSnapshot<T> and IOptionsMonitor<T>.\">\r\n                        <mat-icon matIconPosition=\"right\" fontIcon=\"info\"></mat-icon>\r\n                    </button>\r\n                </mat-option>\r\n                <mat-option class=\"custom-option\" [value]=\"2\">\r\n                    <span>Singleton</span>\r\n                    <span class=\"spacer\"></span>\r\n                    <button color=\"accent\" mat-icon-button matTooltipPosition=\"left\" matTooltip=\"Setting can be resolved directly through its own class as a singleton instance.\">\r\n                        <mat-icon matIconPosition=\"right\" fontIcon=\"info\"></mat-icon>\r\n                    </button>\r\n                </mat-option>\r\n                <mat-option class=\"custom-option\" [value]=\"3\">\r\n                    <span>Both</span>\r\n                    <span class=\"spacer\"></span>\r\n                    <button color=\"accent\" mat-icon-button matTooltipPosition=\"left\" matTooltip=\"Setting can be resolved both through singleton instances and through configuration options interfaces.\">\r\n                        <mat-icon matIconPosition=\"right\" fontIcon=\"info\"></mat-icon>\r\n                    </button>\r\n                </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <div class=\"d-flex px-3\">\r\n            <div class=\"mb-2 mr-3 d-flex align-items-center\">\r\n                <span class=\"field-label-text\"> Data Validation</span>\r\n                <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\" matTooltip=\"If enabled, it checks if class properties match the required type or are bindable during data changes.\"></mat-icon>\r\n                <mat-slide-toggle labelPosition=\"before\" formControlName=\"isDataValidationEnabled\"></mat-slide-toggle>\r\n            </div>\r\n            <div class=\"mb-2 mr-3 d-flex align-items-center\">\r\n                <span class=\"field-label-text\">Store In Separate File</span>\r\n                <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\" [matTooltip]=\"'Indicates whether the setting should be stored in a separate file \\'settings-generated.' + form.get('className')?.value + '.json\\'. If not, it will be stored in the default \\'settings-generated.json\\' file.'\"></mat-icon>\r\n                <mat-slide-toggle labelPosition=\"before\" formControlName=\"storeInSeparateFile\"></mat-slide-toggle>\r\n            </div>\r\n            <div class=\"mb-2 d-flex align-items-center\" *ngIf=\"this.form.get('storeInSeparateFile')?.value\">\r\n                <span class=\"field-label-text\">Ignore On File Change</span>\r\n                <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"  matTooltip=\"Indicates whether changes to the file should be ignored when the file is modified.\"></mat-icon>\r\n                <mat-slide-toggle labelPosition=\"before\" formControlName=\"ignoreOnFileChange\"></mat-slide-toggle>\r\n            </div>\r\n          </div>\r\n\r\n        <!-- <div class=\"d-flex\">\r\n            <mat-slide-toggle labelPosition=\"before\" formControlName=\"isDataValidationEnabled\" class=\"mb-2 mr-3\">\r\n                Data Validation\r\n                <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\" matTooltip=\"If enabled, it checks if class properties match the required type or are bindable during data changes.\"></mat-icon>\r\n            </mat-slide-toggle>\r\n            <mat-slide-toggle labelPosition=\"before\"\r\n                formControlName=\"storeInSeparateFile\" class=\"mb-2 mr-3\">\r\n                Store In Separate File\r\n                <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\" [matTooltip]=\"'Indicates whether the setting should be stored in a separate file \\'settings-generated.' + form.get('className')?.value + '.json\\'. If not, it will be stored in the default \\'settings-generated.json\\' file. Changes require a restart.'\"></mat-icon>\r\n            </mat-slide-toggle>\r\n            <mat-slide-toggle labelPosition=\"before\"formControlName=\"ignoreOnFileChange\" class=\"mb-2\" *ngIf=\"this.form.get('storeInSeparateFile')?.value\">\r\n                Ignore On File Change\r\n                <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"  matTooltip=\"Indicates whether changes to the file should be ignored when the file is modified. Changes require a restart.\"></mat-icon>\r\n            </mat-slide-toggle>\r\n        </div> -->\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions>\r\n        <button class=\"ml-3\" mat-raised-button color=\"primary\" [disabled]=\"form.invalid\">\r\n            Save\r\n        </button>\r\n    </mat-dialog-actions>\r\n</form>","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, QueryList, ViewChild, ViewChildren } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MatAccordion, MatExpansionPanel } from \"@angular/material/expansion\";\r\nimport { ThemeService } from \"../../../../core/services/theme.service\";\r\nimport { ConfirmationDialogComponent } from \"../../../../shared/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { UtilityService } from \"../../../../shared/services/utility.service\";\r\nimport { SettingsService } from \"../../services/setting.service\";\r\nimport { SettingHistoriesService } from \"../../../setting-history/services/setting-histories.service\";\r\nimport { SettingCreateComponent } from \"../setting-create/setting-create.component\";\r\nimport { SettingHistoryListComponentModel, SettingHistoryListComponent as SettingHistoryListComponent } from \"../../../setting-history/components/setting-history-list/setting-history-list.component\";\r\nimport { AppViewService, SettingViewType } from \"../../../app/services/app-view.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\r\nimport { SettingData } from \"../../../app/models/setting-data.model\";\r\nimport { UpdateSettingDataRequestBody } from \"../../../app/models/update-setting-data-request-body\";\r\nimport { SettingCreateComponentReturnModel } from \"../../models/setting-create-component-return.model\";\r\nimport { SettingCreateComponentModel } from \"../../models/setting-create-component.model\";\r\nimport { CopySettingToIdentifierEmitData } from \"../../models/copy-setting-to-identifier-emit-data\";\r\nimport { SettingListComponentData } from \"../../models/setting-list-component-data\";\r\nimport { SettingUpdateComponentReturnModel } from \"../../models/setting-update-component-return.model\";\r\nimport { SettingUpdateComponentModel } from \"../../models/setting-update-component.model\";\r\nimport { SettingUpdateComponent } from \"../setting-update/setting-update.component\";\r\nimport { SettingHistoryListComponentResponseModel } from \"../../../setting-history/models/setting-history-list-component-response.model\";\r\nimport { ConflictResolverDialogComponent, ConflictResolverReturnType } from \"../../../../shared/components/conflict-resolver-dialog/conflict-resolver-dialog.component\";\r\nimport { JsonEditorComponent } from \"../../../../shared/components/json-editor/json-editor.component\";\r\nimport { WindowService } from \"../../../../core/services/window.service\";\r\n\r\n@Component({\r\n    selector: 'setting-list',\r\n    templateUrl: './setting-list.component.html'\r\n})\r\nexport class SettingListComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() data!: SettingListComponentData;\r\n    @Output() copySettingToIdentifierEmitter: EventEmitter<CopySettingToIdentifierEmitData> = new EventEmitter<CopySettingToIdentifierEmitData>();\r\n    @Output() settingDeleteEmitter: EventEmitter<string> = new EventEmitter<string>();\r\n    @Output() fetchLatestEmitter: EventEmitter<string> = new EventEmitter<string>();\r\n    @ViewChildren('textarea') textareas!: QueryList<ElementRef<HTMLTextAreaElement>>;\r\n    @ViewChildren('expansionPanel') expansionPanels?: QueryList<MatExpansionPanel>;\r\n    @ViewChildren(JsonEditorComponent) jsonEditors?: QueryList<JsonEditorComponent>;\r\n    @ViewChild(MatAccordion) accordion!: MatAccordion;\r\n    buttons: Record<string, boolean> = {};\r\n    multiSelectionEnabled: boolean = false;\r\n    theme!: string;\r\n    subscriptions: Subscription = new Subscription();\r\n    selectedSettingId: string | undefined = undefined;\r\n    isConnectionSecure?: boolean;\r\n    settingIdToLoading: { [key: string]: boolean } = {};\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private utilityService: UtilityService,\r\n        private settingsService: SettingsService,\r\n        private appViewService: AppViewService,\r\n        private settingHistoriesService: SettingHistoriesService,\r\n        private themeService: ThemeService,\r\n        private windowService: WindowService,\r\n        private cdr: ChangeDetectorRef,\r\n        private route: ActivatedRoute,\r\n        private router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n        this.subscriptions.add(this.appViewService.appViewMultiSelectionEnabled$.subscribe(isEnabled => {\r\n            this.multiSelectionEnabled = isEnabled;\r\n        }));\r\n        this.theme = this.themeService.isDarkTheme() ? 'vs-dark' : 'vs-light';\r\n        this.isConnectionSecure = this.windowService.isConnectionSecure;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            const onSettingIdChange = this.appViewService.settingView$.subscribe(settingView => {\r\n\r\n                if (!settingView) {\r\n                    return;\r\n                }\r\n\r\n                const selectedSettingId = settingView.selectedSettingId;\r\n\r\n                switch (settingView.settingViewType) {\r\n                    case 'viewSetting':\r\n\r\n                        if (!selectedSettingId) {\r\n                            return;\r\n                        }\r\n\r\n                        const settingIndex = this.data.settingDataList.findIndex(s => s.settingId == selectedSettingId);\r\n                        this.expandPanel(settingIndex);\r\n                        this.selectedSettingId = selectedSettingId;\r\n\r\n                        break;\r\n\r\n                    case 'viewCreateSetting':\r\n\r\n                        this.addSetting();\r\n\r\n                        break;\r\n\r\n                    case 'viewUpdateSetting':\r\n\r\n                        if (!selectedSettingId) {\r\n                            return;\r\n                        }\r\n\r\n                        const settingForUpdate = this.data.settingDataList.find(s => s.settingId == selectedSettingId)\r\n\r\n                        if (settingForUpdate) {\r\n                            this.editSetting(settingForUpdate);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case 'viewCopySettingTo':\r\n\r\n                        if (!selectedSettingId) {\r\n                            return;\r\n                        }\r\n\r\n                        const settingIndexForCopyTo = this.data.settingDataList.findIndex(s => s.settingId == selectedSettingId);\r\n\r\n                        if (settingIndexForCopyTo !== -1) {\r\n                            this.expandPanel(settingIndexForCopyTo);\r\n\r\n                            const settingForCopyTo = this.data.settingDataList[settingIndexForCopyTo];\r\n\r\n                            this.copySettingToIdentifierEmit(settingForCopyTo);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case 'viewSettingHistories':\r\n\r\n                        if (!selectedSettingId) {\r\n                            return;\r\n                        }\r\n\r\n                        const settingIndexForHistories = this.data.settingDataList.findIndex(s => s.settingId == selectedSettingId);\r\n\r\n                        if (settingIndexForHistories !== -1) {\r\n                            this.expandPanel(settingIndexForHistories);\r\n\r\n                            const settingForHistories = this.data.settingDataList[settingIndexForHistories];\r\n\r\n                            const isDisabled = !settingForHistories.dataRestored && settingForHistories.version === '0';\r\n\r\n                            if (isDisabled) {\r\n                                // Error about there is not any history\r\n                                return;\r\n                            }\r\n\r\n                            this.history(settingForHistories);\r\n                        }\r\n\r\n                        break;\r\n\r\n                    case 'viewSettingHistory':\r\n\r\n                        if (!selectedSettingId) {\r\n                            return;\r\n                        }\r\n\r\n                        const settingIndexForHistory = this.data.settingDataList.findIndex(s => s.settingId == selectedSettingId);\r\n\r\n                        if (settingIndexForHistory !== -1) {\r\n                            this.expandPanel(settingIndexForHistory);\r\n\r\n                            const settingForHistory = this.data.settingDataList[settingIndexForHistory];\r\n\r\n                            const isDisabled = !settingForHistory.dataRestored && settingForHistory.version === '0';\r\n\r\n                            if (isDisabled) {\r\n                                // Error about there is not any history\r\n                                return;\r\n                            }\r\n\r\n                            this.history(settingForHistory);\r\n                        }\r\n                }\r\n            });\r\n\r\n            this.subscriptions.add(onSettingIdChange);\r\n        }, 0)\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    onToggleMultiSelection(event: MatSlideToggleChange) {\r\n        this.appViewService.emitAppViewMultiSelectionEnabled(event.checked);\r\n    }\r\n\r\n    expandPanel(index: number) {\r\n\r\n        if (index < 0) {\r\n            return;\r\n        }\r\n\r\n        const panelArray = this.expansionPanels?.toArray();\r\n        if (panelArray && panelArray[index]) {\r\n            panelArray[index].open();\r\n        }\r\n    }\r\n\r\n    onPanelClosed(data: SettingData) {\r\n        if (this.selectedSettingId === data.settingId) {\r\n            this.selectedSettingId = undefined;\r\n            this.appViewService.emitSettingView(undefined);\r\n            this.router.navigate(['./apps', this.data.slug, this.data.selectedAppIdentifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n        }\r\n    }\r\n\r\n    onPanelExpanded(data: SettingData) {\r\n        this.settingIdToLoading[data.settingId] = !data.isDataFetched;\r\n\r\n        this.selectedSettingId = data.settingId;\r\n\r\n        const settingViewType = this.appViewService.settingView?.settingViewType;\r\n\r\n        const forbiddenTypes = [\"viewCopySettingTo\", \"viewSettingHistories\", \"viewSettingHistory\"] as SettingViewType[];\r\n\r\n        if (settingViewType === undefined || !forbiddenTypes.includes(settingViewType)) {\r\n            this.appViewService.emitSettingView({\r\n                selectedSettingId: data.settingId,\r\n                settingViewType: 'viewSetting'\r\n            });\r\n\r\n            this.router.navigate(['./apps', this.data.slug, this.data.selectedAppIdentifierId, 'settings', this.selectedSettingId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n        }\r\n\r\n        if (data.isDataFetched) {\r\n            return;\r\n        }\r\n\r\n        this.buttons[data.settingId] = true;\r\n\r\n        const subscription = this.settingsService.getSettingData({\r\n            settingId: data.settingId\r\n        }).subscribe({\r\n            next: (response) => {\r\n\r\n                const model = this.data.settingDataList.find(m => m.classId === data.classId);\r\n\r\n                if (!model) {\r\n                    return;\r\n                }\r\n\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                model.rawData = responseData.data;\r\n\r\n                try {\r\n                    model.parsedData = JSON.parse(responseData.data);\r\n                }\r\n                catch {\r\n                    model.parsedData = {};\r\n                }\r\n                model.tempData = { ...model.parsedData };\r\n                model.isDataFetched = true;\r\n\r\n                this.settingIdToLoading[data.settingId] = false;\r\n            },\r\n            error: (err) => {\r\n                this.settingIdToLoading[data.settingId] = false;\r\n            },\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    copyToClipboard(tempData: object) {\r\n\r\n        const value = JSON.stringify(tempData, null, 4)\r\n\r\n        this.utilityService.copyToClipboard(value);\r\n    }\r\n\r\n    download(tempData: object, className: string, classFullName: string) {\r\n\r\n        // const model = {\r\n        //     [classFullName]: tempData\r\n        // };\r\n\r\n        const value = JSON.stringify(tempData, null, 4);\r\n\r\n        this.utilityService.download(value, className);\r\n    }\r\n\r\n    upload(event: any, data: SettingData) {\r\n        this.utilityService.upload(event.target.files[0] as File).then(content => {\r\n\r\n            const parsedData = JSON.parse(content);\r\n\r\n            if (typeof parsedData === 'object' && parsedData !== null) {\r\n                data.tempData = parsedData;\r\n            } else {\r\n                throw (\"Invalid JSON data\");\r\n            }\r\n\r\n            this.snackBar.open(`Changes applied. Click Save icon to confirm.`, 'Close', {\r\n                horizontalPosition: 'right',\r\n                verticalPosition: 'top',\r\n                duration: 5000\r\n            });\r\n\r\n            this.buttons[data.settingId] = false;\r\n        }).catch(error => {\r\n            this.snackBar.open(`Error occurred while uploading file. Error: ${error}`, 'Close', {\r\n                horizontalPosition: 'right',\r\n                verticalPosition: 'top',\r\n                duration: 8000\r\n            });\r\n        });\r\n    }\r\n\r\n    saveFormData(data: SettingData): void {\r\n\r\n        try {\r\n            this.buttons[data.settingId] = true;\r\n\r\n            const rawTextareaContent = JSON.stringify(data.tempData);\r\n\r\n            if (rawTextareaContent === data.rawData) {\r\n                this.snackBar.open(`There are no changes!`, 'Close', {\r\n                    horizontalPosition: 'right',\r\n                    verticalPosition: 'top',\r\n                    duration: 5000\r\n                });\r\n\r\n                this.buttons[data.settingId] = true;\r\n\r\n                return;\r\n            }\r\n\r\n            const updateSettingModel: UpdateSettingDataRequestBody = {\r\n                data: rawTextareaContent,\r\n                rowVersion: data.settingRowVersion\r\n            };\r\n\r\n            const subscription = this.settingsService.updateSettingData({\r\n                settingId: data.settingId,\r\n                body: updateSettingModel\r\n            }).subscribe({\r\n                next: (response) => {\r\n\r\n                    const responseData = response.data;\r\n\r\n                    if (!responseData) {\r\n\r\n                        if (response.extras) {\r\n\r\n                            this.buttons[data.settingId] = false;\r\n\r\n                            const conflictedData = response.extras['Conflicts'][data.settingId];\r\n\r\n                            const availableReturnTypes: ConflictResolverReturnType[] = ['Discard', 'Fetch Latest'];\r\n\r\n                            const conflictResolverDialogComponent = this.dialog.open(ConflictResolverDialogComponent, {\r\n                                width: '400px',\r\n                                data: availableReturnTypes,\r\n                                autoFocus: false\r\n                            }).afterClosed().subscribe((type: ConflictResolverReturnType) => {\r\n                                if (type === \"Fetch Latest\") {\r\n                                    this.fetchLatestEmitter.emit(data.settingId);\r\n                                }\r\n                            });\r\n\r\n                            this.subscriptions.add(conflictResolverDialogComponent);\r\n                        }\r\n\r\n                        this.buttons[data.settingId] = false;\r\n\r\n                        return;\r\n                    }\r\n\r\n                    data.parsedData = { ...data.tempData };\r\n                    data.rawData = rawTextareaContent;\r\n                    data.version = responseData.setting.currentVersion;\r\n                    data.settingRowVersion = responseData.setting.rowVersion;\r\n\r\n                    this.snackBar.open(`Data has been updated successfully!`, 'Close', {\r\n                        horizontalPosition: 'right',\r\n                        verticalPosition: 'top',\r\n                        duration: 5000\r\n                    });\r\n                },\r\n                error: (err) => {\r\n                    this.buttons[data.settingId] = false;\r\n                }\r\n            });\r\n\r\n            this.subscriptions.add(subscription);\r\n        }\r\n        catch (err) {\r\n            this.snackBar.open(`Error occurred when deserializing settings data!`, 'Close', {\r\n                horizontalPosition: 'right',\r\n                verticalPosition: 'top',\r\n                duration: 5000\r\n            });\r\n\r\n            this.buttons[data.settingId] = false;\r\n        }\r\n    }\r\n\r\n    history(setting: SettingData) {\r\n\r\n        const subscription = this.settingHistoriesService.getSettingHistories({\r\n            settingId: setting.settingId\r\n        }).subscribe({\r\n            next: (response) => {\r\n\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                const data: SettingHistoryListComponentModel = {\r\n                    clientName: this.data.clientName,\r\n                    identifierName: this.data.selectedAppIdentifierName,\r\n                    clientId: setting.clientId,\r\n                    settingId: setting.settingId,\r\n                    className: setting.className,\r\n                    classFullName: setting.classFullName,\r\n                    computedIdentifier: setting.computedIdentifier,\r\n                    currentVersion: setting.version,\r\n                    tempData: setting.tempData,\r\n                    currentRawData: setting.rawData,\r\n                    currentParsedData: setting.parsedData,\r\n                    rowVersion: setting.settingRowVersion,\r\n                    model: responseData\r\n                }\r\n\r\n                const internalSubscription = this.dialog.open(SettingHistoryListComponent, {\r\n                    data,\r\n                    width: '1350px',\r\n                    height: '680px',\r\n                    minWidth: 'inherit',\r\n                    maxWidth: 'inherit',\r\n                    autoFocus: false\r\n                }).afterClosed().subscribe((result: SettingHistoryListComponentResponseModel) => {\r\n\r\n                    if (result) {\r\n\r\n                        if (result.fetchLatest) {\r\n                            this.fetchLatestEmitter.emit(setting.settingId);\r\n                        }\r\n\r\n                        this.buttons[data.settingId] = false;\r\n                    }\r\n\r\n                    const settingIndex = this.data.settingDataList.findIndex(s => s.settingId == setting.settingId);\r\n\r\n                    const panelArray = this.expansionPanels?.toArray();\r\n                    if (panelArray && panelArray[settingIndex]) {\r\n                        const isExpanded = panelArray[settingIndex].expanded;\r\n\r\n                        if (isExpanded) {\r\n                            this.router.navigate(['./apps', this.data.slug, this.data.selectedAppIdentifierId, 'settings', setting.settingId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                        } else {\r\n                            this.appViewService.emitSettingView({\r\n                                settingViewType: 'viewSetting',\r\n                                selectedSettingId: undefined\r\n                            });\r\n                            this.router.navigate(['./apps', this.data.slug, this.data.selectedAppIdentifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                this.subscriptions.add(internalSubscription);\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    expandAll() {\r\n\r\n        const settingIds = this.data.settingDataList.filter(s => !s.isDataFetched).map(s => s.settingId);\r\n\r\n        if (settingIds.length < 2) {\r\n            this.accordion.openAll();\r\n        }\r\n\r\n        settingIds.forEach(settingId => {\r\n            this.buttons[settingId] = true;\r\n        });\r\n\r\n        const subscription = this.settingsService.getSettingsData({\r\n            appId: this.data.appId,\r\n            identifierId: this.data.selectedAppIdentifierId,\r\n            ids: settingIds\r\n        }).subscribe(response => {\r\n\r\n            const data = response.data;\r\n\r\n            if (!data) {\r\n                return;\r\n            }\r\n\r\n            data.settings.forEach(d => {\r\n                const settingData = this.data.settingDataList.find(s => s.settingId == d.id);\r\n\r\n                if (settingData) {\r\n                    settingData.rawData = d.data;\r\n                    try {\r\n                        settingData.parsedData = JSON.parse(d.data);\r\n                    }\r\n                    catch {\r\n                        settingData.parsedData = {};\r\n                    }\r\n                    settingData.tempData = { ...settingData.parsedData };\r\n                    settingData.isDataFetched = true;\r\n                }\r\n            });\r\n\r\n            this.accordion.openAll();\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    collapseAll() {\r\n        this.accordion.closeAll();\r\n    }\r\n\r\n    editSetting(model: SettingData) {\r\n\r\n        const data: SettingUpdateComponentModel = {\r\n            id: model.settingId,\r\n            clientId: this.data.clientId,\r\n            clientName: this.data.clientName,\r\n            identifierName: this.data.selectedAppIdentifierName,\r\n            classNamespace: model.classNamespace,\r\n            className: model.className,\r\n            classFullName: model.classFullName,\r\n            computedIdentifier: model.computedIdentifier,\r\n            isDataValidationEnabled: model.dataValidationEnabled,\r\n            settingRowVersion: model.settingRowVersion,\r\n            classRowVersion: model.classRowVersion,\r\n            storeInSeparateFile: model.storeInSeparateFile,\r\n            ignoreOnFileChange: model.ignoreOnFileChange,\r\n            registrationMode: model.registrationMode\r\n        };\r\n\r\n        const subscription = this.dialog.open(SettingUpdateComponent, {\r\n            data,\r\n            width: '820px',\r\n            height: '580px',\r\n            minWidth: 'inherit',\r\n            maxWidth: 'inherit',\r\n            autoFocus: false\r\n        }).afterClosed().subscribe((result: SettingUpdateComponentReturnModel) => {\r\n            if (result) {\r\n\r\n                if (result.type === 'Fetch Latest') {\r\n                    this.fetchLatestEmitterForSettingUpdate(model.settingId);\r\n                }\r\n                else {\r\n                    model.classNamespace = result.classNamespace;\r\n                    model.className = result.className;\r\n                    model.classFullName = result.classFullName;\r\n                    model.computedIdentifier = result.computedIdentifier;\r\n                    model.dataValidationEnabled = result.isDataValidationEnabled;\r\n                    model.settingRowVersion = result.rowVersion;\r\n                    model.classRowVersion = result.rowVersion;\r\n                    model.storeInSeparateFile = result.storeInSeparateFile;\r\n                    model.ignoreOnFileChange = result.ignoreOnFileChange;\r\n                    model.registrationMode = result.registrationMode;\r\n\r\n                    if (result.type === \"Override\") {\r\n                        this.fetchLatestEmitter.emit(model.settingId);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const settingIndex = this.data.settingDataList.findIndex(s => s.settingId == model.settingId);\r\n\r\n            const panelArray = this.expansionPanels?.toArray();\r\n            if (panelArray && panelArray[settingIndex]) {\r\n                const isExpanded = panelArray[settingIndex].expanded;\r\n\r\n                if (isExpanded) {\r\n                    this.router.navigate(['./apps', this.data.slug, this.data.selectedAppIdentifierId, 'settings', model.settingId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                } else {\r\n                    this.appViewService.emitSettingView({\r\n                        settingViewType: 'viewSetting',\r\n                        selectedSettingId: undefined\r\n                    });\r\n                    this.router.navigate(['./apps', this.data.slug, this.data.selectedAppIdentifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    addSetting() {\r\n\r\n        const data: SettingCreateComponentModel = {\r\n            appId: this.data.appId,\r\n            clientName: this.data.clientName,\r\n            clientId: this.data.clientId,\r\n            identifierName: this.data.selectedAppIdentifierName,\r\n            identifierId: this.data.selectedAppIdentifierId\r\n        }\r\n\r\n        const subscription = this.dialog.open(SettingCreateComponent, {\r\n            data,\r\n            width: '1350px',\r\n            height: '680px',\r\n            minWidth: 'inherit',\r\n            maxWidth: 'inherit',\r\n            autoFocus: false\r\n        }).afterClosed().subscribe((result: SettingCreateComponentReturnModel) => {\r\n            if (result) {\r\n\r\n                const settingData: SettingData = {\r\n                    slug: this.data.slug,\r\n                    clientId: this.data.clientId,\r\n                    settingId: result.id,\r\n                    className: result.className,\r\n                    classNamespace: result.classNamespace,\r\n                    classFullName: result.classFullName,\r\n                    classId: result.classId,\r\n                    computedIdentifier: result.computedIdentifier,\r\n                    version: result.version,\r\n                    isDataFetched: true,\r\n                    dataRestored: false,\r\n                    dataValidationEnabled: true,\r\n                    rawData: result.rawData,\r\n                    parsedData: result.parsedData,\r\n                    tempData: { ...result.parsedData },\r\n                    settingRowVersion: '',\r\n                    classRowVersion: '',\r\n                    storeInSeparateFile: result.storeInSeparateFile,\r\n                    ignoreOnFileChange: result.ignoreOnFileChange,\r\n                    registrationMode: result.registrationMode\r\n                }\r\n\r\n                this.data.settingDataList.push(settingData);\r\n\r\n                this.cdr.detectChanges();\r\n\r\n                this.selectedSettingId = result.id;\r\n            }\r\n\r\n            this.appViewService.emitSettingView({\r\n                selectedSettingId: this.selectedSettingId,\r\n                settingViewType: 'viewSetting'\r\n            });\r\n\r\n            if (this.selectedSettingId) {\r\n                this.router.navigate(['./apps', this.data.slug, this.data.selectedAppIdentifierId, 'settings', this.selectedSettingId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n            } else {\r\n                this.router.navigate(['./apps', this.data.slug, this.data.selectedAppIdentifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    deleteSetting(model: SettingData) {\r\n        const title = 'Confirm delete';\r\n        const message = `Are you sure you want to delete the \"${model.className}\" named setting? This will also delete all associated setting histories. This action cannot be undone.`;\r\n        const requireConfirmation = true;\r\n\r\n        const subscription = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: '500px',\r\n            data: { title, message, requireConfirmation }\r\n        }).afterClosed().subscribe(result => {\r\n            if (result) {\r\n                const internalSubscription = this.settingsService.deleteSetting({\r\n                    settingId: model.settingId,\r\n                    rowVersion: model.settingRowVersion\r\n                }).subscribe(() => {\r\n                    this.data.settingDataList = this.data.settingDataList.filter(a => a.settingId !== model.settingId);\r\n\r\n                    this.snackBar.open(`Deleted successfully!`, 'Close', {\r\n                        horizontalPosition: 'right',\r\n                        verticalPosition: 'top',\r\n                        duration: 5000\r\n                    });\r\n\r\n                    this.settingDeleteEmitter.emit(model.settingId);\r\n\r\n                    this.router.navigate(['./apps', this.data.slug, this.data.selectedAppIdentifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                });\r\n\r\n                this.subscriptions.add(internalSubscription);\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    copySettingToIdentifierEmit(model: SettingData) {\r\n\r\n        const settingIndex = this.data.settingDataList.findIndex(s => s.settingId == model.settingId);\r\n\r\n        const panelArray = this.expansionPanels?.toArray();\r\n        let expanded: boolean = false;\r\n        if (panelArray && panelArray[settingIndex]) {\r\n            expanded = panelArray[settingIndex].expanded;\r\n        }\r\n\r\n        const copySettingToIdentifierEmitData: CopySettingToIdentifierEmitData = {\r\n            rawData: model.rawData,\r\n            parsedData: model.parsedData!,\r\n            currentSettingId: model.settingId,\r\n            currentAppIdentifierId: this.data.selectedAppIdentifierId,\r\n            currentAppIdentifierName: this.data.selectedAppIdentifierName,\r\n            computedIdentifier: model.computedIdentifier,\r\n            className: model.className,\r\n            classNamespace: model.classNamespace,\r\n            classFullName: model.classFullName,\r\n            isDataValidationEnabled: model.dataValidationEnabled,\r\n            isExpanded: expanded,\r\n            storeInSeparateFile: model.storeInSeparateFile,\r\n            ignoreOnFileChange: model.ignoreOnFileChange,\r\n            registrationMode: model.registrationMode\r\n        };\r\n\r\n        this.copySettingToIdentifierEmitter.emit(copySettingToIdentifierEmitData);\r\n    }\r\n\r\n    invalidData(invalid: boolean, model: SettingData) {\r\n        this.buttons[model.settingId] = invalid;\r\n    }\r\n\r\n    fetchLatestEmitterForSettingUpdate(settingId: string) {\r\n        this.fetchLatestEmitter.emit(settingId);\r\n\r\n        setTimeout(() => {\r\n            const setting = this.data.settingDataList.find(s => s.settingId == settingId);\r\n\r\n            if (setting) {\r\n                this.router.navigate(['./apps', this.data.slug, this.data.selectedAppIdentifierId, 'settings', settingId, 'update'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    triggerFormat(editorId: string) {\r\n        this.jsonEditors?.find((editor) => editor.id === editorId)?.formatCode();\r\n    }\r\n}","<div class=\"d-flex min-height-50\">\r\n    <div *ngIf=\"multiSelectionEnabled\">\r\n    <button mat-icon-button matTooltip=\"Expand All\" (click)=\"expandAll()\"\r\n        [disabled]=\"!data.settingDataList.length\"><mat-icon>expand_more</mat-icon></button>\r\n    <button mat-icon-button matTooltip=\"Collapse All\" (click)=\"collapseAll()\"\r\n        [disabled]=\"!data.settingDataList.length\"><mat-icon>expand_less</mat-icon></button>\r\n    </div>\r\n    <mat-slide-toggle class=\"d-flex ml-2\" [(ngModel)]=\"multiSelectionEnabled\" (change)=\"onToggleMultiSelection($event)\">Multi selection</mat-slide-toggle>\r\n    <span class=\"spacer\"></span>\r\n    <button mat-icon-button matTooltip=\"Add setting\" matTooltipPosition=\"above\" [routerLink]=\"['./apps', data.slug, data.selectedAppIdentifierId, 'settings', 'new']\" queryParamsHandling=\"merge\"\r\n        [disabled]=\"!data.selectedAppIdentifierId\">\r\n        <mat-icon>add</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n<mat-accordion [multi]=\"multiSelectionEnabled\" *ngIf=\"data.settingDataList.length else noData;\">\r\n    <mat-expansion-panel #expansionPanel (opened)=\"onPanelExpanded(settingData)\" (closed)=\"onPanelClosed(settingData)\" *ngFor=\"let settingData of data.settingDataList; let i = index\">\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n                <span matTooltip=\"Name\">{{ settingData.className }}</span>\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n                <span matTooltip=\"Version\">v{{ settingData.version }}</span>\r\n                <span class=\"spacer\"></span>\r\n                <span class=\"fs-x-small pr-3\" matTooltip=\"Computed Identifier\">{{ settingData.computedIdentifier }}</span>\r\n                <span class=\"fs-x-small pr-1\" matTooltip=\"Namespace\">{{ settingData.classNamespace }}</span>\r\n                <mat-menu #menu=\"matMenu\">\r\n                    <button mat-menu-item [routerLink]=\"['./apps', settingData.slug, data.selectedAppIdentifierId, 'settings', settingData.settingId, 'update']\" queryParamsHandling=\"merge\">\r\n                        <mat-icon>edit</mat-icon> Edit\r\n                    </button>\r\n                    <button mat-menu-item (click)=\"deleteSetting(settingData)\">\r\n                        <mat-icon>delete</mat-icon> Delete\r\n                    </button>\r\n                </mat-menu>\r\n                <button mat-icon-button class=\"icon-mini\" [matMenuTriggerFor]=\"menu\"\r\n                    (click)=\"$event.stopPropagation()\"><mat-icon>more_vert</mat-icon></button>\r\n            </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <div class=\"d-flex\">\r\n            <button mat-button matTooltip=\"Save\" color=\"primary\" (click)=\"saveFormData(settingData)\"\r\n                [disabled]=\"buttons[settingData.settingId]\">\r\n                <mat-icon>save</mat-icon>\r\n            </button>\r\n            <span class=\"spacer\"></span>\r\n            <button mat-button matTooltip=\"Copy setting to\" color=\"primary\" [routerLink]=\"['./apps', settingData.slug, data.selectedAppIdentifierId, 'settings', settingData.settingId, 'copyTo']\" queryParamsHandling=\"merge\">\r\n                <mat-icon>send</mat-icon>\r\n            </button>\r\n            <button mat-button matTooltip=\"Download\" color=\"primary\"\r\n                (click)=\"download(settingData.tempData, settingData.className, settingData.classFullName)\">\r\n                <mat-icon>download</mat-icon>\r\n            </button>\r\n            <button mat-button matTooltip=\"Upload\" color=\"primary\" (click)=\"fileInput.click()\">\r\n                <mat-icon>upload</mat-icon>\r\n                <input class=\"d-none\" type=\"file\" #fileInput accept=\".json,.txt\" (change)=\"upload($event, settingData)\">\r\n            </button>\r\n            <button mat-button matTooltip=\"Copy\" color=\"primary\" (click)=\"copyToClipboard(settingData.tempData)\" *ngIf=\"isConnectionSecure\">\r\n                <mat-icon>content_copy</mat-icon>\r\n            </button>\r\n            <button mat-button matTooltip=\"Format (Shift+Alt+F)\" color=\"primary\" (click)=\"triggerFormat('editor-' + settingData.settingId)\">\r\n                <mat-icon>text_fields</mat-icon>\r\n            </button>\r\n            <button mat-button matTooltip=\"History\" color=\"primary\"\r\n                [routerLink]=\"['./apps', settingData.slug, data.selectedAppIdentifierId, 'settings', settingData.settingId, 'histories']\" queryParamsHandling=\"merge\"\r\n                [disabled]=\"!settingData.dataRestored && settingData.version === '0'\">\r\n                <mat-icon>history</mat-icon>\r\n            </button>\r\n        </div>\r\n        <div class=\"loading-container\" *ngIf=\"settingIdToLoading[settingData.settingId]\">\r\n            <div class=\"mat-bg-primary position-absolute rounded-circle app-icon-animation\"><img class=\"app-icon bg-white\"></div>\r\n            <div class=\"loading-spinner\"></div>\r\n        </div>\r\n        <json-editor [id]=\"'editor-' + settingData.settingId\" *ngIf=\"settingData.isDataFetched\" (invalidData)=\"invalidData($event, settingData)\" [(ngModel)]=\"settingData.tempData\" [theme]=\"theme\"></json-editor>\r\n    </mat-expansion-panel>\r\n</mat-accordion>\r\n\r\n<ng-template #noData>\r\n    <p class=\"p-2\">No results found.</p>\r\n</ng-template>","export enum ServiceType {\r\n    Provider = 1,\r\n    Consumer = 2,\r\n}","export enum DataAccessType {\r\n    Orm = 1\r\n}","export enum ReloadStrategy{\r\n    Polling = 1,\r\n    Redis = 2\r\n}","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable, OnDestroy } from \"@angular/core\";\r\nimport { AuthService } from \"../../../core/services/auth.service\";\r\nimport { WindowService } from \"../../../core/services/window.service\";\r\nimport { GetInstancesByAppRequest } from \"../models/get-instances-by-app-request\";\r\nimport { Observable, Subject, takeUntil } from \"rxjs\";\r\nimport { DeleteInstanceRequest } from \"../models/delete-instance-request\";\r\nimport { DeleteInstanceResponse } from \"../models/delete-instance-response\";\r\nimport { IResponse, IResponseAny } from \"../../../shared/models/response\";\r\nimport { GetInstancesResponseInstance } from \"../models/get-instances-response-instance\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class InstancesService implements OnDestroy {\r\n    private headers: HttpHeaders = new HttpHeaders();\r\n    private route: string;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private authService: AuthService,\r\n        windowService: WindowService) {\r\n        this.route = windowService.controllerOptions.route;\r\n        this.authService.isAuthenticated$\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(isAuthenticated => {\r\n                this.headers = isAuthenticated\r\n                    ? new HttpHeaders({ 'Authorization': `${this.authService.token}` })\r\n                    : new HttpHeaders();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    deleteInstance(request: DeleteInstanceRequest): Observable<IResponseAny> {\r\n        const url = this.route + '/v1/instances/' + request.instanceId;\r\n\r\n        return this.httpClient.delete<IResponseAny>(url, { headers: this.headers });\r\n    }\r\n\r\n    getInstancesByAppId(request: GetInstancesByAppRequest): Observable<IResponse<GetInstancesResponseInstance[]>> {\r\n\r\n        let url = this.route + '/v1/apps/' + request.appIdOrSlug + '/instances';\r\n\r\n        let params = new HttpParams();\r\n\r\n        if (request.identifierId !== undefined) {\r\n            params = params.append(\"identifierId\", request.identifierId);\r\n        }\r\n\r\n        const queryParams = params.toString()\r\n\r\n        url += queryParams ? '?' + queryParams : '';\r\n\r\n        return this.httpClient.get<IResponse<GetInstancesResponseInstance[]>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getInstancesByAppBySlug(request: GetInstancesByAppRequest): Observable<IResponse<GetInstancesResponseInstance[]>> {\r\n\r\n        let url = this.route + '/v1/apps/slug/' + request.appIdOrSlug + '/instances';\r\n\r\n        let params = new HttpParams();\r\n\r\n        if (request.identifierId !== undefined) {\r\n            params = params.append(\"identifierId\", request.identifierId);\r\n        }\r\n\r\n        const queryParams = params.toString()\r\n\r\n        url += queryParams ? '?' + queryParams : '';\r\n\r\n        return this.httpClient.get<IResponse<GetInstancesResponseInstance[]>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getInstancesByAppIdAndIdentifierId(request: GetInstancesByAppRequest): Observable<IResponse<GetInstancesResponseInstance[]>> {\r\n\r\n        let url = this.route + '/v1/apps/' + request.appIdOrSlug + '/identifiers/' + request.identifierId + '/instances';\r\n\r\n        return this.httpClient.get<IResponse<GetInstancesResponseInstance[]>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getInstancesByAppSlugAndIdentifierSlug(request: GetInstancesByAppRequest): Observable<IResponse<GetInstancesResponseInstance[]>> {\r\n\r\n        let url = this.route + '/v1/apps/slug/' + request.appIdOrSlug + '/identifiers/' + request.identifierId + '/instances';\r\n\r\n        return this.httpClient.get<IResponse<GetInstancesResponseInstance[]>>(url, { headers: this.headers });\r\n    }\r\n}","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from \"@angular/core\";\r\nimport { MatAccordion } from \"@angular/material/expansion\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { InstancesService } from \"../../services/instances.service\";\r\nimport { UtilityService } from \"../../../../shared/services/utility.service\";\r\nimport { ConfirmationDialogComponent } from \"../../../../shared/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { Subscription, tap } from \"rxjs\";\r\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\r\nimport { AppViewService } from \"../../../app/services/app-view.service\";\r\nimport { InstanceListComponentData } from \"../../models/instance-list-component-data\";\r\nimport { InstanceData } from \"../../../app/models/instance-data.model\";\r\nimport { WindowService } from \"../../../../core/services/window.service\";\r\nimport { ServiceType } from \"../../../../shared/models/service-type\";\r\nimport { Data } from \"@angular/router\";\r\nimport { DataAccessType } from \"../../../../shared/models/data-access-type\";\r\nimport { ReloadStrategy } from \"../../../../shared/models/reload-strategy\";\r\n\r\n@Component({\r\n    selector: 'instance-list',\r\n    templateUrl: './instance-list.component.html',\r\n    styleUrls: ['./instance-list.component.css']\r\n})\r\nexport class InstanceListComponent implements OnInit, OnDestroy {\r\n    multiSelectionEnabled: boolean = false;\r\n    subscriptions: Subscription = new Subscription();\r\n    isConnectionSecure?: boolean;\r\n\r\n    @Input() data!: InstanceListComponentData;\r\n    @ViewChild(MatAccordion) accordion!: MatAccordion;\r\n    @Output() instanceDeleteEmitter: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    constructor(\r\n        private instancesService: InstancesService,\r\n        private utilityService: UtilityService,\r\n        private windowService: WindowService,\r\n        private dialog: MatDialog,\r\n        private appViewService: AppViewService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscriptions.add(this.appViewService.appViewMultiSelectionEnabled$.subscribe(isEnabled => {\r\n            this.multiSelectionEnabled = isEnabled;\r\n        }));\r\n\r\n        this.isConnectionSecure = this.windowService.isConnectionSecure;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    onToggleMultiSelection(event: MatSlideToggleChange) {\r\n        this.appViewService.emitAppViewMultiSelectionEnabled(event.checked);\r\n    }\r\n\r\n    copyToClipboard(content: string, event: Event) {\r\n        event.stopPropagation();\r\n        this.utilityService.copyToClipboard(content);\r\n    }\r\n\r\n    delete(data: InstanceData) {\r\n        const title = 'Confirm delete';\r\n        const message = `Is \"${data.name}\" instance no longer active? You can delete it, and it will be re-created upon restart if it exists.`;\r\n\r\n        const subscription = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: '500px',\r\n            data: { title, message }\r\n        }).afterClosed().subscribe(result => {\r\n            if (result) {\r\n\r\n                const internalSubscription = this.instancesService.deleteInstance({\r\n                    instanceId: data.id\r\n                }).subscribe(() => {\r\n\r\n                    const instance = this.data.instances!.findIndex(i => i.id === data.id);\r\n\r\n                    this.data.instances!.splice(instance, 1);\r\n\r\n                    this.instanceDeleteEmitter.emit(data.id);\r\n                });\r\n\r\n                this.subscriptions.add(internalSubscription);\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    expandAll() {\r\n        this.accordion.openAll();\r\n    }\r\n\r\n    collapseAll() {\r\n        this.accordion.closeAll();\r\n    }\r\n\r\n    getServiceType(serviceType: ServiceType) : string{\r\n        return ServiceType[serviceType];\r\n    }\r\n\r\n    getDataAccessType(dataAccessType: DataAccessType) : string{\r\n        return DataAccessType[dataAccessType];\r\n    }\r\n\r\n    getReloadStrategies(reloadStrategies: ReloadStrategy[]){\r\n        return reloadStrategies.map(r => ReloadStrategy[r]).join(', ');\r\n    }\r\n\r\n}","<div class=\"d-flex min-height-50\">\r\n  <div *ngIf=\"multiSelectionEnabled\">\r\n    <button mat-icon-button matTooltip=\"Expand All\" (click)=\"expandAll()\"\r\n      [disabled]=\"data.instances === undefined || data.instances.length === 0\"><mat-icon>expand_more</mat-icon></button>\r\n    <button mat-icon-button matTooltip=\"Collapse All\" (click)=\"collapseAll()\"\r\n      [disabled]=\"data.instances === undefined || data.instances.length === 0\"><mat-icon>expand_less</mat-icon></button>\r\n  </div>\r\n  <mat-slide-toggle class=\"d-flex ml-2\" [(ngModel)]=\"multiSelectionEnabled\"\r\n    (change)=\"onToggleMultiSelection($event)\">Multi selection</mat-slide-toggle>\r\n  <span class=\"spacer\"></span>\r\n</div>\r\n\r\n<mat-accordion multi *ngIf=\"data.instances?.length else noData;\">\r\n  <mat-expansion-panel\r\n    *ngFor=\"let data of data.instances\">\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <span matTooltip=\"Name\">{{ data.name }}</span>\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        <span matTooltip=\"App Version\">v{{ data.version }}</span>\r\n        <span class=\"spacer\"></span>\r\n        <span class=\"fs-x-small\" matTooltip=\"Dynamic Id\">{{ data.dynamicId }}\r\n          <button mat-icon-button class=\"icon-mini\" color=\"primary\" (click)=\"copyToClipboard(data.dynamicId, $event)\" *ngIf=\"isConnectionSecure\">\r\n            <mat-icon>content_copy</mat-icon>\r\n          </button>\r\n        </span>\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <mat-card class=\"info-card\">\r\n      <mat-card-content>\r\n\r\n        <table class=\"custom-mat-table\">\r\n          <tbody>\r\n            <tr *ngIf=\"data.urls\">\r\n              <td class=\"custom-mat-cell key-cell\">Urls:</td>\r\n              <td class=\"custom-mat-cell\">\r\n                <mat-list class=\"d-grid\">\r\n                  <mat-list-item *ngFor=\"let url of data.urls\">\r\n                    <span>\r\n                      {{url}}\r\n                      <a class=\"text-decoration-none\" [href]=\"url\" target=\"_blank\">\r\n                        <button mat-icon-button color=\"primary\">\r\n                          <mat-icon>open_in_new</mat-icon>\r\n                        </button>\r\n                      </a>\r\n                    </span>\r\n                  </mat-list-item>\r\n                </mat-list>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td class=\"custom-mat-cell key-cell\">Instance status:</td>\r\n              <td class=\"custom-mat-cell\">{{data.isActive ? 'Active' : 'Inactive'}}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td class=\"custom-mat-cell key-cell\">Ip Address:</td>\r\n              <td class=\"custom-mat-cell\">{{data.ipAddress || '-'}}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td class=\"custom-mat-cell key-cell\">Machine name:</td>\r\n              <td class=\"custom-mat-cell\">{{data.machineName}}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td class=\"custom-mat-cell key-cell\">Environment:</td>\r\n              <td class=\"custom-mat-cell\">{{data.environment}}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td class=\"custom-mat-cell key-cell\">Reload strategies:</td>\r\n              <td class=\"custom-mat-cell\">{{getReloadStrategies(data.reloadStrategies)}}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td class=\"custom-mat-cell key-cell\">Service type:</td>\r\n              <td class=\"custom-mat-cell\">{{getServiceType(data.serviceType)}}</td>\r\n            </tr>\r\n\r\n            <tr *ngIf=\"data.dataAccessType\">\r\n              <td class=\"custom-mat-cell key-cell\">Data access type:</td>\r\n              <td class=\"custom-mat-cell\">{{getDataAccessType(data.dataAccessType)}}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td class=\"custom-mat-cell key-cell\">Created on:</td>\r\n              <td class=\"custom-mat-cell\">{{data.createdOn}}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td class=\"custom-mat-cell key-cell\">Updated on:</td>\r\n              <td class=\"custom-mat-cell\">{{data.updatedOn}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"d-flex mt-2\">\r\n          <span class=\"spacer\"></span>\r\n          <button color=\"warn\" mat-raised-button (click)=\"delete(data)\">Delete</button>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n\r\n<ng-template #noData>\r\n  <p class=\"p-2\" *ngIf=\"data.instances !== undefined\">No results found.</p>\r\n</ng-template>","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, booleanAttribute, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChild, ViewChild, inject, ElementRef, EventEmitter, ANIMATION_MODULE_TYPE, numberAttribute, Output, ContentChildren, forwardRef, QueryList, Attribute, NgModule } from '@angular/core';\nimport { MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport { Subject, fromEvent, of, merge, EMPTY, Observable, timer, Subscription, BehaviorSubject } from 'rxjs';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/bidi';\nimport * as i4 from '@angular/cdk/a11y';\nimport { FocusKeyManager, CdkMonitorFocus } from '@angular/cdk/a11y';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { takeUntil, take, startWith, switchMap, skip, filter, distinctUntilChanged } from 'rxjs/operators';\nimport { CdkObserveContent } from '@angular/cdk/observers';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst _c0 = [\"*\"];\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c1 = [\"tabListContainer\"];\nconst _c2 = [\"tabList\"];\nconst _c3 = [\"tabListInner\"];\nconst _c4 = [\"nextPaginator\"];\nconst _c5 = [\"previousPaginator\"];\nconst _c6 = a0 => ({\n  animationDuration: a0\n});\nconst _c7 = (a0, a1) => ({\n  value: a0,\n  params: a1\n});\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\nconst _c8 = [\"tabBodyWrapper\"];\nconst _c9 = [\"tabHeader\"];\nfunction MatTabGroup_For_3_Conditional_6_ng_template_0_Template(rf, ctx) {}\nfunction MatTabGroup_For_3_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_For_3_Conditional_6_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\nfunction MatTabGroup_For_3_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\nfunction MatTabGroup_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7, 2);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_For_3_Template_div_click_0_listener() {\n      const ctx_r2 = i0.ɵɵrestoreView(_r2);\n      const tab_r4 = ctx_r2.$implicit;\n      const i_r5 = ctx_r2.$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      const tabHeader_r7 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r5._handleClick(tab_r4, tabHeader_r7, i_r5));\n    })(\"cdkFocusChange\", function MatTabGroup_For_3_Template_div_cdkFocusChange_0_listener($event) {\n      const i_r5 = i0.ɵɵrestoreView(_r2).$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._tabFocusChanged($event, i_r5));\n    });\n    i0.ɵɵelement(2, \"span\", 8)(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10)(5, \"span\", 11);\n    i0.ɵɵtemplate(6, MatTabGroup_For_3_Conditional_6_Template, 1, 1, null, 12)(7, MatTabGroup_For_3_Conditional_7_Template, 1, 1);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.$index;\n    const tabNode_r8 = i0.ɵɵreference(1);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r4.labelClass);\n    i0.ɵɵclassProp(\"mdc-tab--active\", ctx_r5.selectedIndex === i_r5);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"fitInkBarToContent\", ctx_r5.fitInkBarToContent);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r5._getTabIndex(i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r5._tabs.length)(\"aria-controls\", ctx_r5._getTabContentId(i_r5))(\"aria-selected\", ctx_r5.selectedIndex === i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matRippleTrigger\", tabNode_r8)(\"matRippleDisabled\", tab_r4.disabled || ctx_r5.disableRipple);\n    i0.ɵɵadvance(3);\n    i0.ɵɵconditional(6, tab_r4.templateLabel ? 6 : 7);\n  }\n}\nfunction MatTabGroup_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatTabGroup_For_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 13);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_For_8_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._removeTabBodyWrapperHeight());\n    })(\"_onCentering\", function MatTabGroup_For_8_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._setTabBodyWrapperHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r10 = ctx.$implicit;\n    const i_r11 = ctx.$index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r10.bodyClass);\n    i0.ɵɵclassProp(\"mat-mdc-tab-body-active\", ctx_r5.selectedIndex === i_r11);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabContentId(i_r11))(\"content\", tab_r10.content)(\"position\", tab_r10.position)(\"origin\", tab_r10.origin)(\"animationDuration\", ctx_r5.animationDuration)(\"preserveContent\", ctx_r5.preserveContent);\n    i0.ɵɵattribute(\"tabindex\", ctx_r5.contentTabIndex != null && ctx_r5.selectedIndex === i_r11 ? ctx_r5.contentTabIndex : null)(\"aria-labelledby\", ctx_r5._getTabLabelId(i_r11))(\"aria-hidden\", ctx_r5.selectedIndex !== i_r11);\n  }\n}\nconst _c10 = [\"mat-tab-nav-bar\", \"\"];\nconst _c11 = [\"mat-tab-link\", \"\"];\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n  constructor( /** Content for the tab. */template) {\n    this.template = template;\n  }\n  static {\n    this.ɵfac = function MatTabContent_Factory(t) {\n      return new (t || MatTabContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabContent,\n      selectors: [[\"\", \"matTabContent\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabContent, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabContent]',\n      providers: [{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }], null);\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n  constructor(templateRef, viewContainerRef, _closestTab) {\n    super(templateRef, viewContainerRef);\n    this._closestTab = _closestTab;\n  }\n  static {\n    this.ɵfac = function MatTabLabel_Factory(t) {\n      return new (t || MatTabLabel)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabLabel,\n      selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-label], [matTabLabel]',\n      providers: [{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.TemplateRef\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_TAB]\n    }, {\n      type: Optional\n    }]\n  }], null);\n})();\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  get templateLabel() {\n    return this._templateLabel;\n  }\n  set templateLabel(value) {\n    this._setTemplateLabelInput(value);\n  }\n  /** @docs-private */\n  get content() {\n    return this._contentPortal;\n  }\n  constructor(_viewContainerRef, _closestTabGroup) {\n    this._viewContainerRef = _viewContainerRef;\n    this._closestTabGroup = _closestTabGroup;\n    /** whether the tab is disabled. */\n    this.disabled = false;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    this._explicitContent = undefined;\n    /** Plain text label for the tab, used when there is no template label. */\n    this.textLabel = '';\n    /** Portal that will be the hosted content of the tab */\n    this._contentPortal = null;\n    /** Emits whenever the internal state of the tab changes. */\n    this._stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    this.position = null;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    this.origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n    this.isActive = false;\n  }\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  _setTemplateLabelInput(value) {\n    // Only update the label if the query managed to find one. This works around an issue where a\n    // user may have manually set `templateLabel` during creation mode, which would then get\n    // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n    // tab matches the current one so that we don't pick up labels from nested tabs.\n    if (value && value._closestTab === this) {\n      this._templateLabel = value;\n    }\n  }\n  static {\n    this.ɵfac = function MatTab_Factory(t) {\n      return new (t || MatTab)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTab,\n      selectors: [[\"mat-tab\"]],\n      contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLabel, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatTabContent, 7, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n        }\n      },\n      viewQuery: function MatTab_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n        }\n      },\n      hostAttrs: [\"hidden\", \"\"],\n      inputs: {\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        textLabel: [i0.ɵɵInputFlags.None, \"label\", \"textLabel\"],\n        ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n        ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n        labelClass: \"labelClass\",\n        bodyClass: \"bodyClass\"\n      },\n      exportAs: [\"matTab\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatTab_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n        }\n      },\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTab, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab',\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matTab',\n      providers: [{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }],\n      standalone: true,\n      host: {\n        // This element will be rendered on the server in order to support hydration.\n        // Hide it so it doesn't cause a layout shift when it's removed on the client.\n        'hidden': ''\n      },\n      template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\"\n    }]\n  }], () => [{\n    type: i0.ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_TAB_GROUP]\n    }, {\n      type: Optional\n    }]\n  }], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    templateLabel: [{\n      type: ContentChild,\n      args: [MatTabLabel]\n    }],\n    _explicitContent: [{\n      type: ContentChild,\n      args: [MatTabContent, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    textLabel: [{\n      type: Input,\n      args: ['label']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    labelClass: [{\n      type: Input\n    }],\n    bodyClass: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Class that is applied when a tab indicator is active. */\nconst ACTIVE_CLASS = 'mdc-tab-indicator--active';\n/** Class that is applied when the tab indicator should not transition. */\nconst NO_TRANSITION_CLASS = 'mdc-tab-indicator--no-transition';\n/**\n * Abstraction around the MDC tab indicator that acts as the tab header's ink bar.\n * @docs-private\n */\nclass MatInkBar {\n  constructor(_items) {\n    this._items = _items;\n  }\n  /** Hides the ink bar. */\n  hide() {\n    this._items.forEach(item => item.deactivateInkBar());\n  }\n  /** Aligns the ink bar to a DOM node. */\n  alignToElement(element) {\n    const correspondingItem = this._items.find(item => item.elementRef.nativeElement === element);\n    const currentItem = this._currentItem;\n    if (correspondingItem === currentItem) {\n      return;\n    }\n    currentItem?.deactivateInkBar();\n    if (correspondingItem) {\n      const domRect = currentItem?.elementRef.nativeElement.getBoundingClientRect?.();\n      // The ink bar won't animate unless we give it the `DOMRect` of the previous item.\n      correspondingItem.activateInkBar(domRect);\n      this._currentItem = correspondingItem;\n    }\n  }\n}\nclass InkBarItem {\n  constructor() {\n    this._elementRef = inject(ElementRef);\n    this._fitToContent = false;\n  }\n  /** Whether the ink bar should fit to the entire tab or just its content. */\n  get fitInkBarToContent() {\n    return this._fitToContent;\n  }\n  set fitInkBarToContent(newValue) {\n    if (this._fitToContent !== newValue) {\n      this._fitToContent = newValue;\n      if (this._inkBarElement) {\n        this._appendInkBarElement();\n      }\n    }\n  }\n  /** Aligns the ink bar to the current item. */\n  activateInkBar(previousIndicatorClientRect) {\n    const element = this._elementRef.nativeElement;\n    // Early exit if no indicator is present to handle cases where an indicator\n    // may be activated without a prior indicator state\n    if (!previousIndicatorClientRect || !element.getBoundingClientRect || !this._inkBarContentElement) {\n      element.classList.add(ACTIVE_CLASS);\n      return;\n    }\n    // This animation uses the FLIP approach. You can read more about it at the link below:\n    // https://aerotwist.com/blog/flip-your-animations/\n    // Calculate the dimensions based on the dimensions of the previous indicator\n    const currentClientRect = element.getBoundingClientRect();\n    const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n    const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n    element.classList.add(NO_TRANSITION_CLASS);\n    this._inkBarContentElement.style.setProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n    // Force repaint before updating classes and transform to ensure the transform properly takes effect\n    element.getBoundingClientRect();\n    element.classList.remove(NO_TRANSITION_CLASS);\n    element.classList.add(ACTIVE_CLASS);\n    this._inkBarContentElement.style.setProperty('transform', '');\n  }\n  /** Removes the ink bar from the current item. */\n  deactivateInkBar() {\n    this._elementRef.nativeElement.classList.remove(ACTIVE_CLASS);\n  }\n  /** Initializes the foundation. */\n  ngOnInit() {\n    this._createInkBarElement();\n  }\n  /** Destroys the foundation. */\n  ngOnDestroy() {\n    this._inkBarElement?.remove();\n    this._inkBarElement = this._inkBarContentElement = null;\n  }\n  /** Creates and appends the ink bar element. */\n  _createInkBarElement() {\n    const documentNode = this._elementRef.nativeElement.ownerDocument || document;\n    const inkBarElement = this._inkBarElement = documentNode.createElement('span');\n    const inkBarContentElement = this._inkBarContentElement = documentNode.createElement('span');\n    inkBarElement.className = 'mdc-tab-indicator';\n    inkBarContentElement.className = 'mdc-tab-indicator__content mdc-tab-indicator__content--underline';\n    inkBarElement.appendChild(this._inkBarContentElement);\n    this._appendInkBarElement();\n  }\n  /**\n   * Appends the ink bar to the tab host element or content, depending on whether\n   * the ink bar should fit to content.\n   */\n  _appendInkBarElement() {\n    if (!this._inkBarElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Ink bar element has not been created and cannot be appended');\n    }\n    const parentElement = this._fitToContent ? this._elementRef.nativeElement.querySelector('.mdc-tab__content') : this._elementRef.nativeElement;\n    if (!parentElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Missing element to host the ink bar');\n    }\n    parentElement.appendChild(this._inkBarElement);\n  }\n  static {\n    this.ɵfac = function InkBarItem_Factory(t) {\n      return new (t || InkBarItem)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: InkBarItem,\n      inputs: {\n        fitInkBarToContent: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute]\n      },\n      features: [i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InkBarItem, [{\n    type: Directive\n  }], null, {\n    fitInkBarToContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n  return method;\n}\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends InkBarItem {\n  constructor(elementRef) {\n    super();\n    this.elementRef = elementRef;\n    /** Whether the tab is disabled. */\n    this.disabled = false;\n  }\n  /** Sets focus on the wrapper element */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  getOffsetLeft() {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n  getOffsetWidth() {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n  static {\n    this.ɵfac = function MatTabLabelWrapper_Factory(t) {\n      return new (t || MatTabLabelWrapper)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabLabelWrapper,\n      selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n      hostVars: 3,\n      hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n          i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute]\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabLabelWrapper]',\n      host: {\n        '[class.mat-mdc-tab-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n      },\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n  /** The index of the active tab. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(v) {\n    const value = isNaN(v) ? 0 : v;\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n  constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._animationMode = _animationMode;\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    this._scrollDistance = 0;\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    this._selectedIndexChanged = false;\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /** Whether the controls for pagination should be displayed */\n    this._showPaginationControls = false;\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    this._disableScrollAfter = true;\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    this._disableScrollBefore = true;\n    /** Stream that will stop the automated scrolling. */\n    this._stopScrolling = new Subject();\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    this.disablePagination = false;\n    this._selectedIndex = 0;\n    /** Event emitted when the option is selected. */\n    this.selectFocusedIndex = new EventEmitter();\n    /** Event emitted when a label is focused. */\n    this.indexFocused = new EventEmitter();\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._stopInterval();\n      });\n    });\n  }\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('before');\n    });\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('after');\n    });\n  }\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : of('ltr');\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n    this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap()\n    // Allow focus to land on disabled tabs, as per https://w3c.github.io/aria-practices/#kbd_disabled_controls\n    .skipPredicate(() => false);\n    this._keyManager.updateActiveItem(this._selectedIndex);\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n    // can hold up tests that are in a background tab.\n    this._ngZone.onStable.pipe(take(1)).subscribe(realign);\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes, this._itemsResized()).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate\n      // the element dimensions. The call has to be wrapped in `NgZone.run`,\n      // because the viewport change handler runs outside of Angular.\n      this._ngZone.run(() => {\n        Promise.resolve().then(() => {\n          // Clamp the scroll distance, because it can change with the number of tabs.\n          this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n          realign();\n        });\n      });\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n  /** Sends any changes that could affect the layout of the items. */\n  _itemsResized() {\n    if (typeof ResizeObserver !== 'function') {\n      return EMPTY;\n    }\n    return this._items.changes.pipe(startWith(this._items), switchMap(tabItems => new Observable(observer => this._ngZone.runOutsideAngular(() => {\n      const resizeObserver = new ResizeObserver(entries => observer.next(entries));\n      tabItems.forEach(item => resizeObserver.observe(item.elementRef.nativeElement));\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }))),\n    // Skip the first emit since the resize observer emits when an item\n    // is observed for new items when the tab is already inserted\n    skip(1),\n    // Skip emissions where all the elements are invisible since we don't want\n    // the header to try and re-render with invalid measurements. See #25574.\n    filter(entries => entries.some(e => e.contentRect.width > 0 && e.contentRect.height > 0)));\n  }\n  ngAfterContentChecked() {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          const item = this._items.get(this.focusIndex);\n          if (item && !item.disabled) {\n            this.selectFocusedIndex.emit(this.focusIndex);\n            this._itemSelected(event);\n          }\n        }\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n    this._keyManager.setActiveItem(value);\n  }\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index) {\n    return this._items ? !!this._items.toArray()[index] : true;\n  }\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n  /** The layout direction of the containing app. */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    if (this._platform.TRIDENT || this._platform.EDGE) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance() {\n    return this._scrollDistance;\n  }\n  set scrollDistance(value) {\n    this._scrollTo(value);\n  }\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex) {\n    if (this.disablePagination) {\n      return;\n    }\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n    if (!selectedLabel) {\n      return;\n    }\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {\n      offsetLeft,\n      offsetWidth\n    } = selectedLabel.elementRef.nativeElement;\n    let labelBeforePos, labelAfterPos;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += Math.min(labelAfterPos - afterVisiblePos, labelBeforePos - beforeVisiblePos);\n    }\n  }\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n      if (isEnabled !== this._showPaginationControls) {\n        this._changeDetectorRef.markForCheck();\n      }\n      this._showPaginationControls = isEnabled;\n    }\n  }\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance() {\n    const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return lengthOfTabList - viewLength || 0;\n  }\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab() {\n    const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction, mouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    }\n    // Avoid overlapping timers.\n    this._stopInterval();\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n    // Keep the timer going until something tells it to stop or the component is destroyed.\n    .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n      const {\n        maxScrollDistance,\n        distance\n      } = this._scrollHeader(direction);\n      // Stop the timer if we've reached the start or the end.\n      if (distance === 0 || distance >= maxScrollDistance) {\n        this._stopInterval();\n      }\n    });\n  }\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  _scrollTo(position) {\n    if (this.disablePagination) {\n      return {\n        maxScrollDistance: 0,\n        distance: 0\n      };\n    }\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n    return {\n      maxScrollDistance,\n      distance: this._scrollDistance\n    };\n  }\n  static {\n    this.ɵfac = function MatPaginatedTabHeader_Factory(t) {\n      return new (t || MatPaginatedTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatPaginatedTabHeader,\n      inputs: {\n        disablePagination: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disablePagination\", \"disablePagination\", booleanAttribute],\n        selectedIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"selectedIndex\", \"selectedIndex\", numberAttribute]\n      },\n      outputs: {\n        selectFocusedIndex: \"selectFocusedIndex\",\n        indexFocused: \"indexFocused\"\n      },\n      features: [i0.ɵɵInputTransformsFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n    type: Directive\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i3.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    disablePagination: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectedIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    selectFocusedIndex: [{\n      type: Output\n    }],\n    indexFocused: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends MatPaginatedTabHeader {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    /** Whether the ripple effect is disabled or not. */\n    this.disableRipple = false;\n  }\n  ngAfterContentInit() {\n    this._inkBar = new MatInkBar(this._items);\n    super.ngAfterContentInit();\n  }\n  _itemSelected(event) {\n    event.preventDefault();\n  }\n  static {\n    this.ɵfac = function MatTabHeader_Factory(t) {\n      return new (t || MatTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabHeader,\n      selectors: [[\"mat-tab-header\"]],\n      contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n        }\n      },\n      viewQuery: function MatTabHeader_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 7);\n          i0.ɵɵviewQuery(_c3, 7);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-header\"],\n      hostVars: 4,\n      hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n        }\n      },\n      inputs: {\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute]\n      },\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 13,\n      vars: 10,\n      consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\", \"disabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-label-container\", 3, \"keydown\"], [\"role\", \"tablist\", 1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-labels\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\", \"disabled\"]],\n      template: function MatTabHeader_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"button\", 5, 0);\n          i0.ɵɵlistener(\"click\", function MatTabHeader_Template_button_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n          })(\"mousedown\", function MatTabHeader_Template_button_mousedown_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n          })(\"touchend\", function MatTabHeader_Template_button_touchend_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(2, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 7, 1);\n          i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleKeydown($event));\n          });\n          i0.ɵɵelementStart(5, \"div\", 8, 2);\n          i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onContentChanges());\n          });\n          i0.ɵɵelementStart(7, \"div\", 9, 3);\n          i0.ɵɵprojection(9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"button\", 10, 4);\n          i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_button_mousedown_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n          })(\"click\", function MatTabHeader_Template_button_click_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n          })(\"touchend\", function MatTabHeader_Template_button_touchend_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(12, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          i0.ɵɵadvance(7);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n        }\n      },\n      dependencies: [MatRipple, CdkObserveContent],\n      styles: [\".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color)}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}._mat-animation-noopable span.mdc-tab-indicator__content,._mat-animation-noopable span.mdc-tab__text-label{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-header-divider-height);border-top-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.mat-mdc-tab::before{margin:5px}.cdk-high-contrast-active .mat-mdc-tab[aria-disabled=true]{color:GrayText}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-header',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        'class': 'mat-mdc-tab-header',\n        '[class.mat-mdc-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-mdc-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n      },\n      standalone: true,\n      imports: [MatRipple, CdkObserveContent],\n      template: \"<!-- TODO: this also had `mat-elevation-z4`. Figure out what we should do with it. -->\\n<button class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-before\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div\\n  class=\\\"mat-mdc-tab-label-container\\\"\\n  #tabListContainer\\n  (keydown)=\\\"_handleKeydown($event)\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-mdc-tab-list\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-mdc-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- TODO: this also had `mat-elevation-z4`. Figure out what we should do with it. -->\\n<button class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-after\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\",\n      styles: [\".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color)}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}._mat-animation-noopable span.mdc-tab-indicator__content,._mat-animation-noopable span.mdc-tab__text-label{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-header-divider-height);border-top-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.mat-mdc-tab::before{margin:5px}.cdk-high-contrast-active .mat-mdc-tab[aria-disabled=true]{color:GrayText}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i3.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    _items: [{\n      type: ContentChildren,\n      args: [MatTabLabelWrapper, {\n        descendants: false\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n  // Transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', style({\n    transform: 'none'\n  })),\n  // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px',\n    // Normally this is redundant since we detach the content from the DOM, but if the user\n    // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n    visibility: 'hidden'\n  })), state('right', style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px',\n    visibility: 'hidden'\n  })), transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), transition('void => left-origin-center', [style({\n    transform: 'translate3d(-100%, 0, 0)',\n    visibility: 'hidden'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), transition('void => right-origin-center', [style({\n    transform: 'translate3d(100%, 0, 0)',\n    visibility: 'hidden'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n  constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n    this._host = _host;\n    /** Subscription to events for when the tab body begins centering. */\n    this._centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    this._leavingSub = Subscription.EMPTY;\n  }\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit() {\n    super.ngOnInit();\n    this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n      if (isCentering && !this.hasAttached()) {\n        this.attach(this._host._content);\n      }\n    });\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      if (!this._host.preserveContent) {\n        this.detach();\n      }\n    });\n  }\n  /** Clean up centering subscription. */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n  static {\n    this.ɵfac = function MatTabBodyPortal_Factory(t) {\n      return new (t || MatTabBodyPortal)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatTabBodyPortal,\n      selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBodyPortal, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabBodyHost]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ComponentFactoryResolver\n  }, {\n    type: i0.ViewContainerRef\n  }, {\n    type: MatTabBody,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(() => MatTabBody)]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody {\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  set position(position) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n  constructor(_elementRef, _dir, changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    /** Subscription to the directionality change observable. */\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /** Emits when an animation on the tab is complete. */\n    this._translateTabComplete = new Subject();\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    this._onCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    this._beforeCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    this._afterLeavingCenter = new EventEmitter();\n    /** Event emitted when the tab completes its animation towards the center. */\n    this._onCentered = new EventEmitter(true);\n    // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    this.animationDuration = '500ms';\n    /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n    this.preserveContent = false;\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(dir => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n  _onTranslateTabStarted(event) {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n  /** The text direction of the containing app. */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position) {\n    return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n  }\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  _computePositionAnimationState(dir = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  _computePositionFromOrigin(origin) {\n    const dir = this._getLayoutDirection();\n    if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n      return 'left-origin-center';\n    }\n    return 'right-origin-center';\n  }\n  static {\n    this.ɵfac = function MatTabBody_Factory(t) {\n      return new (t || MatTabBody)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabBody,\n      selectors: [[\"mat-tab-body\"]],\n      viewQuery: function MatTabBody_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-body\"],\n      inputs: {\n        _content: [i0.ɵɵInputFlags.None, \"content\", \"_content\"],\n        origin: \"origin\",\n        animationDuration: \"animationDuration\",\n        preserveContent: \"preserveContent\",\n        position: \"position\"\n      },\n      outputs: {\n        _onCentering: \"_onCentering\",\n        _beforeCentering: \"_beforeCentering\",\n        _afterLeavingCenter: \"_afterLeavingCenter\",\n        _onCentered: \"_onCentered\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 6,\n      consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-mdc-tab-body-content\"], [\"matTabBodyHost\", \"\"]],\n      template: function MatTabBody_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onTranslateTabStarted($event));\n          })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._translateTabComplete.next($event));\n          });\n          i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"@translateTab\", i0.ɵɵpureFunction2(3, _c7, ctx._position, i0.ɵɵpureFunction1(1, _c6, ctx.animationDuration)));\n        }\n      },\n      dependencies: [MatTabBodyPortal, CdkScrollable],\n      styles: [\".mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-mdc-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"],\n      encapsulation: 2,\n      data: {\n        animation: [matTabsAnimations.translateTab]\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBody, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-body',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      animations: [matTabsAnimations.translateTab],\n      host: {\n        'class': 'mat-mdc-tab-body'\n      },\n      standalone: true,\n      imports: [MatTabBodyPortal, CdkScrollable],\n      template: \"<div class=\\\"mat-mdc-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n      styles: [\".mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-mdc-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    _onCentering: [{\n      type: Output\n    }],\n    _beforeCentering: [{\n      type: Output\n    }],\n    _afterLeavingCenter: [{\n      type: Output\n    }],\n    _onCentered: [{\n      type: Output\n    }],\n    _portalHost: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet]\n    }],\n    _content: [{\n      type: Input,\n      args: ['content']\n    }],\n    origin: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    preserveContent: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** Boolean constant that determines whether the tab group supports the `backgroundColor` input */\nconst ENABLE_BACKGROUND_INPUT = true;\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup {\n  /** Whether the ink bar should fit its width to the size of the tab label content. */\n  get fitInkBarToContent() {\n    return this._fitInkBarToContent;\n  }\n  set fitInkBarToContent(value) {\n    this._fitInkBarToContent = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  /** The index of the active tab. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value) {\n    this._indexToSelect = isNaN(value) ? null : value;\n  }\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  set animationDuration(value) {\n    const stringValue = value + '';\n    this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n  }\n  /**\n   * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n   * accessibility when the tab does not have focusable elements or if it has scrollable content.\n   * The `tabindex` will be removed automatically for inactive tabs.\n   * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n   */\n  get contentTabIndex() {\n    return this._contentTabIndex;\n  }\n  set contentTabIndex(value) {\n    this._contentTabIndex = isNaN(value) ? null : value;\n  }\n  /**\n   * Background color of the tab group.\n   * @deprecated The background color should be customized through Sass theming APIs.\n   * @breaking-change 20.0.0 Remove this input\n   */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  set backgroundColor(value) {\n    if (!ENABLE_BACKGROUND_INPUT) {\n      throw new Error(`mat-tab-group background color must be set through the Sass theming API`);\n    }\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n    if (value) {\n      classList.add('mat-tabs-with-background', `mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  constructor(_elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** All of the tabs that belong to the group. */\n    this._tabs = new QueryList();\n    /** The tab index that should be selected after the content has been checked. */\n    this._indexToSelect = 0;\n    /** Index of the tab that was focused last. */\n    this._lastFocusedTabIndex = null;\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    this._tabBodyWrapperHeight = 0;\n    /** Subscription to tabs being added/removed. */\n    this._tabsSubscription = Subscription.EMPTY;\n    /** Subscription to changes in the tab labels. */\n    this._tabLabelSubscription = Subscription.EMPTY;\n    this._fitInkBarToContent = false;\n    /** Whether tabs should be stretched to fill the header. */\n    this.stretchTabs = true;\n    /** Whether the tab group should grow to the size of the active tab. */\n    this.dynamicHeight = false;\n    this._selectedIndex = null;\n    /** Position of the tab header. */\n    this.headerPosition = 'above';\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    this.disablePagination = false;\n    /** Whether ripples in the tab group are disabled. */\n    this.disableRipple = false;\n    /**\n     * By default tabs remove their content from the DOM while it's off-screen.\n     * Setting this to `true` will keep it in the DOM which will prevent elements\n     * like iframes and videos from reloading next time it comes back into the view.\n     */\n    this.preserveContent = false;\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    this.selectedIndexChange = new EventEmitter();\n    /** Event emitted when focus has changed within a tab group. */\n    this.focusChange = new EventEmitter();\n    /** Event emitted when the body animation has completed */\n    this.animationDone = new EventEmitter();\n    /** Event emitted when the tab selection has changed. */\n    this.selectedTabChange = new EventEmitter(true);\n    /** Whether the tab group is rendered on the server. */\n    this._isServer = !inject(Platform).isBrowser;\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n    if (defaultConfig?.contentTabIndex != null) {\n      this.contentTabIndex = defaultConfig.contentTabIndex;\n    }\n    this.preserveContent = !!defaultConfig?.preserveContent;\n    this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n    this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n  }\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n        // Preserve the height so page doesn't scroll up during tab change.\n        // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.minHeight = wrapper.clientHeight + 'px';\n      }\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n          // Clear the min-height, this was needed during tab change to avoid\n          // unnecessary scrolling.\n          this._tabBodyWrapper.nativeElement.style.minHeight = '';\n        }\n      });\n    }\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab, index) => {\n      tab.position = index - indexToSelect;\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._lastFocusedTabIndex = null;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n    this._subscribeToTabLabels();\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n        let selectedTab;\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            this._lastFocusedTabIndex = null;\n            selectedTab = tabs[i];\n            break;\n          }\n        }\n        // If we haven't found an active tab and a tab exists at the selected index, it means\n        // that the active tab was swapped out. Since this won't be picked up by the rendering\n        // loop in `ngAfterContentChecked`, we need to sync it up manually.\n        if (!selectedTab && tabs[indexToSelect]) {\n          Promise.resolve().then(() => {\n            tabs[indexToSelect].isActive = true;\n            this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n          });\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Listens to changes in all of the tabs. */\n  _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n      this._tabs.reset(tabs.filter(tab => {\n        return tab._closestTabGroup === this || !tab._closestTabGroup;\n      }));\n      this._tabs.notifyOnChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._tabs.destroy();\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n  /**\n   * Recalculates the tab group's pagination dimensions.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    if (this._tabHeader) {\n      this._tabHeader.updatePagination();\n    }\n  }\n  /**\n   * Sets focus to a particular tab.\n   * @param index Index of the tab to be focused.\n   */\n  focusTab(index) {\n    const header = this._tabHeader;\n    if (header) {\n      header.focusIndex = index;\n    }\n  }\n  _focusChanged(index) {\n    this._lastFocusedTabIndex = index;\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n  _createChangeEvent(index) {\n    const event = new MatTabChangeEvent();\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  _clampTabIndex(index) {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i) {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i) {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight) {\n    if (!this.dynamicHeight || !this._tabBodyWrapperHeight) {\n      return;\n    }\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight() {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab, tabHeader, index) {\n    tabHeader.focusIndex = index;\n    if (!tab.disabled) {\n      this.selectedIndex = index;\n    }\n  }\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(index) {\n    const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n    return index === targetIndex ? 0 : -1;\n  }\n  /** Callback for when the focused state of a tab has changed. */\n  _tabFocusChanged(focusOrigin, index) {\n    // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n    // can cause the tab to be moved out from under the pointer, interrupting the\n    // click sequence (see #21898). We don't need to scroll the tab into view for\n    // such cases anyway, because it will be done when the tab becomes selected.\n    if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n      this._tabHeader.focusIndex = index;\n    }\n  }\n  static {\n    this.ɵfac = function MatTabGroup_Factory(t) {\n      return new (t || MatTabGroup)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabGroup,\n      selectors: [[\"mat-tab-group\"]],\n      contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n        }\n      },\n      viewQuery: function MatTabGroup_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c8, 5);\n          i0.ɵɵviewQuery(_c9, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-group\"],\n      hostVars: 10,\n      hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n          i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n          i0.ɵɵclassProp(\"mat-mdc-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-mdc-tab-group-inverted-header\", ctx.headerPosition === \"below\")(\"mat-mdc-tab-group-stretch-tabs\", ctx.stretchTabs);\n        }\n      },\n      inputs: {\n        color: \"color\",\n        fitInkBarToContent: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n        stretchTabs: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n        dynamicHeight: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"dynamicHeight\", \"dynamicHeight\", booleanAttribute],\n        selectedIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"selectedIndex\", \"selectedIndex\", numberAttribute],\n        headerPosition: \"headerPosition\",\n        animationDuration: \"animationDuration\",\n        contentTabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"contentTabIndex\", \"contentTabIndex\", numberAttribute],\n        disablePagination: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disablePagination\", \"disablePagination\", booleanAttribute],\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        preserveContent: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"preserveContent\", \"preserveContent\", booleanAttribute],\n        backgroundColor: \"backgroundColor\"\n      },\n      outputs: {\n        selectedIndexChange: \"selectedIndexChange\",\n        focusChange: \"focusChange\",\n        animationDone: \"animationDone\",\n        selectedTabChange: \"selectedTabChange\"\n      },\n      exportAs: [\"matTabGroup\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 9,\n      vars: 6,\n      consts: [[\"tabHeader\", \"\"], [\"tabBodyWrapper\", \"\"], [\"tabNode\", \"\"], [3, \"indexFocused\", \"selectFocusedIndex\", \"selectedIndex\", \"disableRipple\", \"disablePagination\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-mdc-focus-indicator\", 3, \"id\", \"mdc-tab--active\", \"class\", \"disabled\", \"fitInkBarToContent\"], [1, \"mat-mdc-tab-body-wrapper\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-mdc-tab-body-active\", \"class\", \"content\", \"position\", \"origin\", \"animationDuration\", \"preserveContent\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-mdc-focus-indicator\", 3, \"click\", \"cdkFocusChange\", \"id\", \"disabled\", \"fitInkBarToContent\"], [1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"_onCentered\", \"_onCentering\", \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"preserveContent\"]],\n      template: function MatTabGroup_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"mat-tab-header\", 3, 0);\n          i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._focusChanged($event));\n          })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.selectedIndex = $event);\n          });\n          i0.ɵɵrepeaterCreate(2, MatTabGroup_For_3_Template, 8, 17, \"div\", 4, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, MatTabGroup_Conditional_4_Template, 1, 0);\n          i0.ɵɵelementStart(5, \"div\", 5, 1);\n          i0.ɵɵrepeaterCreate(7, MatTabGroup_For_8_Template, 1, 13, \"mat-tab-body\", 6, i0.ɵɵrepeaterTrackByIdentity);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx._tabs);\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(4, ctx._isServer ? 4 : -1);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵrepeater(ctx._tabs);\n        }\n      },\n      dependencies: [MatTabHeader, MatTabLabelWrapper, CdkMonitorFocus, MatRipple, CdkPortalOutlet, MatTabBody],\n      styles: [\".mdc-tab{min-width:90px;padding-right:24px;padding-left:24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;margin:0;padding-top:0;padding-bottom:0;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;-webkit-appearance:none;z-index:1}.mdc-tab::-moz-focus-inner{padding:0;border:0}.mdc-tab[hidden]{display:none}.mdc-tab--min-width{flex:0 1 auto}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab__icon{transition:150ms color linear;z-index:2}.mdc-tab--stacked .mdc-tab__content{flex-direction:column;align-items:center;justify-content:center}.mdc-tab--stacked .mdc-tab__text-label{padding-top:6px;padding-bottom:4px}.mdc-tab--active .mdc-tab__text-label,.mdc-tab--active .mdc-tab__icon{transition-delay:100ms}.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label{padding-left:8px;padding-right:0}[dir=rtl] .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label,.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label[dir=rtl]{padding-left:0;padding-right:8px}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator__content--icon{align-self:center;margin:0 auto}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}.mdc-tab-indicator .mdc-tab-indicator__content{transition:250ms transform cubic-bezier(0.4, 0, 0.2, 1)}.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition:150ms opacity linear}.mdc-tab-indicator--active.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition-delay:100ms}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;font-family:var(--mat-tab-header-label-text-font);font-size:var(--mat-tab-header-label-text-size);letter-spacing:var(--mat-tab-header-label-text-tracking);line-height:var(--mat-tab-header-label-text-line-height);font-weight:var(--mat-tab-header-label-text-weight)}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color)}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-top-width:var(--mdc-tab-indicator-active-indicator-height)}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab:not(.mdc-tab--stacked){height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab:not(:disabled).mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):hover.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):focus.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):active.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:disabled.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):hover:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):focus:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):active:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:disabled:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color)}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color)}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color)}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color)}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color)}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color)}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color)}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color)}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color);display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-group',\n      exportAs: 'matTabGroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }],\n      host: {\n        'class': 'mat-mdc-tab-group',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mat-mdc-tab-group-dynamic-height]': 'dynamicHeight',\n        '[class.mat-mdc-tab-group-inverted-header]': 'headerPosition === \"below\"',\n        '[class.mat-mdc-tab-group-stretch-tabs]': 'stretchTabs',\n        '[style.--mat-tab-animation-duration]': 'animationDuration'\n      },\n      standalone: true,\n      imports: [MatTabHeader, MatTabLabelWrapper, CdkMonitorFocus, MatRipple, CdkPortalOutlet, MatTabBody],\n      template: \"<mat-tab-header #tabHeader\\n                [selectedIndex]=\\\"selectedIndex || 0\\\"\\n                [disableRipple]=\\\"disableRipple\\\"\\n                [disablePagination]=\\\"disablePagination\\\"\\n                (indexFocused)=\\\"_focusChanged($event)\\\"\\n                (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n\\n  @for (tab of _tabs; track tab; let i = $index) {\\n    <div class=\\\"mdc-tab mat-mdc-tab mat-mdc-focus-indicator\\\"\\n        #tabNode\\n        role=\\\"tab\\\"\\n        matTabLabelWrapper\\n        cdkMonitorElementFocus\\n        [id]=\\\"_getTabLabelId(i)\\\"\\n        [attr.tabIndex]=\\\"_getTabIndex(i)\\\"\\n        [attr.aria-posinset]=\\\"i + 1\\\"\\n        [attr.aria-setsize]=\\\"_tabs.length\\\"\\n        [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n        [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n        [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n        [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n        [class.mdc-tab--active]=\\\"selectedIndex === i\\\"\\n        [class]=\\\"tab.labelClass\\\"\\n        [disabled]=\\\"tab.disabled\\\"\\n        [fitInkBarToContent]=\\\"fitInkBarToContent\\\"\\n        (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n        (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n      <span class=\\\"mdc-tab__ripple\\\"></span>\\n\\n      <!-- Needs to be a separate element, because we can't put\\n          `overflow: hidden` on tab due to the ink bar. -->\\n      <div\\n        class=\\\"mat-mdc-tab-ripple\\\"\\n        mat-ripple\\n        [matRippleTrigger]=\\\"tabNode\\\"\\n        [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"></div>\\n\\n      <span class=\\\"mdc-tab__content\\\">\\n        <span class=\\\"mdc-tab__text-label\\\">\\n          <!--\\n            If there is a label template, use it, otherwise fall back to the text label.\\n            Note that we don't have indentation around the text label, because it adds\\n            whitespace around the text which breaks some internal tests.\\n          -->\\n          @if (tab.templateLabel) {\\n            <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n          } @else {{{tab.textLabel}}}\\n        </span>\\n      </span>\\n    </div>\\n  }\\n</mat-tab-header>\\n\\n<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n<div\\n  class=\\\"mat-mdc-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  @for (tab of _tabs; track tab; let i = $index) {\\n    <mat-tab-body role=\\\"tabpanel\\\"\\n                 [id]=\\\"_getTabContentId(i)\\\"\\n                 [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n                 [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n                 [attr.aria-hidden]=\\\"selectedIndex !== i\\\"\\n                 [class.mat-mdc-tab-body-active]=\\\"selectedIndex === i\\\"\\n                 [class]=\\\"tab.bodyClass\\\"\\n                 [content]=\\\"tab.content!\\\"\\n                 [position]=\\\"tab.position!\\\"\\n                 [origin]=\\\"tab.origin\\\"\\n                 [animationDuration]=\\\"animationDuration\\\"\\n                 [preserveContent]=\\\"preserveContent\\\"\\n                 (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n                 (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n    </mat-tab-body>\\n  }\\n</div>\\n\",\n      styles: [\".mdc-tab{min-width:90px;padding-right:24px;padding-left:24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;margin:0;padding-top:0;padding-bottom:0;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;-webkit-appearance:none;z-index:1}.mdc-tab::-moz-focus-inner{padding:0;border:0}.mdc-tab[hidden]{display:none}.mdc-tab--min-width{flex:0 1 auto}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab__icon{transition:150ms color linear;z-index:2}.mdc-tab--stacked .mdc-tab__content{flex-direction:column;align-items:center;justify-content:center}.mdc-tab--stacked .mdc-tab__text-label{padding-top:6px;padding-bottom:4px}.mdc-tab--active .mdc-tab__text-label,.mdc-tab--active .mdc-tab__icon{transition-delay:100ms}.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label{padding-left:8px;padding-right:0}[dir=rtl] .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label,.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label[dir=rtl]{padding-left:0;padding-right:8px}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator__content--icon{align-self:center;margin:0 auto}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}.mdc-tab-indicator .mdc-tab-indicator__content{transition:250ms transform cubic-bezier(0.4, 0, 0.2, 1)}.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition:150ms opacity linear}.mdc-tab-indicator--active.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition-delay:100ms}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;font-family:var(--mat-tab-header-label-text-font);font-size:var(--mat-tab-header-label-text-size);letter-spacing:var(--mat-tab-header-label-text-tracking);line-height:var(--mat-tab-header-label-text-line-height);font-weight:var(--mat-tab-header-label-text-weight)}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color)}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-top-width:var(--mdc-tab-indicator-active-indicator-height)}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab:not(.mdc-tab--stacked){height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab:not(:disabled).mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):hover.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):focus.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):active.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:disabled.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):hover:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):focus:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):active:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:disabled:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color)}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color)}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color)}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color)}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color)}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color)}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color)}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color)}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color);display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_TABS_CONFIG]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    _allTabs: [{\n      type: ContentChildren,\n      args: [MatTab, {\n        descendants: true\n      }]\n    }],\n    _tabBodyWrapper: [{\n      type: ViewChild,\n      args: ['tabBodyWrapper']\n    }],\n    _tabHeader: [{\n      type: ViewChild,\n      args: ['tabHeader']\n    }],\n    color: [{\n      type: Input\n    }],\n    fitInkBarToContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    stretchTabs: [{\n      type: Input,\n      args: [{\n        alias: 'mat-stretch-tabs',\n        transform: booleanAttribute\n      }]\n    }],\n    dynamicHeight: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectedIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    headerPosition: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    contentTabIndex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    disablePagination: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    preserveContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    focusChange: [{\n      type: Output\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    selectedTabChange: [{\n      type: Output\n    }]\n  });\n})();\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {}\n\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends MatPaginatedTabHeader {\n  /** Whether the ink bar should fit its width to the size of the tab label content. */\n  get fitInkBarToContent() {\n    return this._fitInkBarToContent.value;\n  }\n  set fitInkBarToContent(value) {\n    this._fitInkBarToContent.next(value);\n    this._changeDetectorRef.markForCheck();\n  }\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  set animationDuration(value) {\n    const stringValue = value + '';\n    this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n  }\n  /** Background color of the tab nav. */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  set backgroundColor(value) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n    if (value) {\n      classList.add('mat-tabs-with-background', `mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode, defaultConfig) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._fitInkBarToContent = new BehaviorSubject(false);\n    /** Whether tabs should be stretched to fill the header. */\n    this.stretchTabs = true;\n    /** Whether the ripple effect is disabled or not. */\n    this.disableRipple = false;\n    /** Theme color of the nav bar. */\n    this.color = 'primary';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n    this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n  }\n  _itemSelected() {\n    // noop\n  }\n  ngAfterContentInit() {\n    this._inkBar = new MatInkBar(this._items);\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n    super.ngAfterContentInit();\n  }\n  ngAfterViewInit() {\n    if (!this.tabPanel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw new Error('A mat-tab-nav-panel must be specified via [tabPanel].');\n    }\n    super.ngAfterViewInit();\n  }\n  /** Notifies the component that the active link has been changed. */\n  updateActiveLink() {\n    if (!this._items) {\n      return;\n    }\n    const items = this._items.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        if (this.tabPanel) {\n          this.tabPanel._activeTabId = items[i].id;\n        }\n        return;\n      }\n    }\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n  _getRole() {\n    return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n  }\n  static {\n    this.ɵfac = function MatTabNav_Factory(t) {\n      return new (t || MatTabNav)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabNav,\n      selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n      contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n        }\n      },\n      viewQuery: function MatTabNav_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 7);\n          i0.ɵɵviewQuery(_c3, 7);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-mdc-tab-nav-bar\", \"mat-mdc-tab-header\"],\n      hostVars: 17,\n      hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"role\", ctx._getRole());\n          i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-mdc-tab-nav-bar-stretch-tabs\", ctx.stretchTabs)(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        }\n      },\n      inputs: {\n        fitInkBarToContent: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n        stretchTabs: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n        animationDuration: \"animationDuration\",\n        backgroundColor: \"backgroundColor\",\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        color: \"color\",\n        tabPanel: \"tabPanel\"\n      },\n      exportAs: [\"matTabNavBar\", \"matTabNav\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c10,\n      ngContentSelectors: _c0,\n      decls: 13,\n      vars: 8,\n      consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\", \"disabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-link-container\", 3, \"keydown\"], [1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-links\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\", \"disabled\"]],\n      template: function MatTabNav_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"button\", 5, 0);\n          i0.ɵɵlistener(\"click\", function MatTabNav_Template_button_click_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n          })(\"mousedown\", function MatTabNav_Template_button_mousedown_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n          })(\"touchend\", function MatTabNav_Template_button_touchend_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(2, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 7, 1);\n          i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handleKeydown($event));\n          });\n          i0.ɵɵelementStart(5, \"div\", 8, 2);\n          i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._onContentChanges());\n          });\n          i0.ɵɵelementStart(7, \"div\", 9, 3);\n          i0.ɵɵprojection(9);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"button\", 10, 4);\n          i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_button_mousedown_10_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n          })(\"click\", function MatTabNav_Template_button_click_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n          })(\"touchend\", function MatTabNav_Template_button_touchend_10_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx._stopInterval());\n          });\n          i0.ɵɵelement(12, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n          i0.ɵɵadvance(10);\n          i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n          i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n        }\n      },\n      dependencies: [MatRipple, CdkObserveContent],\n      styles: [\".mdc-tab{min-width:90px;padding-right:24px;padding-left:24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;margin:0;padding-top:0;padding-bottom:0;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;-webkit-appearance:none;z-index:1}.mdc-tab::-moz-focus-inner{padding:0;border:0}.mdc-tab[hidden]{display:none}.mdc-tab--min-width{flex:0 1 auto}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab__icon{transition:150ms color linear;z-index:2}.mdc-tab--stacked .mdc-tab__content{flex-direction:column;align-items:center;justify-content:center}.mdc-tab--stacked .mdc-tab__text-label{padding-top:6px;padding-bottom:4px}.mdc-tab--active .mdc-tab__text-label,.mdc-tab--active .mdc-tab__icon{transition-delay:100ms}.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label{padding-left:8px;padding-right:0}[dir=rtl] .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label,.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label[dir=rtl]{padding-left:0;padding-right:8px}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator__content--icon{align-self:center;margin:0 auto}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}.mdc-tab-indicator .mdc-tab-indicator__content{transition:250ms transform cubic-bezier(0.4, 0, 0.2, 1)}.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition:150ms opacity linear}.mdc-tab-indicator--active.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition-delay:100ms}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color)}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}._mat-animation-noopable span.mdc-tab-indicator__content,._mat-animation-noopable span.mdc-tab__text-label{transition:none}.mat-mdc-tab-links{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:flex-end}.mat-mdc-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-focus-indicator::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}\"],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNav, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-nav-bar]',\n      exportAs: 'matTabNavBar, matTabNav',\n      host: {\n        '[attr.role]': '_getRole()',\n        'class': 'mat-mdc-tab-nav-bar mat-mdc-tab-header',\n        '[class.mat-mdc-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-mdc-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n        '[class.mat-mdc-tab-nav-bar-stretch-tabs]': 'stretchTabs',\n        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n        '[style.--mat-tab-animation-duration]': 'animationDuration'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      standalone: true,\n      imports: [MatRipple, CdkObserveContent],\n      template: \"<!-- TODO: this also had `mat-elevation-z4`. Figure out what we should do with it. -->\\n<button class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-before\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-mdc-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div class=\\\"mat-mdc-tab-list\\\" #tabList (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-mdc-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- TODO: this also had `mat-elevation-z4`. Figure out what we should do with it. -->\\n<button class=\\\"mat-mdc-tab-header-pagination mat-mdc-tab-header-pagination-after\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-mdc-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-mdc-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\",\n      styles: [\".mdc-tab{min-width:90px;padding-right:24px;padding-left:24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;margin:0;padding-top:0;padding-bottom:0;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;-webkit-appearance:none;z-index:1}.mdc-tab::-moz-focus-inner{padding:0;border:0}.mdc-tab[hidden]{display:none}.mdc-tab--min-width{flex:0 1 auto}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab__icon{transition:150ms color linear;z-index:2}.mdc-tab--stacked .mdc-tab__content{flex-direction:column;align-items:center;justify-content:center}.mdc-tab--stacked .mdc-tab__text-label{padding-top:6px;padding-bottom:4px}.mdc-tab--active .mdc-tab__text-label,.mdc-tab--active .mdc-tab__icon{transition-delay:100ms}.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label{padding-left:8px;padding-right:0}[dir=rtl] .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label,.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label[dir=rtl]{padding-left:0;padding-right:8px}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator__content--icon{align-self:center;margin:0 auto}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}.mdc-tab-indicator .mdc-tab-indicator__content{transition:250ms transform cubic-bezier(0.4, 0, 0.2, 1)}.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition:150ms opacity linear}.mdc-tab-indicator--active.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition-delay:100ms}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color)}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}._mat-animation-noopable span.mdc-tab-indicator__content,._mat-animation-noopable span.mdc-tab__text-label{transition:none}.mat-mdc-tab-links{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:flex-end}.mat-mdc-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-focus-indicator::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i2.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: i3.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_TABS_CONFIG]\n    }]\n  }], {\n    fitInkBarToContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    stretchTabs: [{\n      type: Input,\n      args: [{\n        alias: 'mat-stretch-tabs',\n        transform: booleanAttribute\n      }]\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    _items: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatTabLink), {\n        descendants: true\n      }]\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    tabPanel: [{\n      type: Input\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n/**\n * Link inside a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends InkBarItem {\n  /** Whether the link is active. */\n  get active() {\n    return this._isActive;\n  }\n  set active(value) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink();\n    }\n  }\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled() {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n  }\n  constructor(_tabNavBar, /** @docs-private */elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n    super();\n    this._tabNavBar = _tabNavBar;\n    this.elementRef = elementRef;\n    this._focusMonitor = _focusMonitor;\n    this._destroyed = new Subject();\n    /** Whether the tab link is active or not. */\n    this._isActive = false;\n    /** Whether the tab link is disabled. */\n    this.disabled = false;\n    /** Whether ripples are disabled on the tab link. */\n    this.disableRipple = false;\n    this.tabIndex = 0;\n    /** Unique id for the tab. */\n    this.id = `mat-tab-link-${nextUniqueId++}`;\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n    _tabNavBar._fitInkBarToContent.pipe(takeUntil(this._destroyed)).subscribe(fitInkBarToContent => {\n      this.fitInkBarToContent = fitInkBarToContent;\n    });\n  }\n  /** Focuses the tab link. */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.elementRef);\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    super.ngOnDestroy();\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n  _handleFocus() {\n    // Since we allow navigation through tabbing in the nav bar, we\n    // have to update the focused index whenever the link receives focus.\n    this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === SPACE || event.keyCode === ENTER) {\n      if (this.disabled) {\n        event.preventDefault();\n      } else if (this._tabNavBar.tabPanel) {\n        // Only prevent the default action on space since it can scroll the page.\n        // Don't prevent enter since it can break link navigation.\n        if (event.keyCode === SPACE) {\n          event.preventDefault();\n        }\n        this.elementRef.nativeElement.click();\n      }\n    }\n  }\n  _getAriaControls() {\n    return this._tabNavBar.tabPanel ? this._tabNavBar.tabPanel?.id : this.elementRef.nativeElement.getAttribute('aria-controls');\n  }\n  _getAriaSelected() {\n    if (this._tabNavBar.tabPanel) {\n      return this.active ? 'true' : 'false';\n    } else {\n      return this.elementRef.nativeElement.getAttribute('aria-selected');\n    }\n  }\n  _getAriaCurrent() {\n    return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n  }\n  _getRole() {\n    return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n  }\n  _getTabIndex() {\n    if (this._tabNavBar.tabPanel) {\n      return this._isActive && !this.disabled ? 0 : -1;\n    } else {\n      return this.disabled ? -1 : this.tabIndex;\n    }\n  }\n  static {\n    this.ɵfac = function MatTabLink_Factory(t) {\n      return new (t || MatTabLink)(i0.ɵɵdirectiveInject(MatTabNav), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i4.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabLink,\n      selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n      hostAttrs: [1, \"mdc-tab\", \"mat-mdc-tab-link\", \"mat-mdc-focus-indicator\"],\n      hostVars: 11,\n      hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n            return ctx._handleFocus();\n          })(\"keydown\", function MatTabLink_keydown_HostBindingHandler($event) {\n            return ctx._handleKeydown($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-controls\", ctx._getAriaControls())(\"aria-current\", ctx._getAriaCurrent())(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx._getAriaSelected())(\"id\", ctx.id)(\"tabIndex\", ctx._getTabIndex())(\"role\", ctx._getRole());\n          i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled)(\"mdc-tab--active\", ctx.active);\n        }\n      },\n      inputs: {\n        active: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"active\", \"active\", booleanAttribute],\n        disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n        disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n        tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n        id: \"id\"\n      },\n      exportAs: [\"matTabLink\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c11,\n      ngContentSelectors: _c0,\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"]],\n      template: function MatTabLink_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"span\", 0)(1, \"div\", 1);\n          i0.ɵɵelementStart(2, \"span\", 2)(3, \"span\", 3);\n          i0.ɵɵprojection(4);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"matRippleTrigger\", ctx.elementRef.nativeElement)(\"matRippleDisabled\", ctx.rippleDisabled);\n        }\n      },\n      dependencies: [MatRipple],\n      styles: [\".mat-mdc-tab-link{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;font-family:var(--mat-tab-header-label-text-font);font-size:var(--mat-tab-header-label-text-size);letter-spacing:var(--mat-tab-header-label-text-tracking);line-height:var(--mat-tab-header-label-text-line-height);font-weight:var(--mat-tab-header-label-text-weight)}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color)}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-top-width:var(--mdc-tab-indicator-active-indicator-height)}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab-link:not(.mdc-tab--stacked){height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab-link:not(:disabled).mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):hover.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):focus.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):active.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:disabled.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):hover:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):focus:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):active:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:disabled:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link.mdc-tab{flex-grow:0}.mat-mdc-tab-link:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color)}.mat-mdc-tab-link:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color)}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color)}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab-link.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color)}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color)}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color)}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color)}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color)}.mat-mdc-tab-link.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab-link .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color);display:inline-flex;align-items:center}.mat-mdc-tab-link .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab-link:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab-link.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab-link.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab-link .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header.mat-mdc-tab-nav-bar-stretch-tabs .mat-mdc-tab-link{flex-grow:1}.mat-mdc-tab-link::before{margin:5px}@media(max-width: 599px){.mat-mdc-tab-link{min-width:72px}}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLink, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-link], [matTabLink]',\n      exportAs: 'matTabLink',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'mdc-tab mat-mdc-tab-link mat-mdc-focus-indicator',\n        '[attr.aria-controls]': '_getAriaControls()',\n        '[attr.aria-current]': '_getAriaCurrent()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.id]': 'id',\n        '[attr.tabIndex]': '_getTabIndex()',\n        '[attr.role]': '_getRole()',\n        '[class.mat-mdc-tab-disabled]': 'disabled',\n        '[class.mdc-tab--active]': 'active',\n        '(focus)': '_handleFocus()',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      standalone: true,\n      imports: [MatRipple],\n      template: \"<span class=\\\"mdc-tab__ripple\\\"></span>\\n\\n<div\\n  class=\\\"mat-mdc-tab-ripple\\\"\\n  mat-ripple\\n  [matRippleTrigger]=\\\"elementRef.nativeElement\\\"\\n  [matRippleDisabled]=\\\"rippleDisabled\\\"></div>\\n\\n<span class=\\\"mdc-tab__content\\\">\\n  <span class=\\\"mdc-tab__text-label\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</span>\\n\\n\",\n      styles: [\".mat-mdc-tab-link{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;font-family:var(--mat-tab-header-label-text-font);font-size:var(--mat-tab-header-label-text-size);letter-spacing:var(--mat-tab-header-label-text-tracking);line-height:var(--mat-tab-header-label-text-line-height);font-weight:var(--mat-tab-header-label-text-weight)}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color)}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-top-width:var(--mdc-tab-indicator-active-indicator-height)}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab-link:not(.mdc-tab--stacked){height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab-link:not(:disabled).mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):hover.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):focus.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):active.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:disabled.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):hover:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):focus:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):active:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:disabled:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link.mdc-tab{flex-grow:0}.mat-mdc-tab-link:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color)}.mat-mdc-tab-link:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color)}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color)}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab-link.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color)}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color)}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color)}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color)}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color)}.mat-mdc-tab-link.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab-link .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color);display:inline-flex;align-items:center}.mat-mdc-tab-link .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab-link:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab-link.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab-link.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab-link .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header.mat-mdc-tab-nav-bar-stretch-tabs .mat-mdc-tab-link{flex-grow:1}.mat-mdc-tab-link::before{margin:5px}@media(max-width: 599px){.mat-mdc-tab-link{min-width:72px}}\"]\n    }]\n  }], () => [{\n    type: MatTabNav\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: i4.FocusMonitor\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    active: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n  constructor() {\n    /** Unique id for the tab panel. */\n    this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n  }\n  static {\n    this.ɵfac = function MatTabNavPanel_Factory(t) {\n      return new (t || MatTabNavPanel)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatTabNavPanel,\n      selectors: [[\"mat-tab-nav-panel\"]],\n      hostAttrs: [\"role\", \"tabpanel\", 1, \"mat-mdc-tab-nav-panel\"],\n      hostVars: 2,\n      hostBindings: function MatTabNavPanel_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"aria-labelledby\", ctx._activeTabId)(\"id\", ctx.id);\n        }\n      },\n      inputs: {\n        id: \"id\"\n      },\n      exportAs: [\"matTabNavPanel\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatTabNavPanel_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNavPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-nav-panel',\n      exportAs: 'matTabNavPanel',\n      template: '<ng-content></ng-content>',\n      host: {\n        '[attr.aria-labelledby]': '_activeTabId',\n        '[attr.id]': 'id',\n        'class': 'mat-mdc-tab-nav-panel',\n        'role': 'tabpanel'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\nclass MatTabsModule {\n  static {\n    this.ɵfac = function MatTabsModule_Factory(t) {\n      return new (t || MatTabsModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatTabsModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatTabContent, MatTabLabel, MatTab, MatTabGroup, MatTabNav, MatTabNavPanel, MatTabLink],\n      exports: [MatCommonModule, MatTabContent, MatTabLabel, MatTab, MatTabGroup, MatTabNav, MatTabNavPanel, MatTabLink]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_CONTENT, MAT_TAB_GROUP, MAT_TAB_LABEL, MatInkBar, MatPaginatedTabHeader, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MAT_INK_BAR_POSITIONER_FACTORY, matTabsAnimations };\n","import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild } from \"@angular/core\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ConfigurationUpdateComponentData } from \"../../models/configuration-update-component-data\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { MatSelect, MatSelectChange } from \"@angular/material/select\";\r\nimport { MatSlideToggleChange } from \"@angular/material/slide-toggle\";\r\nimport { ConfigurationsService } from \"../../services/configurations.service\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { PatchConfigurationResponse } from \"../../models/patch-configuration-response\";\r\nimport { IResponse } from \"../../../../shared/models/response\";\r\nimport { UtilityService } from \"../../../../shared/services/utility.service\";\r\n\r\n@Component({\r\n    selector: 'configuration-update',\r\n    templateUrl: './configuration-update.component.html',\r\n    styleUrls: ['./configuration-update.component.css']\r\n})\r\nexport class ConfigurationUpdateComponent implements OnInit, OnDestroy, OnChanges {\r\n    subscriptions: Subscription = new Subscription();\r\n    form!: FormGroup;\r\n    isLoading: boolean = false;\r\n\r\n    @Input() data!: ConfigurationUpdateComponentData;\r\n    @Output() configUpdateEmitter: EventEmitter<any> = new EventEmitter<any>();\r\n    @ViewChild('selectRef') selectRef?: MatSelect;\r\n\r\n    constructor(\r\n        private snackBar: MatSnackBar,\r\n        private formBuilder: FormBuilder,\r\n        private configurationsService: ConfigurationsService,\r\n        private utilityService: UtilityService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.form = this.formBuilder.group({\r\n            allowAnonymousAccess: [this.data.allowAnonymousAccess],\r\n            storeInSeparateFile: [this.data.storeInSeparateFile],\r\n            ignoreOnFileChange: [this.data.storeInSeparateFile ? this.data.ignoreOnFileChange ?? false : null],\r\n            registrationMode: [this.data.registrationMode],\r\n            consumer: this.formBuilder.group({\r\n                requestEncodings: [this.data.consumer.requestEncodings],\r\n                isRedisActive: [this.data.consumer.isRedisActive],\r\n                pollingSettingsWorker: this.formBuilder.group({\r\n                    isActive: [this.data.consumer.pollingSettingsWorker.isActive],\r\n                    startsIn: [this.data.consumer.pollingSettingsWorker.startsIn],\r\n                    period: [this.data.consumer.pollingSettingsWorker.period]\r\n                })\r\n            }),\r\n            provider: this.formBuilder.group({\r\n                redis: this.formBuilder.group({\r\n                    isActive: [this.data.provider.redis.isActive],\r\n                    configuration: [this.data.provider.redis.configuration],\r\n                    channel: [this.data.provider.redis.channel]\r\n                }),\r\n                compressionType: [this.data.provider.compressionType],\r\n                compressionLevel: [this.data.provider.compressionLevel]\r\n            })\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['data'] && this.data) {\r\n            this.form?.patchValue({\r\n                allowAnonymousAccess: this.data.allowAnonymousAccess,\r\n                storeInSeparateFile: this.data.storeInSeparateFile,\r\n                ignoreOnFileChange: this.data.ignoreOnFileChange,\r\n                registrationMode: this.data.registrationMode,\r\n                consumer: {\r\n                    requestEncodings: [...this.data.consumer.requestEncodings],\r\n                    isRedisActive: this.data.consumer.isRedisActive,\r\n                    pollingSettingsWorker: {\r\n                        isActive: this.data.consumer.pollingSettingsWorker.isActive,\r\n                        startsIn: this.data.consumer.pollingSettingsWorker.startsIn,\r\n                        period: this.data.consumer.pollingSettingsWorker.period\r\n                    }\r\n                },\r\n                provider: {\r\n                    redis: {\r\n                        isActive: this.data.provider.redis.isActive,\r\n                        configuration: this.data.provider.redis.configuration,\r\n                        channel: this.data.provider.redis.channel\r\n                    },\r\n                    compressionType: this.data.provider.compressionType,\r\n                    compressionLevel: this.data.provider.compressionLevel\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onSelectionChange(event: MatSelectChange): void {\r\n\r\n        if (this.data.registrationMode === event.value) {\r\n            return;\r\n        }\r\n\r\n        this.isLoading = true;\r\n\r\n        const registrationMode = event.value;\r\n\r\n        let updatedFieldNameToValue: { [key: string]: any } = {};\r\n\r\n        updatedFieldNameToValue['registrationMode'] = registrationMode;\r\n\r\n        const subscription = this.configurationsService.patchConfiguration({\r\n            appId: this.data.appId,\r\n            identifierId: this.data.selectedIdentifierId,\r\n            body: {\r\n                rowVersion: this.data.rowVersion,\r\n                updatedFieldNameToValue\r\n            }\r\n        }).subscribe({\r\n            next: (response) => {\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                this.configUpdateEmitter.emit({\r\n                    formControlName: 'registrationMode',\r\n                    registrationMode: responseData.updatedFieldNameToValue['RegistrationMode'],\r\n                    rowVersion: responseData.rowVersion\r\n                });\r\n\r\n                this.snackBar.open(`Configuration has been successfully updated! A restart is required for the changes to take effect.`, 'Close', {\r\n                    horizontalPosition: 'right',\r\n                    verticalPosition: 'top',\r\n                    duration: 5000\r\n                });\r\n\r\n                this.isLoading = false;\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n                this.form.get('registrationMode')?.setValue(this.data.registrationMode);\r\n\r\n                if (this.selectRef) {\r\n                    this.selectRef.value = this.data.registrationMode;\r\n                }\r\n\r\n                const error = err.error as IResponse<PatchConfigurationResponse>;\r\n\r\n                if (error && error.status === 409 && error.errors) {\r\n                    this.isLoading = false;\r\n\r\n                    this.utilityService.error(error.errors, 3500);\r\n                    this.fetchLatestConfiguration();\r\n                }\r\n                else {\r\n                    this.isLoading = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    onToggleChange(event: MatSlideToggleChange, formControlName: string) {\r\n\r\n        this.isLoading = true;\r\n\r\n        let updatedFieldNameToValue: { [key: string]: any } = {};\r\n\r\n        updatedFieldNameToValue[formControlName] = event.checked;\r\n\r\n        const subscription = this.configurationsService.patchConfiguration({\r\n            appId: this.data.appId,\r\n            identifierId: this.data.selectedIdentifierId,\r\n            body: {\r\n                rowVersion: this.data.rowVersion,\r\n                updatedFieldNameToValue\r\n            }\r\n        }).subscribe({\r\n            next: (response) => {\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                this.data.rowVersion = responseData.rowVersion;\r\n\r\n                switch (formControlName) {\r\n\r\n                    case 'allowAnonymousAccess':\r\n                        this.configUpdateEmitter.emit({\r\n                            formControlName,\r\n                            allowAnonymousAccess: responseData.updatedFieldNameToValue['AllowAnonymousAccess'],\r\n                            rowVersion: responseData.rowVersion\r\n                        });\r\n                        break;\r\n\r\n                    case 'storeInSeparateFile':\r\n                        this.configUpdateEmitter.emit({\r\n                            formControlName,\r\n                            storeInSeparateFile: responseData.updatedFieldNameToValue['StoreInSeparateFile'],\r\n                            rowVersion: responseData.rowVersion\r\n                        });\r\n                        break;\r\n\r\n                    case 'ignoreOnFileChange':\r\n                        this.configUpdateEmitter.emit({\r\n                            formControlName,\r\n                            ignoreOnFileChange: responseData.updatedFieldNameToValue['IgnoreOnFileChange'],\r\n                            rowVersion: responseData.rowVersion\r\n                        });\r\n                        break;\r\n                }\r\n\r\n                this.snackBar.open(`Configuration has been successfully updated! A restart is required for the changes to take effect.`, 'Close', {\r\n                    horizontalPosition: 'right',\r\n                    verticalPosition: 'top',\r\n                    duration: 5000\r\n                });\r\n\r\n                this.isLoading = false;\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n                this.form.get(formControlName)?.setValue(!event.checked);\r\n\r\n                const error = err.error as IResponse<PatchConfigurationResponse>;\r\n\r\n                if (error && error.status === 409 && error.errors) {\r\n                    this.isLoading = false;\r\n\r\n                    this.utilityService.error(error.errors, 3500);\r\n                    this.fetchLatestConfiguration();\r\n                }\r\n                else {\r\n                    this.isLoading = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    saveConsumerSettings(event: Event) {\r\n        event.stopPropagation();\r\n\r\n        this.isLoading = true;\r\n\r\n        let updatedFieldNameToValue: { [key: string]: any } = {};\r\n\r\n        updatedFieldNameToValue['consumer'] = {...this.form.value.consumer};\r\n\r\n        const subscription = this.configurationsService.patchConfiguration({\r\n            appId: this.data.appId,\r\n            identifierId: this.data.selectedIdentifierId,\r\n            body: {\r\n                rowVersion: this.data.rowVersion,\r\n                updatedFieldNameToValue\r\n            }\r\n        }).subscribe({\r\n            next: (response) => {\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                this.data.rowVersion = responseData.rowVersion;\r\n\r\n                this.configUpdateEmitter.emit({\r\n                    formControlName: 'consumer',\r\n                    consumer: responseData.updatedFieldNameToValue['Consumer'],\r\n                    rowVersion: responseData.rowVersion\r\n                });\r\n\r\n                this.snackBar.open(`Configuration has been successfully updated! A restart is required for the changes to take effect.`, 'Close', {\r\n                    horizontalPosition: 'right',\r\n                    verticalPosition: 'top',\r\n                    duration: 5000\r\n                });\r\n\r\n                this.isLoading = false;\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n                this.form.get('consumer')?.setValue({...this.data.consumer});\r\n\r\n                const error = err.error as IResponse<PatchConfigurationResponse>;\r\n\r\n                if (error && error.status === 409 && error.errors) {\r\n                    this.isLoading = false;\r\n\r\n                    this.utilityService.error(error.errors, 3500);\r\n                    this.fetchLatestConfiguration();\r\n                }\r\n                else {\r\n                    this.isLoading = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    saveProviderSettings(event: Event) {\r\n        event.stopPropagation();\r\n\r\n        this.isLoading = true;\r\n\r\n        let updatedFieldNameToValue: { [key: string]: any } = {};\r\n\r\n        updatedFieldNameToValue['provider'] = {...this.form.value.provider};\r\n\r\n        const subscription = this.configurationsService.patchConfiguration({\r\n            appId: this.data.appId,\r\n            identifierId: this.data.selectedIdentifierId,\r\n            body: {\r\n                rowVersion: this.data.rowVersion,\r\n                updatedFieldNameToValue\r\n            }\r\n        }).subscribe({\r\n            next: (response) => {\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                this.data.rowVersion = responseData.rowVersion;\r\n\r\n                this.configUpdateEmitter.emit({\r\n                    formControlName: 'provider',\r\n                    provider: responseData.updatedFieldNameToValue['Provider'],\r\n                    rowVersion: responseData.rowVersion\r\n                });\r\n\r\n                this.snackBar.open(`Configuration has been successfully updated! A restart is required for the changes to take effect.`, 'Close', {\r\n                    horizontalPosition: 'right',\r\n                    verticalPosition: 'top',\r\n                    duration: 5000\r\n                });\r\n\r\n                this.isLoading = false;\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n                this.form.get('provider')?.setValue({...this.data.provider});\r\n\r\n                const error = err.error as IResponse<PatchConfigurationResponse>;\r\n\r\n                if (error && error.status === 409 && error.errors) {\r\n                    this.isLoading = false;\r\n\r\n                    this.utilityService.error(error.errors, 3500);\r\n                    this.fetchLatestConfiguration();\r\n                }\r\n                else {\r\n                    this.isLoading = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    fetchLatestConfiguration() {\r\n        const subscription = this.configurationsService.getConfigurationByAppAndIdentifier({\r\n            appId: this.data.appId,\r\n            identifierId: this.data.selectedIdentifierId\r\n        }).subscribe({\r\n            next: (response) => {\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return;\r\n                }\r\n\r\n                this.configUpdateEmitter.emit({\r\n                    allowAnonymousAccess: responseData.allowAnonymousAccess,\r\n                    storeInSeparateFile: responseData.storeInSeparateFile,\r\n                    ignoreOnFileChange: responseData.ignoreOnFileChange,\r\n                    registrationMode: responseData.registrationMode,\r\n                    consumer: responseData.consumer,\r\n                    provider: responseData.provider,\r\n                    rowVersion: responseData.rowVersion\r\n                });\r\n\r\n                this.isLoading = false;\r\n            },\r\n            error: (err) => {\r\n                this.isLoading = false;\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n}","<div class=\"loading-container\" *ngIf=\"isLoading\">\r\n    <div class=\"mat-bg-primary position-absolute rounded-circle app-icon-animation\"><img class=\"app-icon bg-white\"></div>\r\n    <div class=\"loading-spinner\"></div>\r\n</div>\r\n\r\n<form [formGroup]=\"form\">\r\n\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>Registration Mode <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n            matTooltip=\"Specifies how single settings file ( separate setting files should be configured its own setting or setting class ) can be registered and resolved within the service. Supports resolving via configuration options or as a singleton service.\"></mat-icon></mat-label>\r\n        <mat-select formControlName=\"registrationMode\" (selectionChange)=\"onSelectionChange($event)\" #selectRef>\r\n            <mat-option class=\"custom-option\" [value]=\"1\">\r\n                <span>Configure</span>\r\n                <span class=\"spacer\"></span>\r\n                <button color=\"accent\" mat-icon-button matTooltipPosition=\"left\"\r\n                    matTooltip=\"Settings can be resolved through configuration options interfaces, such as IOptions<T>, IOptionsSnapshot<T> and IOptionsMonitor<T>.\">\r\n                    <mat-icon matIconPosition=\"right\" fontIcon=\"info\"></mat-icon>\r\n                </button>\r\n            </mat-option>\r\n            <mat-option class=\"custom-option\" [value]=\"2\">\r\n                <span>Singleton</span>\r\n                <span class=\"spacer\"></span>\r\n                <button color=\"accent\" mat-icon-button matTooltipPosition=\"left\"\r\n                    matTooltip=\"Settings can be resolved directly through its own class as a singleton instance.\">\r\n                    <mat-icon matIconPosition=\"right\" fontIcon=\"info\"></mat-icon>\r\n                </button>\r\n            </mat-option>\r\n            <mat-option class=\"custom-option\" [value]=\"3\">\r\n                <span>Both</span>\r\n                <span class=\"spacer\"></span>\r\n                <button color=\"accent\" mat-icon-button matTooltipPosition=\"left\"\r\n                    matTooltip=\"Settings can be resolved both through singleton instances and through configuration options interfaces.\">\r\n                    <mat-icon matIconPosition=\"right\" fontIcon=\"info\"></mat-icon>\r\n                </button>\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n    <div class=\"d-flex px-3\">\r\n        <div class=\"mb-2 mr-3 d-flex align-items-center\">\r\n            <span class=\"field-label-text\">Allow Anonymous Access</span>\r\n            <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                matTooltip=\"Indicates whether anonymous access is allowed. When disabled, its typically forces to pre-registration of the app or user.\"></mat-icon>\r\n            <mat-slide-toggle labelPosition=\"before\" formControlName=\"allowAnonymousAccess\"\r\n                (change)=\"onToggleChange($event, 'allowAnonymousAccess')\"></mat-slide-toggle>\r\n        </div>\r\n        <div class=\"mb-2 mr-3 d-flex align-items-center\">\r\n            <span class=\"field-label-text\">Store In Separate File (global)</span>\r\n            <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                [matTooltip]=\"'Indicates whether the settings should be stored in a separate file \\'settings-generated.*.json\\'. If not, it will be stored in the default \\'settings-generated.json\\' file.'\"></mat-icon>\r\n            <mat-slide-toggle labelPosition=\"before\" formControlName=\"storeInSeparateFile\"\r\n                (change)=\"onToggleChange($event, 'storeInSeparateFile')\"></mat-slide-toggle>\r\n        </div>\r\n        <div class=\"mb-2 d-flex align-items-center\">\r\n            <span class=\"field-label-text\">Ignore On File Change (global)</span>\r\n            <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                matTooltip=\"Indicates whether changes to the file should be ignored when the file is modified.\"></mat-icon>\r\n            <mat-slide-toggle labelPosition=\"before\" formControlName=\"ignoreOnFileChange\"\r\n                (change)=\"onToggleChange($event, 'ignoreOnFileChange')\"></mat-slide-toggle>\r\n        </div>\r\n    </div>\r\n\r\n    <mat-accordion multi=\"true\">\r\n        <mat-expansion-panel expanded=\"true\">\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n                Consumer Settings\r\n                <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\" matTooltip=\"It is only used when the instance is running in consumer mode.\"></mat-icon>\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n                <span class=\"spacer\"></span>\r\n                <button color=\"primary\" mat-icon-button class=\"icon-mini\" matTooltip=\"Save\" (click)=\"saveConsumerSettings($event)\">\r\n                    <mat-icon>save</mat-icon>\r\n                </button>\r\n            </mat-panel-description>\r\n        </mat-expansion-panel-header>    \r\n\r\n        <mat-accordion multi=\"true\" formGroupName=\"consumer\">\r\n            <mat-expansion-panel expanded=\"false\" formGroupName=\"pollingSettingsWorker\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        Polling Settings Worker\r\n                    </mat-panel-title>\r\n                    <mat-panel-description>\r\n                        <span class=\"spacer\"></span>\r\n                        <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                        matTooltip=\"Represents a worker that handles polling for the latest settings within a specified period.\"></mat-icon>\r\n                    </mat-panel-description>\r\n                </mat-expansion-panel-header>\r\n\r\n                <div class=\"mb-2 mr-3 d-flex align-items-center\">\r\n                    <span class=\"field-label-text\">Is Active</span>\r\n                    <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                        matTooltip=\"Indicates whether anonymous access is allowed. Changes require a restart.\"></mat-icon>\r\n                    <mat-slide-toggle labelPosition=\"before\" formControlName=\"isActive\"></mat-slide-toggle>\r\n                </div>\r\n                <mat-form-field>\r\n                    <mat-label>Starts In <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                        matTooltip=\"The time span to wait before starting the polling.\"></mat-icon></mat-label>\r\n                    <input matInput formControlName=\"startsIn\">\r\n                    <mat-hint>Format: HH:mm:ss</mat-hint>\r\n                </mat-form-field>\r\n                <mat-form-field>\r\n                    <mat-label>Period <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                        matTooltip=\"The time span between polling period.\"></mat-icon></mat-label>\r\n                    <input matInput formControlName=\"period\">\r\n                    <mat-hint>Format: HH:mm:ss</mat-hint>\r\n                </mat-form-field>\r\n\r\n            </mat-expansion-panel>\r\n\r\n            <mat-expansion-panel expanded=\"false\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        Others\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n\r\n                <mat-form-field>\r\n                    <mat-label>Request Encodings</mat-label>\r\n                    <mat-select formControlName=\"requestEncodings\" multiple>\r\n                        <mat-option [value]=\"0\">\r\n                            <span>None</span>\r\n                        </mat-option>\r\n                        <mat-option [value]=\"1\">\r\n                            <span>Snappy</span>\r\n                        </mat-option>\r\n                        <mat-option [value]=\"2\">\r\n                            <span>Deflate</span>\r\n                        </mat-option>\r\n                        <mat-option [value]=\"3\">\r\n                            <span>Gzip</span>\r\n                        </mat-option>\r\n                        <mat-option [value]=\"4\">\r\n                            <span>Zstd</span>\r\n                        </mat-option>\r\n                        <mat-option [value]=\"5\">\r\n                            <span>Brotli</span>\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <mat-hint>The consumer can request its desired encodings, but the ultimate decision is made by the provider.</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <div class=\"mb-2 mr-3 d-flex align-items-center\">\r\n                    <span class=\"field-label-text\">Is Redis Active</span>\r\n                    <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                        matTooltip=\"The flag indicates whether Redis is active for the consumer configuration. Redis connection details sent by the provider.\"></mat-icon>\r\n                    <mat-slide-toggle labelPosition=\"before\" formControlName=\"isRedisActive\"></mat-slide-toggle>\r\n                </div>\r\n                \r\n            </mat-expansion-panel>\r\n\r\n        </mat-accordion>\r\n        </mat-expansion-panel>\r\n\r\n        <mat-expansion-panel expanded=\"true\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                    Provider Settings\r\n                    <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\" matTooltip=\"It is only used when the instance is running in provider mode.\"></mat-icon>\r\n                </mat-panel-title>\r\n                <mat-panel-description>\r\n                    <span class=\"spacer\"></span>\r\n                    <button color=\"primary\" mat-icon-button class=\"icon-mini\" matTooltip=\"Save\" (click)=\"saveProviderSettings($event)\">\r\n                        <mat-icon>save</mat-icon>\r\n                    </button>\r\n                </mat-panel-description>\r\n            </mat-expansion-panel-header>\r\n\r\n            <mat-accordion multi=\"true\" formGroupName=\"provider\">\r\n                <mat-expansion-panel expanded=\"false\" formGroupName=\"redis\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title>\r\n                            Redis Settings\r\n                        </mat-panel-title>\r\n                       \r\n                    </mat-expansion-panel-header>\r\n                    <div class=\"mb-2 mr-3 d-flex align-items-center\">\r\n                        <span class=\"field-label-text\">Is Active</span>\r\n                        <mat-slide-toggle labelPosition=\"before\" formControlName=\"isActive\"></mat-slide-toggle>\r\n                    </div>\r\n                    <mat-form-field>\r\n                        <mat-label>Configuration <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                            matTooltip=\"The configuration string for Redis.\"></mat-icon></mat-label>\r\n                        <input matInput formControlName=\"configuration\">\r\n                        <mat-hint>e.g. localhost:6379,password=******,abortConnect=false</mat-hint>\r\n                    </mat-form-field>\r\n                    <mat-form-field>\r\n                        <mat-label>Channel <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                            matTooltip=\"The channel used to send or receive messages related to settings such as notifiying data change.\"></mat-icon></mat-label>\r\n                        <input matInput formControlName=\"channel\">\r\n                    </mat-form-field>\r\n                </mat-expansion-panel>\r\n                <mat-expansion-panel expanded=\"false\">\r\n                    <mat-expansion-panel-header>\r\n                        <mat-panel-title>\r\n                            Others\r\n                        </mat-panel-title>\r\n                    </mat-expansion-panel-header>\r\n\r\n                    <mat-form-field>\r\n                        <mat-label>Compression Type <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                            matTooltip=\"Defines which compression type is applied when storing the setting data.\"></mat-icon></mat-label>\r\n                        <mat-select formControlName=\"compressionType\">\r\n                            <mat-option class=\"custom-option\" [value]=\"0\">\r\n                                <span>None</span>\r\n                            </mat-option>\r\n                            <mat-option class=\"custom-option\" [value]=\"1\">\r\n                                <span>Snappy</span>\r\n                            </mat-option>\r\n                            <mat-option class=\"custom-option\" [value]=\"2\">\r\n                                <span>Deflate</span>\r\n                            </mat-option>\r\n                            <mat-option class=\"custom-option\" [value]=\"3\">\r\n                                <span>Gzip</span>\r\n                            </mat-option>\r\n                            <mat-option class=\"custom-option\" [value]=\"4\">\r\n                                <span>Zstd</span>\r\n                            </mat-option>\r\n                            <mat-option class=\"custom-option\" [value]=\"5\">\r\n                                <span>Brotli</span>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <mat-label>Compression Level <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n                            matTooltip=\"Defines which compression level is applied when storing the setting data.\"></mat-icon></mat-label>\r\n                        <mat-select formControlName=\"compressionLevel\">\r\n                            <mat-option class=\"custom-option\" [value]=\"0\">\r\n                                <span>Optimal</span>\r\n                            </mat-option>\r\n                            <mat-option class=\"custom-option\" [value]=\"1\">\r\n                                <span>Fastest</span>\r\n                            </mat-option>\r\n                            <mat-option class=\"custom-option\" [value]=\"2\">\r\n                                <span>NoCompression</span>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </mat-expansion-panel>\r\n\r\n            </mat-accordion>\r\n        </mat-expansion-panel>\r\n    </mat-accordion>\r\n\r\n</form>","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { ConfirmationDialogComponent } from \"../../../../shared/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { AppIdentifierMappingsService, UpdateAppIdentifierMappingSortOrderResponse } from \"../../../../shared/services/app-identifier-mappings.service\";\r\nimport { AppsService } from \"../../services/apps.service\";\r\nimport { DummyComponentService } from \"../../../../shared/components/dummy/dummy-component.service\";\r\nimport { config, Observable, of, Subscription, switchMap, tap } from \"rxjs\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { APP_VIEW_ROUTES, APP_VIEW_ROUTES_TYPE } from \"../../app-routes\";\r\nimport { DummyComponentServiceModel } from \"../../../../shared/components/dummy/dummy-component-service.model\";\r\nimport { AppViewService } from \"../../services/app-view.service\";\r\nimport { AppViewComponentModel } from \"../../models/app-view-component.model\";\r\nimport { InstanceListComponentData } from \"../../../instance/models/instance-list-component-data\";\r\nimport { SettingListComponentData } from \"../../../setting/models/setting-list-component-data\";\r\nimport { CopySettingToIdentifierEmitData } from \"../../../setting/models/copy-setting-to-identifier-emit-data\";\r\nimport { IResponse } from \"../../../../shared/models/response\";\r\nimport { GetGroupedAppDataResponse } from \"../../models/get-grouped-app-data-response\";\r\nimport { GetGroupedAppDataResponseIdentifier } from \"../../models/get-grouped-app-data-response-identifier\";\r\nimport { GetGroupedAppDataResponseSetting } from \"../../models/get-grouped-app-data-response-setting\";\r\nimport { SettingData } from \"../../models/setting-data.model\";\r\nimport { AppIdentifierAddComponentModel, AppIdentifierAddComponentReturnModel, IdentifierMappingCreateComponent } from \"../../../setting/components/identifier-mapping-create/identifier-mapping-create.component\";\r\nimport { GetIdentifiersResponseIdentifier } from \"../../../identifier/models/get-identifiers-response-identifier\";\r\nimport { CopyAppSettingToComponentReturnModel, CopySettingToIdentifierComponentModel, SettingCopyToComponent } from \"../../../setting/components/setting-copy-to/setting-copy-to.component\";\r\nimport { GetGroupedAppDataResponseInstance } from \"../../models/get-grouped-app-data-response-instance\";\r\nimport { InstanceData } from \"../../models/instance-data.model\";\r\nimport { UtilityService } from \"../../../../shared/services/utility.service\";\r\nimport { SettingsService } from \"../../../setting/services/setting.service\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ConfigurationUpdateComponentData } from \"../../../configuration/models/configuration-update-component-data\";\r\nimport { GetGroupedAppDataResponseConfiguration } from \"../../models/get-grouped-app-data-response-configuration\";\r\nimport { ConfigurationsService } from \"../../../configuration/services/configurations.service\";\r\n\r\n@Component({\r\n    templateUrl: './app-view.component.html',\r\n    styleUrls: ['./app-view.component.css']\r\n})\r\nexport class AppViewComponent implements OnInit, OnDestroy {\r\n\r\n    appData: GetGroupedAppDataResponse = {\r\n        identifierInfo: { minSortOrder: 0, maxSortOrder: 0, mappingMinSortOrder: 0, mappingMaxSortOrder: 0 },\r\n        identifierIdToIdentifier: {},\r\n        identifierIdToConfiguration: {},\r\n        identifierIdToSettings: {},\r\n        identifierIdToInstances: {}\r\n    };\r\n\r\n    identifierIdToSettingsDataMap: { [key: string]: SettingData[] } = {};\r\n    identifierIdToInstancesDataMap: { [key: string]: InstanceData[] } = {};\r\n\r\n    selectedIdentifierId: string = '';\r\n    previousSelectedIdentifierId: string = '';\r\n\r\n    tabIndex?: ViewTab;\r\n    isFullScreen: boolean = false;\r\n    settingListComponentData?: SettingListComponentData;\r\n    selectedInstanceId?: string;\r\n    appInstanceListComponentData?: InstanceListComponentData;\r\n    configurationUpdateComponentData?: ConfigurationUpdateComponentData;\r\n    isLoaded: boolean = false;\r\n\r\n    private subscriptions = new Subscription();\r\n\r\n    constructor(public dialogRef: MatDialogRef<AppViewComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: AppViewComponentModel,\r\n        private appsService: AppsService,\r\n        private configurationsService: ConfigurationsService,\r\n        private settingsService: SettingsService,\r\n        private appIdentifierMappingsService: AppIdentifierMappingsService,\r\n        private dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private dummyComponentService: DummyComponentService,\r\n        private appViewService: AppViewService,\r\n        private utilityService: UtilityService,\r\n        private route: ActivatedRoute,\r\n        private router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.handleRouting(this.loadData$());\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.appViewService.emitSettingView(undefined);\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    get identifiers() {\r\n        return this.sortIdentifiers(Object.values(this.appData.identifierIdToIdentifier));\r\n    }\r\n\r\n    loadDefaultBehavior() {\r\n        const identifiers = this.identifiers;\r\n\r\n        if (identifiers.length == 0) {\r\n            this.createIdentifier('Add an identifier to start');\r\n            return;\r\n        }\r\n\r\n        const identifierId = identifiers[0].id;\r\n\r\n        switch (this.tabIndex) {\r\n            case ViewTab.Configuration:\r\n\r\n\r\n                setTimeout(() => {\r\n                    this.router.navigate(['./apps', this.data.appSlug, identifierId, 'configuration'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                }, 150);\r\n\r\n                break;\r\n\r\n            case ViewTab.Instances:\r\n\r\n                setTimeout(() => {\r\n                    this.router.navigate(['./apps', this.data.appSlug, identifierId, 'instances'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                }, 150);\r\n\r\n                break;\r\n\r\n            case ViewTab.Settings:\r\n\r\n                setTimeout(() => {\r\n                    this.router.navigate(['./apps', this.data.appSlug, identifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                }, 150);\r\n\r\n                break;\r\n        }\r\n\r\n        this.changeIdentifier(identifierId);\r\n    }\r\n\r\n    viewNewIdentifierMapping() {\r\n        const viewNewIdentifierMappingObservable = this.loadData$().pipe(tap(() => {\r\n            this.createIdentifier();\r\n        }));\r\n        this.subscriptions.add(viewNewIdentifierMappingObservable.subscribe());\r\n    }\r\n\r\n    viewSetting(event: DummyComponentServiceModel) {\r\n        this.tabIndex = ViewTab.Settings;\r\n\r\n        const viewSettingUpdateParamSubscription = event.activatedRoute.paramMap.subscribe(params => {\r\n\r\n            const identifierId = params.get('identifierId');\r\n\r\n            if (!identifierId) {\r\n                this.loadDefaultBehavior();\r\n                this.router.navigate(['./apps', this.data.appSlug], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n\r\n            const settingId = params.get('settingId');\r\n\r\n            if (!settingId) {\r\n                this.router.navigate(['./apps', this.data.appSlug, identifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n\r\n            const observable = this.loadData$().pipe(tap(() => {\r\n                if (!(identifierId in this.appData.identifierIdToSettings)) {\r\n                    this.loadDefaultBehavior();\r\n                    return;\r\n                }\r\n\r\n                const setting = this.appData.identifierIdToSettings[identifierId].find(s => s.id === settingId);\r\n\r\n                if (setting) {\r\n                    this.appViewService.emitSettingView({\r\n                        selectedSettingId: setting.id,\r\n                        settingViewType: 'viewSetting'\r\n                    });\r\n                } else {\r\n                    this.router.navigate(['./apps', this.data.appSlug, identifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                }\r\n\r\n                this.changeIdentifier(identifierId);\r\n            }));\r\n\r\n            this.subscriptions.add(observable.subscribe());\r\n        });\r\n\r\n        this.subscriptions.add(viewSettingUpdateParamSubscription);\r\n    }\r\n\r\n    viewCreateSetting(event: DummyComponentServiceModel) {\r\n        this.tabIndex = ViewTab.Settings;\r\n        const subscription = event.activatedRoute.paramMap.subscribe(params => {\r\n            const identifierId = params.get('identifierId');\r\n            if (!identifierId) {\r\n                this.loadDefaultBehavior();\r\n                this.router.navigate(['./apps', this.data.appSlug], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const observable = this.loadData$().pipe(tap(() => {\r\n                if (!(identifierId in this.appData.identifierIdToSettings)) {\r\n                    this.loadDefaultBehavior();\r\n                    return;\r\n                }\r\n                this.appViewService.emitSettingView({\r\n                    selectedSettingId: this.appViewService.settingView?.selectedSettingId,\r\n                    settingViewType: 'viewCreateSetting'\r\n                });\r\n                this.changeIdentifier(identifierId);\r\n            }));\r\n            this.subscriptions.add(observable.subscribe());\r\n        });\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    viewUpdateSetting(event: DummyComponentServiceModel) {\r\n        this.tabIndex = ViewTab.Settings;\r\n        const subscription = event.activatedRoute.paramMap.subscribe(params => {\r\n            const identifierId = params.get('identifierId');\r\n            if (!identifierId) {\r\n                this.loadDefaultBehavior();\r\n                this.router.navigate(['./apps', this.data.appSlug], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const settingId = params.get('settingId');\r\n            if (!settingId) {\r\n                this.router.navigate(['./apps', this.data.appSlug, identifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const observable = this.loadData$().pipe(tap(() => {\r\n                const settings = this.appData.identifierIdToSettings[identifierId];\r\n                if (!settings) {\r\n                    this.loadDefaultBehavior();\r\n                    return;\r\n                }\r\n\r\n                const setting = settings.find(s => s.id === settingId);\r\n\r\n                if (!setting) {\r\n                    const internalSubscription = this.updateSetting(settingId)?.subscribe((response) => {\r\n\r\n                        if (response) {\r\n                            this.appViewService.emitSettingView({\r\n                                settingViewType: 'viewUpdateSetting',\r\n                                selectedSettingId: settingId\r\n                            });\r\n                            this.changeIdentifier(identifierId);\r\n                        }\r\n                        else {\r\n                            this.loadDefaultBehavior();\r\n                        }\r\n                    });\r\n\r\n                    if (internalSubscription) {\r\n                        this.subscriptions.add(internalSubscription);\r\n                    }\r\n                } else {\r\n                    this.appViewService.emitSettingView({\r\n                        settingViewType: 'viewUpdateSetting',\r\n                        selectedSettingId: setting.id\r\n                    });\r\n                    this.changeIdentifier(identifierId);\r\n                }\r\n            }));\r\n            this.subscriptions.add(observable.subscribe());\r\n        });\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    viewCopySettingTo(event: DummyComponentServiceModel) {\r\n        this.tabIndex = ViewTab.Settings;\r\n        const subscription = event.activatedRoute.paramMap.subscribe(params => {\r\n            const identifierId = params.get('identifierId');\r\n            if (!identifierId) {\r\n                this.loadDefaultBehavior();\r\n                this.router.navigate(['./apps', this.data.appSlug], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const settingId = params.get('settingId');\r\n            if (!settingId) {\r\n                this.router.navigate(['./apps', this.data.appSlug, identifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const observable = this.loadData$().pipe(tap(() => {\r\n                const settings = this.appData.identifierIdToSettings[identifierId];\r\n                if (!settings) {\r\n                    this.loadDefaultBehavior();\r\n                    return;\r\n                }\r\n                let setting = settings.find(s => s.id === settingId);\r\n                if (!setting) {\r\n                    const settingInDataList = this.settingListComponentData?.settingDataList.find(s => s.settingId === settingId);\r\n                    if (settingInDataList) {\r\n                        setting = {\r\n                            id: settingId,\r\n                            computedIdentifier: settingInDataList.computedIdentifier,\r\n                            class: {\r\n                                id: settingInDataList.classId,\r\n                                namespace: settingInDataList.classNamespace,\r\n                                name: settingInDataList.className,\r\n                                fullName: settingInDataList.classFullName,\r\n                                rowVersion: ''\r\n                            },\r\n                            dataValidationDisabled: !settingInDataList.dataValidationEnabled,\r\n                            dataRestored: settingInDataList.dataRestored,\r\n                            version: settingInDataList.version,\r\n                            rowVersion: '',\r\n                            storeInSeparateFile: settingInDataList.storeInSeparateFile,\r\n                            ignoreOnFileChange: settingInDataList.ignoreOnFileChange,\r\n                            registrationMode: settingInDataList.registrationMode\r\n                        };\r\n                        settings.push(setting);\r\n                    } else {\r\n                        this.loadDefaultBehavior();\r\n                        return;\r\n                    }\r\n                }\r\n                this.appViewService.emitSettingView({\r\n                    settingViewType: 'viewCopySettingTo',\r\n                    selectedSettingId: setting.id\r\n                });\r\n                this.changeIdentifier(identifierId);\r\n            }));\r\n            this.subscriptions.add(observable.subscribe());\r\n        });\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    viewSettingHistories(event: DummyComponentServiceModel) {\r\n        this.tabIndex = ViewTab.Settings;\r\n        const subscription = event.activatedRoute.paramMap.subscribe(params => {\r\n            const identifierId = params.get('identifierId');\r\n            if (!identifierId) {\r\n                this.loadDefaultBehavior();\r\n                this.router.navigate(['./apps', this.data.appSlug], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const settingId = params.get('settingId');\r\n            if (!settingId) {\r\n                this.router.navigate(['./apps', this.data.appSlug, identifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const observable = this.loadData$().pipe(tap(() => {\r\n                const settings = this.appData.identifierIdToSettings[identifierId];\r\n                if (!settings) {\r\n                    this.loadDefaultBehavior();\r\n                    return;\r\n                }\r\n                const setting = settings.find(s => s.id === settingId);\r\n                if (!setting) {\r\n                    this.loadDefaultBehavior();\r\n                    return;\r\n                }\r\n                this.appViewService.emitSettingView({\r\n                    settingViewType: 'viewSettingHistories',\r\n                    selectedSettingId: setting.id\r\n                });\r\n                this.changeIdentifier(identifierId);\r\n            }));\r\n            this.subscriptions.add(observable.subscribe());\r\n        });\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    viewSettingHistory(event: DummyComponentServiceModel) {\r\n        this.tabIndex = ViewTab.Settings;\r\n        const subscription = event.activatedRoute.paramMap.subscribe(params => {\r\n            const identifierId = params.get('identifierId');\r\n            if (!identifierId) {\r\n                this.loadDefaultBehavior();\r\n                this.router.navigate(['./apps', this.data.appSlug], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const settingId = params.get('settingId');\r\n            if (!settingId) {\r\n                this.router.navigate(['./apps', this.data.appSlug, identifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            var historyId = params.get('historyId');\r\n            if (!historyId) {\r\n                this.router.navigate(['./apps', this.data.appSlug, identifierId, 'settings', settingId, 'histories'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const observable = this.loadData$().pipe(tap(() => {\r\n                const settings = this.appData.identifierIdToSettings[identifierId];\r\n                if (!settings) {\r\n                    this.loadDefaultBehavior();\r\n                    return;\r\n                }\r\n                const setting = settings.find(s => s.id === settingId);\r\n                if (!setting) {\r\n                    this.loadDefaultBehavior();\r\n                    return;\r\n                }\r\n                this.appViewService.emitSettingView({\r\n                    settingViewType: 'viewSettingHistory',\r\n                    selectedSettingId: setting.id,\r\n                    selectedHistoryId: historyId!\r\n                });\r\n                this.changeIdentifier(identifierId);\r\n            }));\r\n            this.subscriptions.add(observable.subscribe());\r\n        });\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    viewInstance(event: DummyComponentServiceModel) {\r\n        this.tabIndex = ViewTab.Instances;\r\n        const subscription = event.activatedRoute.paramMap.subscribe(params => {\r\n            const identifierId = params.get('identifierId');\r\n            if (!identifierId) { // Fallback to route and subscribe then loaddefualt.\r\n                this.loadDefaultBehavior();\r\n                // this.router.navigate(['./apps', this.data.clientId, 'instances'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const instanceId = params.get('instanceId');\r\n            if (!instanceId) {\r\n                this.loadDefaultBehavior();\r\n                // this.router.navigate(['./apps', this.data.clientId, identifierId, 'instances'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const viewSettingsObservable = this.loadData$().pipe(tap(() => {\r\n                const settings = this.appData.identifierIdToSettings[identifierId];\r\n                if (!settings) {\r\n                    this.loadDefaultBehavior();\r\n                    return;\r\n                }\r\n                this.selectedInstanceId = instanceId;\r\n                this.tabIndex = ViewTab.Instances;\r\n                // Notify instanceId to open\r\n                this.changeIdentifier(identifierId);\r\n            }));\r\n            this.subscriptions.add(viewSettingsObservable.subscribe());\r\n        });\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    viewTabs(event: DummyComponentServiceModel, viewTab: ViewTab) {\r\n        const subscription = event.activatedRoute.paramMap.subscribe(params => {\r\n            this.tabIndex = viewTab;\r\n            const identifierId = params.get('identifierId');\r\n            if (!identifierId) {\r\n                this.loadDefaultSubscription();\r\n                // this.router.navigate(['./apps', this.data.appSlug], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                return;\r\n            }\r\n            const viewSettingsObservable = this.loadData$().pipe(tap(() => {\r\n                const settings = this.appData.identifierIdToSettings[identifierId];\r\n                if (!settings) {\r\n                    this.loadDefaultBehavior();\r\n                    this.router.navigate(['./apps', this.data.appSlug], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                    return;\r\n                }\r\n                this.tabIndex = viewTab;\r\n                this.changeIdentifier(identifierId);\r\n            }));\r\n            this.subscriptions.add(viewSettingsObservable.subscribe());\r\n        });\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    loadDefaultSubscription() {\r\n        const subscription = this.loadData$().pipe(tap(() => {\r\n            this.loadDefaultBehavior();\r\n        })).subscribe();\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    handleRouting(loadData$: Observable<IResponse<GetGroupedAppDataResponse> | null>): void {\r\n        const subscription = this.dummyComponentService.event$.subscribe(event => {\r\n            setTimeout(() => {\r\n                if (event === undefined) {\r\n                    if (!this.isLoaded) {\r\n                        this.loadDefaultSubscription();\r\n                    }\r\n                    return;\r\n                }\r\n                switch (event.path) {\r\n                    case APP_VIEW_ROUTES.viewNewIdentifierMapping:\r\n                        this.viewNewIdentifierMapping();\r\n                        break;\r\n                    case APP_VIEW_ROUTES.viewSettings:\r\n                    case APP_VIEW_ROUTES.viewSettings2:\r\n                        this.viewTabs(event, ViewTab.Settings);\r\n                        break;\r\n                    case APP_VIEW_ROUTES.viewSetting:\r\n                        this.viewSetting(event);\r\n                        break;\r\n                    case APP_VIEW_ROUTES.viewCreateSetting:\r\n                        this.viewCreateSetting(event);\r\n                        break;\r\n                    case APP_VIEW_ROUTES.viewUpdateSetting:\r\n                        this.viewUpdateSetting(event);\r\n                        break;\r\n                    case APP_VIEW_ROUTES.viewCopySettingTo:\r\n                        this.viewCopySettingTo(event);\r\n                        break;\r\n                    case APP_VIEW_ROUTES.viewSettingHistories:\r\n                        this.viewSettingHistories(event);\r\n                        break;\r\n                    case APP_VIEW_ROUTES.viewSettingHistory:\r\n                        this.viewSettingHistory(event);\r\n                        break;\r\n                    case APP_VIEW_ROUTES.viewInstances:\r\n                    case APP_VIEW_ROUTES.viewInstances2:\r\n                        this.viewTabs(event, ViewTab.Instances);\r\n                        break;\r\n                    case APP_VIEW_ROUTES.viewInstance:\r\n                        this.viewInstance(event);\r\n                        break;\r\n                    case APP_VIEW_ROUTES.viewConfiguration:\r\n                        this.viewTabs(event, ViewTab.Configuration);\r\n                        break;\r\n                    default:\r\n                        this.loadDefaultSubscription();\r\n                        break;\r\n                }\r\n            }, 0);\r\n        });\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    onIdentifierChanged(event: any) {\r\n\r\n        this.previousSelectedIdentifierId = this.selectedIdentifierId;\r\n\r\n        if (!event.source.value) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (event.isUserInput && this.selectedIdentifierId !== event.source.value) {\r\n\r\n            this.appViewService.emitSettingView(undefined);\r\n\r\n            if (!(event.source.value in this.appData.identifierIdToSettings)) {\r\n                return;\r\n            }\r\n\r\n            this.changeIdentifier(event.source.value);\r\n\r\n            const settingView = this.appViewService.settingView;\r\n\r\n            if (settingView) {\r\n\r\n                switch (settingView.settingViewType) {\r\n                    case 'viewCreateSetting':\r\n                        this.router.navigate(['./apps', this.data.appSlug, event.source.value, 'settings', 'new'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                        return;\r\n                }\r\n\r\n                const selectedSettingId = settingView.selectedSettingId;\r\n\r\n                if (selectedSettingId) {\r\n                    switch (this.appViewService.settingView!.settingViewType) {\r\n                        case 'viewUpdateSetting':\r\n                            this.router.navigate(['./apps', this.data.appSlug, event.source.value, 'settings', selectedSettingId, 'update'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                            return;\r\n                        case 'viewCopySettingTo':\r\n                            this.router.navigate(['./apps', this.data.appSlug, event.source.value, 'settings', selectedSettingId, 'copyTo'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                            return;\r\n                        case 'viewSettingHistories':\r\n                            this.router.navigate(['./apps', this.data.appSlug, event.source.value, 'settings', selectedSettingId, 'histories'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                            return;\r\n                        case 'viewSettingHistory':\r\n                            const historyId = settingView.selectedHistoryId;\r\n                            this.router.navigate(['./apps', this.data.appSlug, event.source.value, 'settings', selectedSettingId, 'histories', historyId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                            return;\r\n                        default:\r\n                            this.router.navigate(['./apps', this.data.appSlug, event.source.value, 'settings', selectedSettingId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                            return;\r\n                    }\r\n                }\r\n            } else {\r\n\r\n                switch (this.tabIndex) {\r\n                    case ViewTab.Configuration:\r\n\r\n                        setTimeout(() => {\r\n                            this.router.navigate(['./apps', this.data.appSlug, event.source.value, 'configuration'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                        }, 0);\r\n\r\n                        break;\r\n\r\n                    case ViewTab.Instances:\r\n\r\n                        setTimeout(() => {\r\n                            this.router.navigate(['./apps', this.data.appSlug, event.source.value, 'instances'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                        }, 0);\r\n\r\n                        break;\r\n\r\n                    case ViewTab.Settings:\r\n\r\n                        setTimeout(() => {\r\n                            this.router.navigate(['./apps', this.data.appSlug, event.source.value, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                        }, 0);\r\n\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    changeIdentifier(settingIdenfierId: string) {\r\n        this.selectedIdentifierId = settingIdenfierId;\r\n\r\n        const settings = this.appData.identifierIdToSettings[settingIdenfierId];\r\n        const instances = this.appData.identifierIdToInstances[settingIdenfierId];\r\n        const configuration = this.appData.identifierIdToConfiguration[settingIdenfierId];\r\n\r\n        this.updateSettingData(settingIdenfierId, settings);\r\n        this.updateInstances(settingIdenfierId, instances);\r\n        this.updateConfiguration(settingIdenfierId, configuration);\r\n    }\r\n\r\n    updateSettingData(identifierId: string, settings: GetGroupedAppDataResponseSetting[]) {\r\n        const identifier = this.appData.identifierIdToIdentifier[identifierId];\r\n        let settingsData = this.identifierIdToSettingsDataMap[identifierId];\r\n\r\n        if (settingsData === undefined) {\r\n\r\n            settingsData = this.identifierIdToSettingsDataMap[identifierId] = [];\r\n\r\n            settings?.forEach(setting => {\r\n\r\n                settingsData.push({\r\n                    slug: this.data.appSlug,\r\n                    clientId: this.data.clientId,\r\n                    settingId: setting.id,\r\n                    className: setting.class.name,\r\n                    classNamespace: setting.class.namespace,\r\n                    classFullName: setting.class.fullName,\r\n                    classId: setting.class.id,\r\n                    computedIdentifier: setting.computedIdentifier,\r\n                    version: setting.version,\r\n                    isDataFetched: false,\r\n                    dataRestored: setting.dataRestored,\r\n                    dataValidationEnabled: !setting.dataValidationDisabled,\r\n                    rawData: '',\r\n                    parsedData: {},\r\n                    tempData: {},\r\n                    settingRowVersion: setting.rowVersion,\r\n                    classRowVersion: setting.class.rowVersion,\r\n                    storeInSeparateFile: setting.storeInSeparateFile,\r\n                    ignoreOnFileChange: setting.ignoreOnFileChange,\r\n                    registrationMode: setting.registrationMode\r\n                });\r\n            });\r\n        }\r\n\r\n        this.settingListComponentData = {\r\n            slug: this.data.appSlug,\r\n            clientId: this.data.clientId,\r\n            clientName: this.data.clientName,\r\n            appId: this.data.appId,\r\n            selectedAppIdentifierId: this.selectedIdentifierId,\r\n            selectedAppIdentifierName: identifier.name,\r\n            settingDataList: this.identifierIdToSettingsDataMap[this.selectedIdentifierId]\r\n        };\r\n    }\r\n\r\n    updateInstances(identifierId: string, instances: GetGroupedAppDataResponseInstance[]) {\r\n\r\n        let instancesData = this.identifierIdToInstancesDataMap[identifierId];\r\n\r\n        if (instancesData === undefined) {\r\n\r\n            instancesData = this.identifierIdToInstancesDataMap[identifierId] = [];\r\n\r\n            instances?.forEach(instance => {\r\n\r\n                instancesData.push({\r\n                    id: instance.id,\r\n                    dynamicId: instance.dynamicId,\r\n                    name: instance.name,\r\n                    urls: instance.urls,\r\n                    isActive: instance.isActive,\r\n                    ipAddress: instance.ipAddress,\r\n                    machineName: instance.machineName,\r\n                    environment: instance.environment,\r\n                    reloadStrategies: instance.reloadStrategies,\r\n                    serviceType: instance.serviceType,\r\n                    version: instance.version,\r\n                    createdOn: instance.createdOn,\r\n                    updatedOn: instance.updatedOn\r\n                });\r\n            });\r\n        }\r\n\r\n        this.appInstanceListComponentData = {\r\n            clientId: this.data.clientId,\r\n            identifierId: identifierId,\r\n            instances: instancesData\r\n        };\r\n    }\r\n\r\n    updateConfiguration(identifierId: string, configuration: GetGroupedAppDataResponseConfiguration) {\r\n\r\n        if (!configuration) {\r\n            return;\r\n        }\r\n\r\n        this.configurationUpdateComponentData = {\r\n            configurationId: configuration.id,\r\n            appId: this.data.appId,\r\n            selectedIdentifierId: identifierId,\r\n            allowAnonymousAccess: configuration.allowAnonymousAccess,\r\n            storeInSeparateFile: configuration.storeInSeparateFile,\r\n            ignoreOnFileChange: configuration.ignoreOnFileChange,\r\n            registrationMode: configuration.registrationMode,\r\n            consumer: configuration.consumer,\r\n            provider: configuration.provider,\r\n            rowVersion: configuration.rowVersion\r\n        };\r\n    }\r\n\r\n    onTabChange(index: ViewTab) {\r\n        if (this.selectedIdentifierId === undefined) {\r\n            return;\r\n        }\r\n\r\n        this.tabIndex = index;\r\n\r\n        switch (index) {\r\n            case ViewTab.Settings:\r\n\r\n                const settings = this.appData.identifierIdToSettings[this.selectedIdentifierId];\r\n\r\n                if (settings) {\r\n                    this.updateSettingData(this.selectedIdentifierId, settings);\r\n\r\n                    // todo: setting id - selected\r\n\r\n                    setTimeout(() => {\r\n                        this.router.navigate(['./apps', this.data.appSlug, this.selectedIdentifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' })\r\n                    }, 55);\r\n                }\r\n\r\n                break;\r\n\r\n            case ViewTab.Instances:\r\n\r\n                const instances = this.appData.identifierIdToInstances[this.selectedIdentifierId];\r\n\r\n                this.updateInstances(this.selectedIdentifierId, instances);\r\n\r\n                setTimeout(() => {\r\n                    if (this.selectedInstanceId) {\r\n                        this.router.navigate(['./apps', this.data.appSlug, this.selectedIdentifierId, 'instances', this.selectedInstanceId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                    } else {\r\n                        this.router.navigate(['./apps', this.data.appSlug, this.selectedIdentifierId, 'instances'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                    }\r\n                }, 55);\r\n\r\n                break;\r\n\r\n            case ViewTab.Configuration:\r\n\r\n                const configuration = this.appData.identifierIdToConfiguration[this.selectedIdentifierId];\r\n\r\n                this.updateConfiguration(this.selectedIdentifierId, configuration);\r\n\r\n                setTimeout(() => {\r\n                    this.router.navigate(['./apps', this.data.appSlug, this.selectedIdentifierId, 'configuration'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                }, 55);\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    toggleFullScreen() {\r\n        this.isFullScreen = !this.isFullScreen;\r\n\r\n        const dialogElement = document.querySelector('.mat-mdc-dialog-surface');\r\n\r\n        if (this.isFullScreen) {\r\n\r\n            dialogElement?.setAttribute('style', `\r\n                  border-radius: 0 !important;\r\n                `);\r\n\r\n            this.dialogRef.updateSize('100%', '100%');\r\n        } else {\r\n            this.dialogRef.updateSize('1350px', '680px');\r\n            dialogElement?.removeAttribute('style');\r\n        }\r\n    }\r\n\r\n    createIdentifier(title?: string) {\r\n        const identifiers = this.identifiers.map(g => ({\r\n            id: g.id,\r\n            name: g.name\r\n        })) as GetIdentifiersResponseIdentifier[];\r\n\r\n        const data: AppIdentifierAddComponentModel = {\r\n            clientName: this.data.clientName,\r\n            appSlug: this.data.appSlug,\r\n            appId: this.data.appId,\r\n            identifiers,\r\n            title\r\n        };\r\n\r\n        const reloadIdentifier = (identifierId: string): Observable<unknown> => {\r\n            return this.appsService.getGroupedAppDataByAppIdAndIdentifierId({\r\n                appIdOrSlug: data.appId,\r\n                identifierIdOrSlug: identifierId\r\n            }).pipe(switchMap(response => {\r\n\r\n                const responseData = response.data;\r\n\r\n                if (!responseData) {\r\n                    return of(null);\r\n                }\r\n\r\n                this.appData.identifierIdToIdentifier[identifierId] = responseData.identifier;\r\n                this.appData.identifierIdToConfiguration[identifierId] = responseData.configuration;\r\n                this.appData.identifierIdToSettings[identifierId] = responseData.settings;\r\n                this.appData.identifierIdToInstances[identifierId] = responseData.instances\r\n\r\n                if (this.appData.identifierInfo) {\r\n                    this.appData.identifierInfo.minSortOrder = Math.min(this.appData.identifierInfo.minSortOrder, responseData.identifier.sortOrder);\r\n                    this.appData.identifierInfo.maxSortOrder = Math.max(this.appData.identifierInfo.maxSortOrder, responseData.identifier.sortOrder);\r\n\r\n                    this.appData.identifierInfo.mappingMinSortOrder = Math.min(this.appData.identifierInfo.mappingMinSortOrder, responseData.identifier.mappingSortOrder);\r\n                    this.appData.identifierInfo.mappingMaxSortOrder = Math.max(this.appData.identifierInfo.mappingMaxSortOrder, responseData.identifier.mappingSortOrder);\r\n                } else {\r\n                    this.appData.identifierInfo = {\r\n                        minSortOrder: responseData.identifier.sortOrder,\r\n                        maxSortOrder: responseData.identifier.sortOrder,\r\n                        mappingMinSortOrder: responseData.identifier.mappingSortOrder,\r\n                        mappingMaxSortOrder: responseData.identifier.mappingSortOrder\r\n                    };\r\n                }\r\n\r\n                this.changeIdentifier(identifierId);\r\n\r\n                return of(null);\r\n            }));\r\n        }\r\n\r\n        const subscription = this.dialog.open(IdentifierMappingCreateComponent, {\r\n            data,\r\n            width: '500px',\r\n            height: '170',\r\n            minWidth: 'inherit',\r\n            maxWidth: 'inherit',\r\n            autoFocus: false\r\n        }).afterClosed().subscribe((result: AppIdentifierAddComponentReturnModel) => {\r\n            if (result && !this.appData.identifierIdToSettings[result.identifierId]) {\r\n\r\n                const secondSubscription = reloadIdentifier(result.identifierId).subscribe(() => {\r\n\r\n                    let tabName;\r\n\r\n                    switch (this.tabIndex) {\r\n                        case ViewTab.Configuration:\r\n                            tabName = 'configuration';\r\n                            break;\r\n                        case ViewTab.Instances:\r\n                            tabName = 'instances';\r\n                            break;\r\n                        case ViewTab.Settings:\r\n                            tabName = 'settings';\r\n                            break;\r\n                    }\r\n\r\n                    this.router.navigate(['./apps', this.data.appSlug, result.identifierId, tabName], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                });\r\n\r\n                this.subscriptions.add(secondSubscription);\r\n\r\n            } else if (title) {\r\n                this.router.navigate(['apps']);\r\n                this.dialogRef.close();\r\n            } else {\r\n\r\n                if (this.previousSelectedIdentifierId in this.identifiers) {\r\n                    if (this.tabIndex === ViewTab.Settings) {\r\n                        const selectedSettingId = this.appViewService.settingView?.selectedSettingId;\r\n                        if (selectedSettingId) {\r\n                            this.router.navigate(['./apps', this.data.appSlug, this.previousSelectedIdentifierId, 'settings', selectedSettingId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                        } else {\r\n                            this.router.navigate(['./apps', this.data.appSlug, this.previousSelectedIdentifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                        }\r\n                    } else if (this.tabIndex === ViewTab.Instances) {\r\n                        this.router.navigate(['./apps', this.data.appSlug, this.previousSelectedIdentifierId, 'instances'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                    } else {\r\n                        this.router.navigate(['./apps', this.data.appSlug, this.previousSelectedIdentifierId, 'configuration'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                    }\r\n\r\n                    this.changeIdentifier(this.previousSelectedIdentifierId);\r\n                } else {\r\n                    this.router.navigate(['./apps', this.data.appSlug, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    onSettingDeleteEmitted(settingId: string) {\r\n\r\n        const settings = this.appData.identifierIdToSettings[this.selectedIdentifierId];\r\n\r\n        if (!settings) {\r\n            return;\r\n        }\r\n\r\n        const settingIndex = settings.findIndex(i => i.id === settingId);\r\n\r\n        if (settingIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        settings.splice(settingIndex, 1);\r\n\r\n        const settingsDataSource = this.identifierIdToSettingsDataMap[this.selectedIdentifierId]\r\n\r\n        if (!settingsDataSource) {\r\n            return;\r\n        }\r\n\r\n        const settingDataSourceIndex = settingsDataSource.findIndex(i => i.settingId === settingId);\r\n\r\n        if (settingDataSourceIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        settingsDataSource.splice(settingDataSourceIndex, 1);\r\n    }\r\n\r\n    onConfigUpdateEmitted(data: any) {\r\n\r\n        if (!this.configurationUpdateComponentData) {\r\n            return;\r\n        }\r\n\r\n        const configuration = this.appData.identifierIdToConfiguration[this.selectedIdentifierId];\r\n\r\n        configuration.rowVersion = this.configurationUpdateComponentData.rowVersion = data.rowVersion;\r\n\r\n        if (data.formControlName) {\r\n            switch (data.formControlName) {\r\n\r\n                case 'allowAnonymousAccess':\r\n                    configuration.allowAnonymousAccess = this.configurationUpdateComponentData.allowAnonymousAccess = data.allowAnonymousAccess;\r\n                    break;\r\n\r\n                case 'storeInSeparateFile':\r\n                    configuration.storeInSeparateFile = this.configurationUpdateComponentData.storeInSeparateFile = data.storeInSeparateFile;\r\n                    break;\r\n\r\n                case 'ignoreOnFileChange':\r\n                    configuration.ignoreOnFileChange = this.configurationUpdateComponentData.ignoreOnFileChange = data.ignoreOnFileChange;\r\n                    break;\r\n\r\n                case 'registrationMode':\r\n                    configuration.registrationMode = this.configurationUpdateComponentData.registrationMode = data.registrationMode;\r\n                    break;\r\n\r\n                case 'consumer':\r\n                    configuration.consumer = this.configurationUpdateComponentData.consumer = data.consumer;\r\n                    break;\r\n\r\n                case 'provider':\r\n                    configuration.provider = this.configurationUpdateComponentData.provider = data.provider;\r\n                    break;\r\n            }\r\n        } else {\r\n            configuration.allowAnonymousAccess = this.configurationUpdateComponentData.allowAnonymousAccess = data.allowAnonymousAccess;\r\n            configuration.storeInSeparateFile = this.configurationUpdateComponentData.storeInSeparateFile = data.storeInSeparateFile;\r\n            configuration.ignoreOnFileChange = this.configurationUpdateComponentData.ignoreOnFileChange = data.ignoreOnFileChange;\r\n            configuration.registrationMode = this.configurationUpdateComponentData.registrationMode = data.registrationMode;\r\n            configuration.consumer = this.configurationUpdateComponentData.consumer = data.consumer;\r\n            configuration.provider = this.configurationUpdateComponentData.provider = data.provider;\r\n        }\r\n    }\r\n\r\n    fetchLatestEmitted(settingId: string) {\r\n\r\n        const subscription = this.updateSetting(settingId)?.subscribe((isSuccess) => {\r\n            if (isSuccess) {\r\n                this.snackBar.open(`Latest data fetched successfully!`, 'Close', {\r\n                    horizontalPosition: 'right',\r\n                    verticalPosition: 'top',\r\n                    duration: 5000\r\n                });\r\n            }\r\n        })\r\n\r\n        if (subscription) {\r\n            this.subscriptions.add(subscription);\r\n        }\r\n    }\r\n\r\n    updateSetting(settingId: string) {\r\n        const settings = this.appData.identifierIdToSettings[this.selectedIdentifierId];\r\n\r\n        if (!settings) {\r\n            return;\r\n        }\r\n\r\n        let setting = settings.find(i => i.id === settingId)\r\n\r\n        return this.settingsService.getSettingById({ settingId }).pipe(switchMap((response) => {\r\n\r\n            if (!response.data || response.data.identifierId !== this.selectedIdentifierId) {\r\n                return of(null);\r\n            }\r\n\r\n            if (!setting) {\r\n                setting = {\r\n                    id: settingId,\r\n                    computedIdentifier: response.data.computedIdentifier,\r\n                    dataRestored: response.data.dataRestored,\r\n                    registrationMode: response.data.registrationMode,\r\n                    dataValidationDisabled: response.data.dataValidationDisabled,\r\n                    storeInSeparateFile: response.data.storeInSeparateFile,\r\n                    ignoreOnFileChange: response.data.ignoreOnFileChange,\r\n                    version: response.data.version,\r\n                    rowVersion: response.data.rowVersion,\r\n                    class: {\r\n                        id: response.data.class.id,\r\n                        namespace: response.data.class.namespace,\r\n                        name: response.data.class.name,\r\n                        fullName: response.data.class.fullName,\r\n                        rowVersion: response.data.class.rowVersion\r\n                    }\r\n                };\r\n\r\n                settings.push(setting);\r\n            } else {\r\n                setting.computedIdentifier = response.data.computedIdentifier;\r\n                setting.dataRestored = response.data.dataRestored;\r\n                setting.registrationMode = response.data.registrationMode;\r\n                setting.dataValidationDisabled = response.data.dataValidationDisabled;\r\n                setting.storeInSeparateFile = response.data.storeInSeparateFile;\r\n                setting.ignoreOnFileChange = response.data.ignoreOnFileChange;\r\n                setting.version = response.data.version;\r\n                setting.rowVersion = response.data.rowVersion;\r\n                setting.class.id = response.data.class.id;\r\n                setting.class.namespace = response.data.class.namespace;\r\n                setting.class.name = response.data.class.name;\r\n                setting.class.fullName = response.data.class.fullName;\r\n                setting.class.rowVersion = response.data.class.rowVersion;\r\n            }\r\n\r\n            const settingsData = this.identifierIdToSettingsDataMap[this.selectedIdentifierId];\r\n\r\n            let settingData = settingsData.find(s => s.settingId === settingId);\r\n\r\n            let parsedData, tempData;\r\n\r\n            try {\r\n                parsedData = JSON.parse(response.data.data)\r\n            }\r\n            catch {\r\n                parsedData = {};\r\n            }\r\n\r\n            tempData = { ...parsedData };\r\n\r\n            if (!settingData) {\r\n\r\n                settingData = {\r\n                    slug: this.data.appSlug,\r\n                    clientId: this.data.clientId,\r\n                    settingId: settingId,\r\n                    computedIdentifier: response.data.computedIdentifier,\r\n                    dataRestored: response.data.dataRestored,\r\n                    registrationMode: response.data.registrationMode,\r\n                    dataValidationEnabled: !response.data.dataValidationDisabled,\r\n                    storeInSeparateFile: response.data.storeInSeparateFile,\r\n                    ignoreOnFileChange: response.data.ignoreOnFileChange,\r\n                    version: response.data.version,\r\n                    settingRowVersion: response.data.rowVersion,\r\n                    classId: response.data.class.id,\r\n                    classNamespace: response.data.class.namespace,\r\n                    className: response.data.class.name,\r\n                    classFullName: response.data.class.fullName,\r\n                    classRowVersion: response.data.class.rowVersion,\r\n                    isDataFetched: true,\r\n                    rawData: response.data.data,\r\n                    parsedData,\r\n                    tempData,\r\n                }\r\n\r\n                settingsData.push(settingData);\r\n            } else {\r\n                settingData.computedIdentifier = setting.computedIdentifier;\r\n                settingData.dataRestored = setting.dataRestored;\r\n                settingData.registrationMode = setting.registrationMode;\r\n                settingData.dataValidationEnabled = !setting.dataValidationDisabled;\r\n                settingData.storeInSeparateFile = setting.storeInSeparateFile;\r\n                settingData.ignoreOnFileChange = setting.ignoreOnFileChange;\r\n                settingData.version = setting.version;\r\n                settingData.settingRowVersion = setting.rowVersion;\r\n                settingData.classNamespace = setting.class.namespace;\r\n                settingData.className = setting.class.name;\r\n                settingData.classFullName = setting.class.fullName;\r\n                settingData.classRowVersion = setting.class.rowVersion;\r\n                settingData.isDataFetched = true;\r\n                settingData.rawData = response.data.data;\r\n                settingData.parsedData = parsedData;\r\n                settingData.tempData = tempData;\r\n            }\r\n\r\n            return of(true);\r\n        }));\r\n    }\r\n\r\n    onInstanceDeleted(instanceId: string) {\r\n        const model = this.appData.identifierIdToInstances[this.selectedIdentifierId];\r\n\r\n        if (!model) {\r\n            return;\r\n        }\r\n\r\n        const index = model.findIndex(m => m.id === instanceId);\r\n\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n\r\n        model.splice(index, 1);\r\n    }\r\n\r\n    copySettingToIdentifierEmitted(emitData: CopySettingToIdentifierEmitData) {\r\n        // this.appViewService.emitSettingView({\r\n        //     selectedSettingId: this.appViewService.settingView?.selectedSettingId,\r\n        //     settingViewType: 'viewCopySettingTo'\r\n        // });\r\n\r\n        const notAvailableAppIdentifiers = Object.entries(this.appData.identifierIdToSettings)\r\n            .filter(g => g[1].some(i => i.computedIdentifier == emitData.computedIdentifier))\r\n            .map(g => {\r\n\r\n                const identifier = this.appData.identifierIdToIdentifier[g[0]];\r\n\r\n                return ({\r\n                    id: identifier.id,\r\n                    name: identifier.name\r\n                });\r\n            }) as GetIdentifiersResponseIdentifier[];\r\n\r\n        const data: CopySettingToIdentifierComponentModel = {\r\n            clientId: this.data.clientId,\r\n            clientName: this.data.clientName,\r\n            computedIdentifier: emitData.computedIdentifier,\r\n            className: emitData.className,\r\n            appId: this.data.appId,\r\n            currentSettingId: emitData.currentSettingId,\r\n            currentAppIdentifierName: emitData.currentAppIdentifierName,\r\n            currentAppIdentifierId: emitData.currentAppIdentifierId,\r\n            notAvailableAppIdentifiers: notAvailableAppIdentifiers\r\n        }\r\n\r\n        const subscription = this.dialog.open(SettingCopyToComponent, {\r\n            data,\r\n            width: '500px',\r\n            height: '240px',\r\n            minWidth: 'inherit',\r\n            maxWidth: 'inherit',\r\n            autoFocus: false\r\n        }).afterClosed().subscribe((result: CopyAppSettingToComponentReturnModel) => {\r\n\r\n            const selectedSettingId = result?.settingId ?? (emitData.isExpanded ? this.appViewService.settingView?.selectedSettingId : undefined);\r\n\r\n            if (result === undefined) {\r\n                if (selectedSettingId) {\r\n                    this.router.navigate(['./apps', this.data.appSlug, this.selectedIdentifierId, 'settings', selectedSettingId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                } else {\r\n                    this.router.navigate(['./apps', this.data.appSlug, this.selectedIdentifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            if (data.clientId !== result.clientId) {\r\n                this.dialogRef.close();\r\n\r\n                setTimeout(() => {\r\n                    if (selectedSettingId) {\r\n                        this.router.navigate(['./apps', result.appSlug, result?.identifierId ?? this.selectedIdentifierId, 'settings', selectedSettingId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                    } else {\r\n                        this.router.navigate(['./apps', result.appSlug, result?.identifierId ?? this.selectedIdentifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                    }\r\n                }, 500);\r\n\r\n                return;\r\n            } else {\r\n                const configurationSubscription = this.configurationsService.getConfigurationByAppAndIdentifier({\r\n                    appId: this.data.appId,\r\n                    identifierId: result.identifierId\r\n                }).subscribe({\r\n                    next: (response) => {\r\n                        const responseData = response.data;\r\n\r\n                        if (!responseData) {\r\n                            return;\r\n                        }\r\n\r\n                        this.appData.identifierIdToConfiguration[result.identifierId] = {\r\n                            id: responseData.id,\r\n                            allowAnonymousAccess: responseData.allowAnonymousAccess,\r\n                            storeInSeparateFile: responseData.storeInSeparateFile,\r\n                            ignoreOnFileChange: responseData.ignoreOnFileChange,\r\n                            registrationMode: responseData.registrationMode,\r\n                            consumer: responseData.consumer,\r\n                            provider: responseData.provider,\r\n                            rowVersion: responseData.rowVersion\r\n                        };\r\n                    }\r\n                });\r\n\r\n                this.subscriptions.add(configurationSubscription);\r\n            }\r\n\r\n            let groupedSetting = this.appData.identifierIdToSettings[result.identifierId];\r\n\r\n            if (!groupedSetting) {\r\n\r\n                const identifier = {\r\n                    id: result.identifierId,\r\n                    name: result.identifierName,\r\n                    sortOrder: result.identifierSortOrder,\r\n                    mappingSortOrder: result.identifierMappingSortOrder,\r\n                    mappingRowVersion: ''\r\n                };\r\n\r\n                this.appData.identifierIdToSettings[result.identifierId] = [];\r\n                this.appData.identifierIdToIdentifier[result.identifierId] = identifier;\r\n\r\n                groupedSetting = this.appData.identifierIdToSettings[result.identifierId];\r\n\r\n                this.sortIdentifiers(Object.values(this.appData.identifierIdToIdentifier));\r\n            }\r\n\r\n            groupedSetting.push({\r\n                id: result.settingId,\r\n                version: '0',\r\n                dataValidationDisabled: !emitData.isDataValidationEnabled,\r\n                dataRestored: false,\r\n                computedIdentifier: emitData.computedIdentifier,\r\n                rowVersion: '',\r\n                class: {\r\n                    name: emitData.className,\r\n                    namespace: emitData.classNamespace,\r\n                    fullName: emitData.classFullName,\r\n                    id: result.classId,\r\n                    rowVersion: ''\r\n                },\r\n                storeInSeparateFile: emitData.storeInSeparateFile,\r\n                ignoreOnFileChange: emitData.ignoreOnFileChange,\r\n                registrationMode: emitData.registrationMode\r\n            });\r\n\r\n            let model = this.identifierIdToSettingsDataMap[result.identifierId];\r\n\r\n            if (model === undefined) {\r\n                this.updateSettingData(result.identifierId, groupedSetting);\r\n                model = this.identifierIdToSettingsDataMap[result.identifierId];\r\n            } else {\r\n                model.push({\r\n                    slug: this.data.appSlug,\r\n                    clientId: this.data.clientId,\r\n                    settingId: result.settingId,\r\n                    className: emitData.className,\r\n                    classNamespace: emitData.classNamespace,\r\n                    classFullName: emitData.classFullName,\r\n                    classId: result.classId,\r\n                    computedIdentifier: emitData.computedIdentifier,\r\n                    version: '0',\r\n                    isDataFetched: true,\r\n                    dataRestored: false,\r\n                    dataValidationEnabled: emitData.isDataValidationEnabled,\r\n                    rawData: emitData.rawData,\r\n                    parsedData: emitData.parsedData,\r\n                    tempData: { ...emitData.parsedData },\r\n                    settingRowVersion: '',\r\n                    classRowVersion: '',\r\n                    storeInSeparateFile: emitData.storeInSeparateFile,\r\n                    ignoreOnFileChange: emitData.ignoreOnFileChange,\r\n                    registrationMode: emitData.registrationMode\r\n                });\r\n            }\r\n            this.changeIdentifier(result.identifierId);\r\n\r\n            this.appViewService.emitSettingView({\r\n                selectedSettingId: result.settingId,\r\n                settingViewType: 'viewSetting'\r\n            });\r\n\r\n            if (selectedSettingId) {\r\n                this.router.navigate(['./apps', this.data.appSlug, result.identifierId, 'settings', result.settingId], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n            } else {\r\n                this.router.navigate(['./apps', this.data.appSlug, result.identifierId, 'settings'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    deleteIdentifier(key: string, event: Event) {\r\n        event.stopPropagation();\r\n\r\n        const title = 'Confirm delete';\r\n        const message = `Are you sure you want to delete the \"${key}\" identifier? This action will remove the mapping, but existing settings will remain.`;\r\n\r\n        const subscription = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: '500px',\r\n            data: { title, message }\r\n        }).afterClosed().subscribe(result => {\r\n            if (result) {\r\n\r\n                const identifier = this.appData.identifierIdToIdentifier[key];\r\n\r\n                if (identifier) {\r\n\r\n                    const internalSubscription = this.appIdentifierMappingsService.deleteAppIdentifierMapping({\r\n                        appId: this.data.appId,\r\n                        identifierId: key,\r\n                        mappingRowVersion: identifier.mappingRowVersion\r\n                    }).subscribe(() => {\r\n\r\n                        this.snackBar.open(`Deleted successfully!`, 'Close', {\r\n                            horizontalPosition: 'right',\r\n                            verticalPosition: 'top',\r\n                            duration: 5000\r\n                        });\r\n\r\n                        if (key in this.appData.identifierIdToIdentifier) {\r\n                            delete this.appData.identifierIdToIdentifier[key];\r\n                        }\r\n\r\n                        if (key in this.appData.identifierIdToSettings) {\r\n                            delete this.appData.identifierIdToSettings[key];\r\n                        }\r\n\r\n                        if (key in this.identifierIdToSettingsDataMap) {\r\n                            delete this.identifierIdToSettingsDataMap[key];\r\n                        }\r\n\r\n                        if (key in this.appData.identifierIdToInstances) {\r\n                            delete this.appData.identifierIdToInstances[key];\r\n                        }\r\n\r\n                        if (key in this.identifierIdToInstancesDataMap) {\r\n                            delete this.identifierIdToInstancesDataMap[key];\r\n                        }\r\n\r\n                        this.calculateIdentifierInfo();\r\n\r\n                        const keys = Object.keys(this.appData.identifierIdToSettings);\r\n\r\n                        if (keys.length === 0) {\r\n                            this.selectedIdentifierId = '';\r\n                            this.settingListComponentData = undefined;\r\n                            return;\r\n                        }\r\n\r\n                        if (this.selectedIdentifierId === key) {\r\n                            const identifierId = keys[0];\r\n\r\n                            this.changeIdentifier(identifierId);\r\n                        }\r\n                    });\r\n\r\n                    this.subscriptions.add(internalSubscription);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    calculateIdentifierInfo() {\r\n\r\n        const values = Object.values(this.appData.identifierIdToIdentifier);\r\n\r\n        if (values.length === 0) {\r\n            this.appData.identifierInfo = {\r\n                minSortOrder: 0,\r\n                maxSortOrder: 0,\r\n                mappingMinSortOrder: 0,\r\n                mappingMaxSortOrder: 0\r\n            };\r\n            return;\r\n        }\r\n\r\n        var firstValue = values[0];\r\n\r\n        let minSortOrder = firstValue.sortOrder, maxSortOrder = firstValue.sortOrder, mappingMinOrder = firstValue.mappingSortOrder, mappingMaxOrder = firstValue.mappingSortOrder;\r\n\r\n        values.forEach(value => {\r\n\r\n            minSortOrder = Math.min(minSortOrder, value.sortOrder);\r\n            maxSortOrder = Math.max(maxSortOrder, value.sortOrder);\r\n\r\n            mappingMinOrder = Math.min(mappingMinOrder, value.mappingSortOrder);\r\n            mappingMaxOrder = Math.max(mappingMaxOrder, value.mappingSortOrder);\r\n        });\r\n\r\n        this.appData.identifierInfo = {\r\n            minSortOrder: minSortOrder,\r\n            maxSortOrder: maxSortOrder,\r\n            mappingMinSortOrder: mappingMinOrder,\r\n            mappingMaxSortOrder: mappingMaxOrder\r\n        };\r\n    }\r\n\r\n    moveSortOrder(identifierId: string, event: Event, ascent: boolean): void {\r\n\r\n        event.stopPropagation();\r\n\r\n        const identifier = this.appData.identifierIdToIdentifier[identifierId];\r\n\r\n        const reloadIdentifiers = (): Observable<unknown> => {\r\n            return this.appIdentifierMappingsService.getAppIdentifierMappingsByAppId({ appIdOrSlug: this.data.appId }).pipe(switchMap((response) => {\r\n                const responseData = response.data\r\n\r\n                if (!responseData) {\r\n                    return of(null);\r\n                }\r\n\r\n                this.appData.identifierInfo = {\r\n                    minSortOrder: responseData.minSortOrder,\r\n                    maxSortOrder: responseData.maxSortOrder,\r\n                    mappingMinSortOrder: responseData.mappingMinSortOrder,\r\n                    mappingMaxSortOrder: responseData.mappingMaxSortOrder\r\n                };\r\n\r\n                responseData.identifiers.forEach(item => {\r\n\r\n                    const identifier = this.appData.identifierIdToIdentifier[item.id];\r\n\r\n                    if (identifier) {\r\n                        identifier.mappingSortOrder = item.mappingSortOrder;\r\n                        identifier.mappingRowVersion = item.mappingRowVersion;\r\n                        identifier.sortOrder = item.sortOrder;\r\n                    }\r\n                });\r\n\r\n                return of(null);\r\n            }));\r\n        }\r\n\r\n        const subscription = this.appIdentifierMappingsService.updateAppIdentifierMappingSortOrder({\r\n            appId: this.data.appId,\r\n            identifierId: identifierId,\r\n            body: {\r\n                ascent: ascent,\r\n                rowVersion: identifier.mappingRowVersion\r\n            }\r\n        }).subscribe({\r\n            next: (resp) => {\r\n                if (resp.status === 409 && resp.errors) {\r\n                    this.utilityService.error(resp.errors, 3500);\r\n                }\r\n\r\n                this.subscriptions.add(reloadIdentifiers().subscribe());\r\n            },\r\n            error: (err: HttpErrorResponse) => {\r\n\r\n                const error = err.error as IResponse<UpdateAppIdentifierMappingSortOrderResponse>;\r\n\r\n                if (error) {\r\n\r\n                    if (error.errors?.find(e => e.traces === 'MappingNotFound')) {\r\n\r\n                        delete this.appData.identifierIdToInstances[identifierId];\r\n                        delete this.appData.identifierIdToConfiguration[identifierId];\r\n                        delete this.appData.identifierIdToIdentifier[identifierId];\r\n                        delete this.appData.identifierIdToSettings[identifierId];\r\n\r\n                        if (this.selectedIdentifierId === identifierId) {\r\n\r\n                            const identifiers = this.identifiers;\r\n\r\n                            if (identifiers.length == 0) {\r\n                                this.createIdentifier('Add an identifier to start');\r\n                                return;\r\n                            }\r\n\r\n                            const identifierId = identifiers[0].id;\r\n\r\n                            this.changeIdentifier(identifierId);\r\n                        }\r\n\r\n                        this.subscriptions.add(reloadIdentifiers().subscribe());\r\n                    }\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    sortIdentifiers(identifiers: GetGroupedAppDataResponseIdentifier[]) {\r\n        return identifiers.sort((a, b) => {\r\n            if (a.mappingSortOrder !== b.mappingSortOrder) {\r\n                return a.mappingSortOrder - b.mappingSortOrder;\r\n            }\r\n\r\n            if (a.sortOrder !== b.sortOrder) {\r\n                return a.sortOrder - b.sortOrder;\r\n            }\r\n\r\n            return a.id.localeCompare(b.id);\r\n        });\r\n    }\r\n\r\n    private loadData$(): Observable<IResponse<GetGroupedAppDataResponse> | null> {\r\n        return of(null).pipe(\r\n            switchMap(() => {\r\n                if (this.isLoaded) {\r\n                    return of(null);\r\n                }\r\n                return this.appsService.getGroupedAppDataByAppSlug({ appIdOrSlug: this.data.appSlug });\r\n            }),\r\n            tap((response) => {\r\n                this.isLoaded = true;\r\n                const responseData = response?.data;\r\n                if (responseData) {\r\n                    this.appData = responseData;\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nenum ViewTab {\r\n    Settings = 0,\r\n    Instances = 1,\r\n    Configuration = 2\r\n}","<div class=\"d-flex border-bottom\">\r\n  <div class=\"dialog-title\">{{data.clientName}}</div>\r\n  <span></span>\r\n  <span class=\"spacer\"></span>\r\n  <button mat-icon-button (click)=\"toggleFullScreen()\"\r\n    [matTooltip]=\"isFullScreen ? 'Exit full screen' : 'Enter full screen'\" matTooltipPosition=\"above\">\r\n    <mat-icon>{{ isFullScreen ? 'fullscreen_exit' : 'fullscreen' }}</mat-icon>\r\n  </button>\r\n  <button mat-icon-button mat-dialog-close matTooltip=\"Close\" matTooltipPosition=\"above\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</div>\r\n\r\n<mat-form-field class=\"custom-form-field\">\r\n  <mat-label>Select the identifier <mat-icon class=\"icon-mini\" matIconPosition=\"right\" fontIcon=\"info\"\r\n    matTooltip=\"The identifier can be used to distinguish between different environments, such as Production, Development, etc.\"></mat-icon></mat-label>\r\n  <mat-select [(value)]=\"selectedIdentifierId\">\r\n    <mat-option class=\"custom-option\" *ngFor=\"let identifier of identifiers\" [value]=\"identifier.id\"\r\n      (onSelectionChange)=\"onIdentifierChanged($event)\">\r\n      <span>{{identifier.name}}</span>\r\n      <span class=\"spacer\"></span>\r\n      <span>\r\n        <button mat-icon-button (click)=\"moveSortOrder(identifier.id, $event, false)\"\r\n          *ngIf=\"appData.identifierInfo.mappingMinSortOrder !== identifier.mappingSortOrder\" matTooltip=\"Up\" matTooltipPosition=\"left\"><mat-icon\r\n            fontIcon=\"arrow_upward\"></mat-icon></button>\r\n        <button mat-icon-button (click)=\"moveSortOrder(identifier.id, $event, true)\" matTooltip=\"Down\" matTooltipPosition=\"left\"\r\n          *ngIf=\"appData.identifierInfo.mappingMaxSortOrder !== identifier.mappingSortOrder\"><mat-icon fontIcon=\"arrow_downward\"></mat-icon></button>\r\n      </span>\r\n      <button color=\"warn\" mat-icon-button matTooltip=\"Delete\" matTooltipPosition=\"right\"\r\n        (click)=\"deleteIdentifier(identifier.id, $event)\">\r\n        <mat-icon fontIcon=\"delete\"></mat-icon>\r\n      </button>\r\n    </mat-option>\r\n    <mat-option [routerLink]=\"['./apps', data.appSlug, 'new']\" queryParamsHandling=\"merge\">New identifier mapping\r\n      <mat-icon>add_circle</mat-icon>\r\n    </mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\r\n<mat-tab-group [(selectedIndex)]=\"this.tabIndex\" animationDuration=\"0ms\"\r\n  (selectedTabChange)=\"onTabChange($event.index)\">\r\n  <mat-tab label=\"Settings\" [disabled]=\"!settingListComponentData || !isLoaded\">\r\n    <mat-dialog-content class=\"p-0\">\r\n      <setting-list *ngIf=\"settingListComponentData\" [data]=\"settingListComponentData\"\r\n        (copySettingToIdentifierEmitter)=\"copySettingToIdentifierEmitted($event)\"\r\n        (settingDeleteEmitter)=\"onSettingDeleteEmitted($event)\"\r\n        (fetchLatestEmitter)=\"fetchLatestEmitted($event)\"\r\n        >\r\n      </setting-list>\r\n    </mat-dialog-content>\r\n  </mat-tab>\r\n  <mat-tab label=\"Instances\" [disabled]=\"!(appInstanceListComponentData?.instances?.length ?? 0 > 0) || !isLoaded\">\r\n    <mat-dialog-content class=\"p-0\">\r\n      <instance-list *ngIf=\"appInstanceListComponentData\" [data]=\"appInstanceListComponentData\" (instanceDeleteEmitter)=\"onInstanceDeleted($event)\">\r\n      </instance-list>\r\n    </mat-dialog-content>\r\n  </mat-tab>\r\n  <mat-tab label=\"Configuration\" [disabled]=\"!isLoaded\">\r\n    <mat-dialog-content class=\"p-0\">\r\n      <configuration-update *ngIf=\"configurationUpdateComponentData\" [data]=\"configurationUpdateComponentData\" (configUpdateEmitter)=\"onConfigUpdateEmitted($event)\"></configuration-update>\r\n    </mat-dialog-content>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n\r\n<!-- <mat-menu #menu=\"matMenu\">\r\n  <button mat-menu-item (click)=\"addIdentifier()\">\r\n    <mat-icon>add_circle</mat-icon>\r\n    <span>Add a new identifier</span>\r\n  </button>\r\n</mat-menu> -->\r\n\r\n<!-- <button mat-fab color=\"primary\" [matMenuTriggerFor]=\"menu\">\r\n  <mat-icon>more_vert</mat-icon>\r\n</button> -->","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { AppUpdateComponent } from \"../app-update/app-update.component\";\r\nimport { MatSelect, MatSelectChange } from \"@angular/material/select\";\r\nimport { debounceTime, Subject, Subscription, } from \"rxjs\";\r\nimport { MatAccordion } from \"@angular/material/expansion\";\r\nimport { UtilityService } from \"../../../../shared/services/utility.service\";\r\nimport { WindowService } from \"../../../../core/services/window.service\";\r\nimport { DefaultLayoutService } from \"../../../../shared/layouts/default-layout/default-layout.service\";\r\nimport { AuthService } from \"../../../../core/services/auth.service\";\r\nimport { AppsService } from \"../../services/apps.service\";\r\nimport { GetGroupedAppsResponseApp } from \"../../models/get-grouped-apps-response-app\";\r\nimport { GroupsService } from \"../../../group/services/app-groups.service\";\r\nimport { AppCreateComponent } from \"../app-create/app-create.component\";\r\nimport { ConfirmationDialogComponent } from \"../../../../shared/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { AppViewComponent } from \"../app-view/app-view.component\";\r\nimport { AppEditComponentModel } from \"../../models/app-edit-component.model\";\r\nimport { AppEditComponentReturnModel } from \"../../models/app-editor-component-return.model\";\r\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\r\nimport { DummyComponentService } from \"../../../../shared/components/dummy/dummy-component.service\";\r\nimport { APP_ROUTES } from \"../../app-routes\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { AppViewComponentModel } from \"../../models/app-view-component.model\";\r\nimport { ConfirmationDialogComponentModel } from \"../../../../shared/components/confirmation-dialog/confirmation-dialog-component.model\";\r\nimport { GetAppGroupsResponseGroup } from \"../../../group/models/get-app-groups-response-group\";\r\n\r\n@Component({\r\n    templateUrl: './app-list.component.html',\r\n    styleUrls: ['./app-list.component.css']\r\n})\r\nexport class AppListComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    groupedApps: { key: string, apps: GetGroupedAppsResponseApp[] }[] = [];\r\n    groups: GetAppGroupsResponseGroup[] = [];\r\n    isGroupsFetched: boolean = false;\r\n    groupsCount: number = 0;\r\n    appsCount: number = 0;\r\n    appsFetched: boolean = false;\r\n    queryParams: ({\r\n        searchTerm: string | null;\r\n        groupId: string | null;\r\n    }) = {\r\n            searchTerm: null,\r\n            groupId: null\r\n        };\r\n\r\n    private searchTermSubject = new Subject<string>();\r\n    isProvider: boolean = false;\r\n\r\n    @ViewChild('groupSelect') groupSelect?: MatSelect;\r\n    @ViewChild('searchTermInput') searchTermInput?: ElementRef<HTMLInputElement>;\r\n\r\n    @ViewChild(MatAccordion) accordion!: MatAccordion;\r\n\r\n    menuOpened: boolean = false;\r\n\r\n    private subscriptions = new Subscription();\r\n    private searchTermSubscription?: Subscription;\r\n    private queryParamSubscription?: Subscription;\r\n\r\n    isLoading: boolean = false;\r\n    isConnectionSecure?: boolean;\r\n\r\n    constructor(\r\n        private cdr: ChangeDetectorRef,\r\n        private dialog: MatDialog,\r\n        private snackBar: MatSnackBar,\r\n        private appsService: AppsService,\r\n        private groupsService: GroupsService,\r\n        private authService: AuthService,\r\n        private utilityService: UtilityService,\r\n        private windowService: WindowService,\r\n        private defaultLayoutService: DefaultLayoutService,\r\n        private dummyComponentService: DummyComponentService,\r\n        private route: ActivatedRoute,\r\n        private router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isProvider = this.windowService.isProvider;\r\n        this.handleRouting();\r\n        this.setupMenusubscription();\r\n        this.setupSearchTermSubscription();\r\n        this.isConnectionSecure = this.windowService.isConnectionSecure;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => {\r\n            this.setupQueryParams();\r\n        })\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    setupMenusubscription() {\r\n        const subscription = this.defaultLayoutService.menuOpened$.subscribe(menuOpened => this.menuOpened = menuOpened);\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    setupQueryParams() {\r\n\r\n        if (this.queryParamSubscription) {\r\n            return;\r\n        }\r\n\r\n        this.queryParamSubscription = this.route.queryParams.subscribe(params => {\r\n\r\n            const searchTerm = this.getSearchTermFromRoute(params);\r\n            const groupId = this.getGroupId(params);\r\n\r\n            if (this.queryParams.searchTerm === searchTerm &&\r\n                this.queryParams.groupId === groupId\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            if(this.isProvider){\r\n                this.queryParams.searchTerm = this.searchTermInput!.nativeElement.value = searchTerm;\r\n                this.queryParams.groupId = this.groupSelect!.value = groupId;\r\n            }\r\n\r\n            this.loadData();\r\n        });\r\n\r\n\r\n        this.subscriptions.add(this.queryParamSubscription);\r\n    }\r\n\r\n    setupSearchTermSubscription() {\r\n\r\n        if (this.searchTermSubscription) {\r\n            return;\r\n        }\r\n\r\n        this.searchTermSubscription = this.searchTermSubject.pipe(\r\n            debounceTime(300)\r\n        ).subscribe(searchTerm => {\r\n            this.queryParams.searchTerm = searchTerm;\r\n            this.loadData();\r\n        });\r\n\r\n        this.subscriptions.add(this.searchTermSubscription);\r\n    }\r\n\r\n    getSearchTermFromRoute(params: Params) {\r\n        let hasDifferentCaseSearchTerm = false;\r\n        const filterKeys = Object.keys(params).filter(key => {\r\n            const isMatches = key.toLocaleLowerCase() === 'searchterm';\r\n            if (!hasDifferentCaseSearchTerm) {\r\n                hasDifferentCaseSearchTerm = isMatches && key !== 'searchTerm';\r\n            }\r\n            return isMatches;\r\n        });\r\n\r\n        return filterKeys.length > 0\r\n            ? hasDifferentCaseSearchTerm\r\n                ? this.updateQueryParamsForSearchTerm(filterKeys, params)\r\n                : params['searchTerm'] ?? ''\r\n            : '';\r\n    }\r\n\r\n    getGroupId(params: Params): string {\r\n\r\n        const groupId = params['groupId'] || '';\r\n\r\n        if (groupId) {\r\n            this.getGroups(groupId);\r\n        }\r\n\r\n        return groupId;\r\n    }\r\n\r\n    updateQueryParamsForSearchTerm(searchTermKeys: string[], params: any): string {\r\n        let searchTerm = '';\r\n        const updatedParams: { [key: string]: any } = {};\r\n\r\n        searchTermKeys.forEach(key => {\r\n            searchTerm += params[key] + ',';\r\n            updatedParams[key] = null;\r\n        });\r\n\r\n        searchTerm = searchTerm.substring(0, searchTerm.length - 1);\r\n\r\n        updatedParams['searchTerm'] = searchTerm;\r\n\r\n        this.router.navigate([], {\r\n            queryParams: updatedParams,\r\n            queryParamsHandling: 'merge'\r\n        });\r\n\r\n        return searchTerm;\r\n    }\r\n\r\n\r\n    loadData(): void {\r\n        this.startFetching();\r\n\r\n        const fetchingSubscription = this.appsService.getGroupedApps({\r\n            searchTerm: this.queryParams.searchTerm ?? undefined,\r\n            groupId: this.queryParams.groupId\r\n        }).subscribe({\r\n            next: (response) => {\r\n                if (!response.data) {\r\n                    return;\r\n                }\r\n\r\n                this.groupedApps = this.mapGroupedAppsToArray(response.data.groupNameToApps);\r\n                this.groupsCount = response.data.groupsCount;\r\n                this.appsCount = response.data.appsCount;\r\n                this.appsFetched = true;\r\n            },\r\n            error: () => {\r\n                this.stopFetching(true);\r\n            },\r\n            complete: () => {\r\n                this.stopFetching();\r\n                this.updateUrl();\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(fetchingSubscription);\r\n    }\r\n\r\n    startFetching() {\r\n        this.isLoading = true;\r\n    }\r\n\r\n    stopFetching(hasError?: boolean) {\r\n        this.isLoading = false;\r\n\r\n        if (hasError) {\r\n            return;\r\n        }\r\n\r\n        // if (this.dataSource.data.length > 0) {\r\n        //     this.noResultsFound = false;\r\n        //     this.message = '';\r\n        //     return;\r\n        // }\r\n\r\n        // if (this.queryParams.searchTerm === '') {\r\n        //     this.noResultsFound = true;\r\n        //     this.message = 'No results found.';\r\n        // } else {\r\n        //     this.noResultsFound = false;\r\n        //     this.message = '0 matches';\r\n        // }\r\n    }\r\n\r\n    mapGroupedAppsToArray(groupedApps: { [key: string]: GetGroupedAppsResponseApp[] }): { key: string, apps: GetGroupedAppsResponseApp[] }[] {\r\n        return Object.entries(groupedApps).map(([key, apps]) => ({ key, apps }));\r\n    }\r\n\r\n    getGroups(groupId?: string): void {\r\n        if (this.isGroupsFetched || (this.authService.isAuthorizationRequired && !this.authService.isAuthenticated)) {\r\n            return;\r\n        }\r\n\r\n        this.isGroupsFetched = true;\r\n\r\n        const groupSubscription = this.groupsService.getGroups({ hasMappings: true }).subscribe({\r\n            next: (response) => {\r\n                this.groups = [\r\n                    { id: \"-1\", name: \"Filter > Ungrouped apps\", sortOrder: 0, rowVersion: '' },\r\n                    { id: \"0\", name: \"Filter > Grouped apps\", sortOrder: 0, rowVersion: '' },\r\n                    ...response?.data?.appGroups ?? []\r\n                ];\r\n                this.cdr.detectChanges();\r\n                if (!groupId) {\r\n                    this.groupSelect?.open();\r\n                }\r\n            },\r\n            error: () => {\r\n                this.isGroupsFetched = false;\r\n            }\r\n        })\r\n\r\n        this.subscriptions.add(groupSubscription);\r\n    }\r\n\r\n    applyFilter(event: Event): void {\r\n        const searchTerm = (event.target as HTMLInputElement).value;\r\n\r\n        if (searchTerm === this.queryParams.searchTerm) {\r\n            return;\r\n        }\r\n\r\n        this.searchTermSubject.next(searchTerm);\r\n    }\r\n\r\n    onGroupChange(event: MatSelectChange): void {\r\n\r\n        this.queryParams.groupId = event.value;\r\n\r\n        this.loadData();\r\n    }\r\n\r\n    clearSelection() {\r\n\r\n        if (this.queryParams.groupId === '' && this.queryParams.searchTerm === '') {\r\n            return;\r\n        }\r\n\r\n        if(this.isProvider){\r\n            this.queryParams.groupId = this.groupSelect!.value = '';\r\n            this.searchTermInput!.nativeElement.value = this.queryParams.searchTerm = '';\r\n        }\r\n        \r\n        this.loadData();\r\n    }\r\n\r\n    updateUrl(): void {\r\n        this.router.navigate([], {\r\n            queryParams: {\r\n                searchTerm: this.queryParams.searchTerm === '' ? null : this.queryParams.searchTerm,\r\n                groupId: this.queryParams.groupId === '' ? null : this.queryParams.groupId\r\n            },\r\n            queryParamsHandling: 'merge'\r\n        });\r\n    }\r\n\r\n    handleRouting(): void {\r\n        const dummyComponentSubscription = this.dummyComponentService.event$.subscribe(event => {\r\n            setTimeout(() => {\r\n                if (event === undefined) {\r\n                    return;\r\n                }\r\n\r\n                switch (event.path) {\r\n\r\n                    case APP_ROUTES.create:\r\n                        this.add();\r\n                        break;\r\n\r\n                    case APP_ROUTES.update:\r\n\r\n                        const updateParamSubscription = event.activatedRoute.paramMap.subscribe(params => {\r\n                            const slug = params.get('appId');\r\n\r\n                            if (!slug) {\r\n                                return;\r\n                            }\r\n\r\n                            const app = this.groupedApps.flatMap(g => g.apps).find(app => app.slug == slug);\r\n\r\n                            if (app) {\r\n                                this.edit(app);\r\n                                return;\r\n                            }\r\n\r\n                            const getAppSubscription = this.appsService.getAppBySlug({\r\n                                appIdOrSlug: slug\r\n                            }).subscribe((resp) => {\r\n\r\n                                if (resp.data) {\r\n                                    this.edit(resp.data);\r\n                                } else {\r\n                                    this.snackBar.open(`No data found for the given Id: ${slug}`, \"Close\", {\r\n                                        duration: 3000,\r\n                                        horizontalPosition: 'right',\r\n                                        verticalPosition: 'top',\r\n                                    });\r\n\r\n                                    this.router.navigate(['./'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                                }\r\n                            });\r\n\r\n                            this.subscriptions.add(getAppSubscription);\r\n                        });\r\n\r\n                        this.subscriptions.add(updateParamSubscription);\r\n                        break;\r\n\r\n                    case APP_ROUTES.view:\r\n                        // case APP_VIEW_ROUTES.viewNewIdentifierMapping:\r\n                        // case APP_VIEW_ROUTES.viewSettings:\r\n                        // case APP_VIEW_ROUTES.viewSetting:\r\n                        // case APP_VIEW_ROUTES.viewCreateSetting:\r\n                        // case APP_VIEW_ROUTES.viewUpdateSetting:\r\n                        // case APP_VIEW_ROUTES.viewCopySettingTo:\r\n                        // case APP_VIEW_ROUTES.viewSettingHistories:\r\n                        // case APP_VIEW_ROUTES.viewSettingHistory:\r\n                        // case APP_VIEW_ROUTES.viewInstances:\r\n                        // case APP_VIEW_ROUTES.viewInstance:\r\n\r\n                        const viewParamSubscription = event.activatedRoute.paramMap.subscribe(params => {\r\n                            const slug = params.get('appId');\r\n\r\n                            if (!slug) {\r\n                                return;\r\n                            }\r\n\r\n                            const app = this.groupedApps.flatMap(g => g.apps).find(app => app.slug == slug);\r\n\r\n                            if (app) {\r\n                                this.view(app.client.id, app.slug, app.client.name, app.id);\r\n                                return;\r\n                            }\r\n\r\n                            const getAppSubscription = this.appsService.getAppBySlug({\r\n                                appIdOrSlug: slug\r\n                            }).subscribe((response) => {\r\n                                const data = response.data;\r\n                                if (data) {\r\n                                    this.view(data.client.id, data.slug, data.client.name, data.id);\r\n                                } else {\r\n                                    this.snackBar.open(`No data found for the given Id: ${slug}`, \"Close\", {\r\n                                        duration: 3000,\r\n                                        horizontalPosition: 'right',\r\n                                        verticalPosition: 'top',\r\n                                    });\r\n\r\n                                    this.router.navigate(['./'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                                }\r\n                            });\r\n\r\n                            this.subscriptions.add(getAppSubscription);\r\n                        });\r\n\r\n                        this.subscriptions.add(viewParamSubscription);\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n\r\n        this.subscriptions.add(dummyComponentSubscription);\r\n    }\r\n\r\n    add() {\r\n\r\n        const subscription = this.dialog.open(AppCreateComponent, {\r\n            width: '1018px',\r\n            height: '550px',\r\n            minWidth: 'inherit',\r\n            maxWidth: 'inherit',\r\n            autoFocus: false\r\n        }).afterClosed().subscribe((result: GetGroupedAppsResponseApp) => {\r\n            if (result) {\r\n\r\n                this.appsCount++;\r\n\r\n                const group = result.group?.name ?? 'Ungrouped apps';\r\n                const groupIndex = this.groupedApps.findIndex(g => g.key === group);\r\n\r\n                if (this.isGroupsFetched && group !== 'Ungrouped apps' && result.group && !this.groups.some(g => g.id === result.group!.id)) {\r\n                    this.groups.push({\r\n                        id: result.group.id,\r\n                        name: result.group.name,\r\n                        sortOrder: result.group.sortOrder,\r\n                        rowVersion: ''\r\n                    });\r\n                }\r\n\r\n                if (groupIndex > -1) {\r\n                    this.groupedApps[groupIndex].apps.push(result);\r\n                } else {\r\n                    this.groupedApps.push({ key: group, apps: [result] });\r\n                    this.groupsCount++;\r\n                }\r\n            }\r\n\r\n            this.router.navigate(['./'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n\r\n    edit(model: GetGroupedAppsResponseApp): void {\r\n\r\n        const appEditorComponentModel: AppEditComponentModel = {\r\n            displayName: model.displayName,\r\n            clientName: model.client.name,\r\n            slug: model.slug,\r\n            appId: model.id,\r\n            clientId: model.client.id,\r\n            description: model.description,\r\n            imageUrl: model.imageUrl,\r\n            wikiUrl: model.wikiUrl,\r\n            group: model.group,\r\n            tags: model.tags,\r\n            rowVersion: model.rowVersion\r\n        };\r\n\r\n        if (model.group?.id === \"-1\") {\r\n            appEditorComponentModel.group = null;\r\n        }\r\n\r\n        const subscription = this.dialog.open(AppUpdateComponent, {\r\n            data: appEditorComponentModel,\r\n            minWidth: 500,\r\n            maxWidth: 500\r\n        }).afterClosed().subscribe((result: AppEditComponentReturnModel) => {\r\n            if (result) {\r\n\r\n                const oldGroupName = appEditorComponentModel.group?.name || 'Ungrouped apps';\r\n                const newGroupName = result.group?.name || 'Ungrouped apps';\r\n\r\n                const hasGroupNameChanged = oldGroupName !== newGroupName;\r\n\r\n                if (hasGroupNameChanged) {\r\n                    this.moveAppBetweenGroups(model.client.id, oldGroupName, newGroupName, result);\r\n                } else {\r\n                    this.updateAppInGroup(model.client.id, result);\r\n                }\r\n\r\n                if(result.type === \"Fetch Latest\"){\r\n                    setTimeout(() => {\r\n                        this.router.navigate([`./${model.slug}/update`], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n                    }, 500)\r\n                }\r\n            }\r\n\r\n            this.router.navigate(['./'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    updateAppInGroup(clientId: string, updatedApp: AppEditComponentReturnModel): void {\r\n        const currentGroupName = updatedApp.group?.name || 'Ungrouped apps';\r\n        const group = this.groupedApps.find(g => g.key === currentGroupName);\r\n\r\n        if (group) {\r\n            const appInGroup = group.apps.find(a => a.client.id === clientId);\r\n            if (appInGroup) {\r\n                this.assignAppProperies(appInGroup, updatedApp);\r\n            }\r\n        }\r\n    }\r\n\r\n    moveAppBetweenGroups(clientId: string, oldGroupName: string, newGroup: string, updatedApp: AppEditComponentReturnModel) {\r\n\r\n        if (!updatedApp.group) {\r\n            updatedApp.group = { id: '-1', name: 'Ungrouped apps', sortOrder: 0 };\r\n        }\r\n\r\n        const oldGroupIndex = this.groupedApps.findIndex(g => g.key === oldGroupName);\r\n        const newGroupIndex = this.groupedApps.findIndex(g => g.key === newGroup);\r\n\r\n        if (oldGroupIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        const oldGroupApps = this.groupedApps[oldGroupIndex].apps;\r\n        const appIndex = oldGroupApps.findIndex(a => a.client.id === clientId);\r\n\r\n        if (appIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        const app = oldGroupApps[appIndex];\r\n\r\n        this.assignAppProperies(app, updatedApp);\r\n\r\n        if (newGroupIndex > -1) {\r\n            this.groupedApps[newGroupIndex].apps.push(app);\r\n        } else {\r\n            this.groupedApps.push({ key: newGroup, apps: [app] });\r\n            this.groupsCount++;\r\n            if (updatedApp.group.id !== \"-1\") {\r\n                this.groups.push({\r\n                    id: updatedApp.group.id,\r\n                    name: updatedApp.group.name,\r\n                    sortOrder: updatedApp.group.sortOrder,\r\n                    rowVersion: ''\r\n                });\r\n            }\r\n        }\r\n\r\n        oldGroupApps.splice(appIndex, 1);\r\n        if (oldGroupApps.length === 0) {\r\n            this.groupedApps.splice(oldGroupIndex, 1);\r\n            this.groupsCount--;\r\n\r\n            const oldGroupInGroups = this.groups.findIndex(g => g.name === oldGroupName);\r\n\r\n            const group = this.groups[oldGroupInGroups];\r\n\r\n            if (oldGroupInGroups !== -1 && group.id !== \"-1\" && group.id !== \"0\") {\r\n                this.groups.splice(oldGroupInGroups, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    assignAppProperies(app: GetGroupedAppsResponseApp, result: AppEditComponentReturnModel) {\r\n        app.displayName = result.displayName;\r\n        app.client.name = result.clientName;\r\n        app.slug = result.slug;\r\n        app.description = result.description;\r\n        app.imageUrl = result.imageUrl;\r\n        app.wikiUrl = result.wikiUrl;\r\n        app.tags = result.tags;\r\n        app.group = result.group == null ? null : {\r\n            id: result.group.id,\r\n            name: result.group.name,\r\n            sortOrder: result.group.sortOrder\r\n        };\r\n        app.rowVersion = result.rowVersion;\r\n    }\r\n\r\n    delete(app: GetGroupedAppsResponseApp): void {\r\n\r\n        const title = 'Confirm delete';\r\n        const message = `Are you sure you want to delete the \"${app.client.name}\" app? This action cannot be undone.`;\r\n\r\n        const confirmationDialogComponentModel: ConfirmationDialogComponentModel = {\r\n            title,\r\n            message,\r\n            requireConfirmation: true\r\n        };\r\n\r\n        const subscription = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: '500px',\r\n            data: confirmationDialogComponentModel\r\n        }).afterClosed().subscribe(result => {\r\n            if (result) {\r\n                const internalSubscription = this.appsService.deleteApp({ appId: app.id, rowVersion: app.rowVersion }).subscribe(() => {\r\n                    this.appsCount--;\r\n\r\n                    const groupName = app.group?.name ?? 'Ungrouped apps';\r\n                    const groupIndex = this.groupedApps.findIndex(g => g.key === groupName);\r\n\r\n                    if (groupIndex > -1) {\r\n                        const appIndex = this.groupedApps[groupIndex].apps.findIndex(a => a.client.id === app.client.id);\r\n                        if (appIndex > -1) {\r\n                            this.groupedApps[groupIndex].apps.splice(appIndex, 1);\r\n                            if (this.groupedApps[groupIndex].apps.length === 0) {\r\n                                this.groupedApps.splice(groupIndex, 1);\r\n                                this.groupsCount--;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.subscriptions.add(internalSubscription);\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    view(clientId: string, slug: string, clientName: string, appId: string) {\r\n\r\n        const data: AppViewComponentModel = { clientId, appSlug: slug, clientName, appId };\r\n\r\n        const subscription = this.dialog.open(AppViewComponent, {\r\n            data,\r\n            width: '1350px',\r\n            height: '680px',\r\n            minWidth: 'inherit',\r\n            maxWidth: 'inherit',\r\n            autoFocus: false,\r\n            closeOnNavigation: false\r\n        }).afterClosed().subscribe(() => {\r\n\r\n            this.router.navigate(['./'], { relativeTo: this.route, queryParamsHandling: 'merge' });\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    copyToClipboard(content: string) {\r\n        this.utilityService.copyToClipboard(content);\r\n    }\r\n\r\n    expandAll() {\r\n        this.accordion.openAll();\r\n    }\r\n\r\n    collapseAll() {\r\n        this.accordion.closeAll();\r\n    }\r\n}","<div class=\"px-3\">\r\n  <div class=\"title mb-3\">\r\n    <h1>Apps</h1>\r\n  </div>\r\n\r\n  <div class=\"d-flex-wrapper\" *ngIf=\"isProvider\">\r\n    <div class=\"d-flex\">\r\n      <mat-form-field appearance=\"outline\" class=\"w-25 mr-2 border-bottom-1\" (click)=\"getGroups()\">\r\n        <mat-label>Group</mat-label>\r\n        <mat-select #groupSelect (selectionChange)=\"onGroupChange($event)\">\r\n          <mat-option *ngFor=\"let group of groups\" [value]=\"group.id\">{{group.name}}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" class=\"w-25 mr-2 border-bottom-1\">\r\n        <mat-label>Search</mat-label>\r\n        <input #searchTermInput matInput (keyup)=\"applyFilter($event)\">\r\n        <mat-icon matSuffix>search</mat-icon>\r\n        <mat-hint *ngIf=\"appsFetched\">{{groupsCount}} groups, {{appsCount}} apps match</mat-hint>\r\n      </mat-form-field>\r\n      <button class=\"mt-2\" mat-stroked-button color=\"primary\" (click)=\"clearSelection()\"\r\n        *ngIf=\"queryParams.searchTerm || this.queryParams.groupId\">\r\n        <mat-icon>clear</mat-icon>\r\n        Clear selection\r\n      </button>\r\n      <span class=\"spacer\"></span>\r\n      <button mat-icon-button matTooltip=\"Expand All\" (click)=\"expandAll()\"\r\n        [disabled]=\"!groupedApps.length\"><mat-icon>expand_more</mat-icon></button>\r\n      <button mat-icon-button matTooltip=\"Collapse All\" (click)=\"collapseAll()\"\r\n        [disabled]=\"!groupedApps.length\"><mat-icon>expand_less</mat-icon></button>\r\n    </div>\r\n  </div>\r\n  <mat-accordion multi>\r\n    <mat-expansion-panel *ngFor=\"let group of groupedApps\" [expanded]=\"true\">\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          {{ group.key }}\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <div class=\"card-container\">\r\n        <mat-card [ngClass]=\"this.menuOpened ? 'card-item-two' : 'card-item-three'\" *ngFor=\"let app of group.apps\">\r\n          <mat-card-header>\r\n            <div mat-card-avatar class=\"mat-bg-primary\">\r\n              <img class=\"app-icon bg-white\">\r\n            </div>\r\n            <mat-card-title>{{app.displayName}}</mat-card-title>\r\n            <mat-card-subtitle class=\"d-flex\">\r\n              <span class=\"card-subtitle-client-id\" style=\"font-size:13px;\">ClientId: <span>{{app.client.id}}</span></span>\r\n              <span class=\"position-relative\"><button mat-icon-button class=\"list-content-copy icon-mini d-inherit\" matTooltip=\"Copy\" matTooltipPosition=\"right\"\r\n                (click)=\"copyToClipboard(app.client.id)\" *ngIf=\"isConnectionSecure\"><mat-icon>content_copy</mat-icon>\r\n              </button></span>\r\n              \r\n            </mat-card-subtitle>\r\n            <span class=\"spacer\"></span>\r\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n              <button mat-menu-item [routerLink]=\"[app.slug, 'update']\" queryParamsHandling=\"merge\">\r\n                <mat-icon>edit</mat-icon>\r\n                <span>Update</span>\r\n              </button>\r\n              <button mat-menu-item (click)=\"delete(app)\">\r\n                <mat-icon>delete</mat-icon>\r\n                <span>Delete</span>\r\n              </button>\r\n              <a *ngIf=\"app.wikiUrl\" mat-menu-item href=\"{{app.wikiUrl}}\" target=\"_blank\">\r\n                <mat-icon>open_in_new</mat-icon>\r\n                <span>Wiki</span>\r\n              </a>\r\n            </mat-menu>\r\n          </mat-card-header>\r\n          <mat-card-content class=\"ww-anywhere\">\r\n            <p>{{app.description | truncate: 250}}</p>\r\n            <mat-chip-set>\r\n              <mat-chip *ngFor=\"let tag of app.tags\" disabled>{{tag.name}}</mat-chip>\r\n            </mat-chip-set>\r\n          </mat-card-content>\r\n          <mat-card-actions class=\"card-footer\">\r\n              <button mat-button color=\"primary\" [routerLink]=\"[app.slug]\"  queryParamsHandling=\"merge\">View</button>\r\n          </mat-card-actions>\r\n        </mat-card>\r\n      </div>\r\n\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n\r\n</div>\r\n\r\n<button mat-fab class=\"position-fixed b-0 r-0 mr-3 mb-3\" color=\"primary\" matTooltip=\"New app\"\r\n  [routerLink]=\"['./create']\" queryParamsHandling=\"merge\" *ngIf=\"isProvider\">\r\n  <mat-icon>add</mat-icon>\r\n</button>\r\n\r\n<mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\" class=\"position-fixed l-0 b-0\"></mat-progress-bar>\r\n\r\n<router-outlet></router-outlet>","import { NgModule } from \"@angular/core\";\r\nimport { JsonEditorComponent } from \"./json-editor.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        JsonEditorComponent\r\n    ],\r\n    imports: [CommonModule],\r\n    exports: [JsonEditorComponent]\r\n})\r\nexport class JsonEditorModule { }","import { NgModule } from \"@angular/core\";\r\nimport { JsonDiffEditorComponent } from \"./json-diff-editor.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        JsonDiffEditorComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatCheckboxModule\r\n    ],\r\n    exports: [JsonDiffEditorComponent]\r\n})\r\nexport class JsonDiffEditorModule { }","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class SettingHistoryRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { SettingHistoryListComponent } from './components/setting-history-list/setting-history-list.component';\r\nimport { JsonEditorModule } from '../../shared/components/json-editor/json-editor.module';\r\nimport { JsonDiffEditorModule } from '../../shared/components/json-diff-editor/json-diff-editor.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { SettingHistoryRoutingModule } from './setting-history-routing.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SettingHistoryListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SettingHistoryRoutingModule,\r\n    FormsModule,\r\n    JsonEditorModule,\r\n    JsonDiffEditorModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatSelectModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatDialogModule\r\n  ]\r\n})\r\nexport class SettingHistoryModule { }","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nconst routes: Routes = [\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class SettingRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { SettingCreateComponent } from './components/setting-create/setting-create.component';\r\nimport { SettingListComponent } from './components/setting-list/setting-list.component';\r\nimport { SettingUpdateComponent } from './components/setting-update/setting-update.component';\r\nimport { SettingHistoryModule } from '../setting-history/setting-history.module';\r\nimport { SettingRoutingModule } from './setting-routing.module';\r\nimport { JsonEditorModule } from '../../shared/components/json-editor/json-editor.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { SettingCopyToComponent } from './components/setting-copy-to/setting-copy-to.component';\r\nimport { IdentifierMappingCreateComponent } from './components/identifier-mapping-create/identifier-mapping-create.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SettingCreateComponent,\r\n    SettingListComponent,\r\n    SettingUpdateComponent,\r\n    SettingCopyToComponent,\r\n    IdentifierMappingCreateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SettingRoutingModule,\r\n    SettingHistoryModule,\r\n    JsonEditorModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatButtonToggleModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatSlideToggleModule,\r\n    MatDialogModule,\r\n    MatAutocompleteModule\r\n  ],\r\n  exports: [\r\n    SettingListComponent,\r\n  ]\r\n})\r\nexport class SettingModule { }","import { NgModule } from '@angular/core';\r\nimport { InstanceListComponent } from './components/instance-list/instance-list.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    InstanceListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [\r\n    InstanceListComponent\r\n  ]\r\n})\r\nexport class InstanceModule { }","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { DummyComponentService } from \"./dummy-component.service\";\r\n\r\n@Component({\r\n    template: ''\r\n})\r\nexport class DummyChildComponent implements OnInit, OnDestroy {\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private dummyComponentService: DummyComponentService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        const path = this.route.snapshot.data['path'] as string;\r\n        const data = this.route.snapshot.data['data'] as any;\r\n\r\n        if (path) {\r\n            this.dummyComponentService.emitEvent({\r\n                path: path,\r\n                data: data,\r\n                activatedSnapshot: this.route.snapshot,\r\n                activatedRoute: this.route\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dummyComponentService.emitEvent(undefined);\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AppListComponent } from \"./components/app-list/app-list.component\";\r\nimport { APP_ROUTES, APP_VIEW_ROUTES } from \"./app-routes\";\r\nimport { DummyComponent } from \"../../shared/components/dummy/dummy.component\";\r\nimport { DummyChildComponent } from \"../../shared/components/dummy/dummy-child.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: APP_ROUTES.base, component: AppListComponent, children: [\r\n            {\r\n                path: APP_ROUTES.create,\r\n                pathMatch: 'full',\r\n                component: DummyComponent,\r\n                data: {\r\n                    path: APP_ROUTES.create,\r\n                }\r\n            },\r\n            {\r\n                path: APP_ROUTES.update,\r\n                pathMatch: 'full',\r\n                component: DummyComponent,\r\n                data: {\r\n                    path: APP_ROUTES.update\r\n                }\r\n            },\r\n            {\r\n                path: APP_ROUTES.view,\r\n                component: DummyComponent,\r\n                data: {\r\n                    path: APP_ROUTES.view,\r\n                    data: APP_ROUTES.view\r\n                },\r\n                children: [\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewNewIdentifierMapping,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewNewIdentifierMapping\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewSettings,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewSettings\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewSettings2,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewSettings2\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewCreateSetting,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewCreateSetting\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewSetting,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewSetting\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewUpdateSetting,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewUpdateSetting\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewCopySettingTo,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewCopySettingTo\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewSettingHistories,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewSettingHistories\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewSettingHistory,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewSettingHistory\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewInstances,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewInstances\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewInstances2,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewInstances2\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewInstance,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewInstance\r\n                        }\r\n                    },\r\n                    {\r\n                        path: APP_VIEW_ROUTES.viewConfiguration,\r\n                        component: DummyChildComponent,\r\n                        data: {\r\n                            path: APP_VIEW_ROUTES.viewConfiguration\r\n                        }\r\n                    },\r\n                    {\r\n                        path: '**', redirectTo: APP_VIEW_ROUTES.viewSettings2\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    { path: '**', redirectTo: APP_ROUTES.base }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { NgModule } from \"@angular/core\";\r\nimport { DummyComponent } from \"./dummy.component\";\r\nimport { DummyChildComponent } from \"./dummy-child.component\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n    declarations: [DummyComponent, DummyChildComponent],\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class DummyModule { }","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nconst routes: Routes = [\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ConfigurationRoutingModule { }","import { NgModule } from '@angular/core';\r\nimport { ConfigurationUpdateComponent } from './components/configuration-update/configuration-update.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { ConfigurationRoutingModule } from './configuration-routing.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConfigurationUpdateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ConfigurationRoutingModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    MatBadgeModule,\r\n    MatExpansionModule\r\n  ],\r\n  exports: [\r\n    ConfigurationUpdateComponent\r\n  ]\r\n})\r\nexport class ConfigurationModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { AppListComponent } from './components/app-list/app-list.component';\r\nimport { AppCreateComponent } from './components/app-create/app-create.component';\r\nimport { AppUpdateComponent } from './components/app-update/app-update.component';\r\nimport { AppViewComponent } from './components/app-view/app-view.component';\r\nimport { SettingModule } from '../setting/setting.module';\r\nimport { InstanceModule } from '../instance/instance.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { DummyModule } from '../../shared/components/dummy/dummy-module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ConfigurationModule } from \"../configuration/configuration.module\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppCreateComponent,\r\n    AppListComponent,\r\n    AppUpdateComponent,\r\n    AppViewComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    DummyModule,\r\n    SettingModule,\r\n    InstanceModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatOptionModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatChipsModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatAutocompleteModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    ConfigurationModule\r\n]\r\n})\r\nexport class AppModule { }"],"mappings":"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","names":["skip","_c0","_c1","window","skip","rowVersion","group","group","_c0","_c1","group","group","_c1","_c0","_c1","_c2","TransitionCheckState","nextUniqueId","_c0","_c1","nextUniqueId","defaults","model","_c3","_c4","_c5","_c2","ServiceType","DataAccessType","ReloadStrategy","_c0","_c1","_c2","_c3","_c4","_c5","_c6","nextUniqueId","identifier","identifierId","_c0","ViewTab","_c2","_c3","_c4","app","group","routes","routes","routes","routes"],"x_google_ignoreList":[1,2,12,22,27,38]}