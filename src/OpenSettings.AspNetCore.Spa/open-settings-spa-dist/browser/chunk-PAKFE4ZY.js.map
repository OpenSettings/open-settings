{"version":3,"sources":["src/app/shared/layouts/default-layout/default-layout-routes.ts","src/app/features/licenses/license-view/license-view.component.ts","src/app/features/licenses/license-view/license-view.component.html","src/app/shared/services/notifications.service.ts","src/app/shared/components/account-menu/account-menu.component.ts","src/app/shared/components/account-menu/account-menu.component.html","node_modules/@angular/material/fesm2022/sidenav.mjs","node_modules/@angular/material/fesm2022/toolbar.mjs","src/app/shared/layouts/default-layout/default-layout.component.ts","src/app/shared/layouts/default-layout/default-layout.component.html","src/app/shared/layouts/default-layout/default-layout-routing.module.ts","src/app/shared/components/confirmation-dialog/confirmation-dialog.module.ts","src/app/shared/components/account-menu/account-menu.module.ts","src/app/features/licenses/license-upgrade/license-upgrade.module.ts","src/app/features/licenses/license-view/license-view.module.ts","src/app/shared/layouts/default-layout/default-layout.module.ts"],"sourcesContent":["export const DEFAULT_ROUTES = {\r\n    base: 'apps',\r\n    about: 'about',\r\n    groups: 'groups',\r\n    identifiers: 'identifiers',\r\n    tags: 'tags',\r\n    sponsors: 'sponsors',\r\n    redirectTo: 'apps'\r\n};","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { License, WindowService } from \"../../../core/services/window.service\";\r\nimport { filter, Subscription, switchMap } from \"rxjs\";\r\nimport { ConfirmationDialogComponentModel } from \"../../../shared/components/confirmation-dialog/confirmation-dialog-component.model\";\r\nimport { ConfirmationDialogComponent } from \"../../../shared/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { LicensesService } from \"../services/licenses.service\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { LicenseUpgradeComponent } from \"../license-upgrade/license-upgrade.component\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n@Component({\r\n    templateUrl: './license-view.component.html'\r\n})\r\nexport class LicenseViewComponent implements OnInit, OnDestroy {\r\n    license?: License;\r\n    subscriptions = new Subscription();\r\n    isLoading: boolean = false;\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private licensesService: LicensesService,\r\n        private windowService: WindowService,\r\n        private snackBar: MatSnackBar) { }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        const licenseSubscription = this.windowService.license$.subscribe({\r\n            next: (license) => {\r\n                this.license = license;\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(licenseSubscription);\r\n    }\r\n\r\n    upgradeLicense() {\r\n        this.dialog.open(LicenseUpgradeComponent, {\r\n            width: '500px',\r\n            height: '265px',\r\n            minWidth: 'inherit',\r\n            maxWidth: 'inherit',\r\n            autoFocus: false\r\n        });\r\n    }\r\n\r\n    deleteLicense() {\r\n\r\n        const referenceId = this.license?.referenceId;\r\n\r\n        if (!referenceId) {\r\n            return;\r\n        }\r\n\r\n        const title = 'Confirm delete';\r\n        const message = `Are you sure you want to delete the '${referenceId}' license? This action cannot be undone.`;\r\n\r\n        const confirmationDialogComponentModel: ConfirmationDialogComponentModel = {\r\n            title,\r\n            message,\r\n            requireConfirmation: true\r\n        };\r\n\r\n        const subscription = this.dialog\r\n            .open(ConfirmationDialogComponent, {\r\n                width: '500px',\r\n                data: confirmationDialogComponentModel\r\n            })\r\n            .afterClosed()\r\n            .pipe(\r\n                filter(result => !!result),\r\n                switchMap(() => {\r\n\r\n                    this.isLoading = true;\r\n\r\n                    return this.licensesService.deleteLicense(referenceId);\r\n                }),\r\n                switchMap(() => this.licensesService.getCurrentLicense())\r\n            )\r\n            .subscribe({\r\n                next: (response) => {\r\n\r\n                    const currentLicense = response.data as License;\r\n\r\n                    if (!currentLicense) {\r\n                        this.isLoading = false;\r\n                        return;\r\n                    }\r\n\r\n                    const initialLicense = this.windowService.license;\r\n\r\n                    const licenseUpdateMessage = this.licensesService.getLicenseUpdateMessage(initialLicense, currentLicense);\r\n\r\n                    this.windowService.updateLicense(currentLicense);\r\n\r\n                    this.isLoading = false;\r\n\r\n                    this.snackBar.open(licenseUpdateMessage.message, 'Close', {\r\n                        horizontalPosition: 'right',\r\n                        verticalPosition: 'top',\r\n                        duration: licenseUpdateMessage.duration\r\n                    });\r\n                },\r\n                error: (err) => {\r\n                    this.isLoading = false;\r\n                }\r\n            });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n}","<div class=\"loading-container\" *ngIf=\"isLoading\">\r\n    <div class=\"mat-bg-primary position-absolute rounded-circle app-icon-animation\"><img class=\"app-icon bg-white\"></div>\r\n    <div class=\"loading-spinner\"></div>\r\n</div>\r\n\r\n<h2 mat-dialog-title>\r\n    License Information\r\n    <mat-icon class=\"position-absolute t-4 ml-2\" matTooltip=\"Only active license will be shown here. If multiple licenses added, the highest edition with the longest expiry date takes precedence.\">info</mat-icon>\r\n    <button class=\"position-absolute r-0 t-0\" mat-icon-button mat-dialog-close matTooltip=\"Close\"\r\n        matTooltipPosition=\"above\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n</h2>\r\n<mat-dialog-content *ngIf=\"license\">\r\n    <table class=\"custom-mat-table\" *ngIf=\"license\">\r\n        <tbody>\r\n            <tr *ngIf=\"license.holder\">\r\n                <td class=\"custom-mat-cell key-cell\">Holder:</td>\r\n                <td class=\"custom-mat-cell\">{{license.holder}}</td>\r\n            </tr>\r\n\r\n            <tr *ngIf=\"license.referenceId\">\r\n                <td class=\"custom-mat-cell key-cell\">Reference Id:</td>\r\n                <td class=\"custom-mat-cell\">{{license.referenceId}}</td>\r\n            </tr>\r\n\r\n            <tr *ngIf=\"license.edition\">\r\n                <td class=\"custom-mat-cell key-cell\">Edition:</td>\r\n                <td class=\"custom-mat-cell\">{{license.editionStringRepresentation}}</td>\r\n            </tr>\r\n\r\n            <tr *ngIf=\"license.issuedAt\">\r\n                <td class=\"custom-mat-cell key-cell\">Activated On:</td>\r\n                <td class=\"custom-mat-cell\">{{license.issuedAt | date: 'dd-MM-yyyy HH:mm'}}</td>\r\n            </tr>\r\n\r\n            <tr *ngIf=\"license.expiryDate\">\r\n                <td class=\"custom-mat-cell key-cell\">Expiry Date:</td>\r\n                <td class=\"custom-mat-cell\">{{license.expiryDate | date: 'dd-MM-yyyy HH:mm'}}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td class=\"custom-mat-cell key-cell\">Status:</td>\r\n                <td class=\"custom-mat-cell\">{{license.isExpired ? 'Inactive' : 'Active'}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button color=\"primary\" (click)=\"upgradeLicense()\">{{license?.edition === 500 ? 'Re-new' : 'Upgrade'}}</button>\r\n    <button mat-button color=\"warn\" *ngIf=\"license?.referenceId\" (click)=\"deleteLicense()\">Delete</button>\r\n</mat-dialog-actions>","import { HttpHeaders, HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { Injectable, OnDestroy } from \"@angular/core\";\r\nimport { Observable, Subject, takeUntil } from \"rxjs\";\r\nimport { AuthService } from \"../../core/services/auth.service\";\r\nimport { WindowService } from \"../../core/services/window.service\";\r\nimport { IResponse, IResponseAny } from \"../models/response\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NotificationsService implements OnDestroy {\r\n    private headers: HttpHeaders = new HttpHeaders();\r\n    private route: string;\r\n    private destroy$ = new Subject<void>();\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private authService: AuthService,\r\n        windowService: WindowService) {\r\n        this.route = windowService.controllerOptions.route;\r\n        this.authService.isAuthenticated$\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(isAuthenticated => {\r\n                this.headers = isAuthenticated\r\n                    ? new HttpHeaders({ 'Authorization': `${this.authService.token}` })\r\n                    : new HttpHeaders();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    createNotification(request: CreateNotificationRequest): Observable<IResponse<CreateNotificationResponse>> {\r\n\r\n        const url = this.route + '/v1/notifications';\r\n\r\n        return this.httpClient.post<IResponse<CreateNotificationResponse>>(url, request.body, { headers: this.headers });\r\n    }\r\n\r\n\r\n    markNotificationsAsOpened(request: MarkNotificationsAsOpenedRequest): Observable<IResponseAny> {\r\n\r\n        const url = this.route + `/v1/notifications/users/${request.userId}/open`;\r\n\r\n        return this.httpClient.post<IResponseAny>(url, null, { headers: this.headers });\r\n    }\r\n\r\n    markNotificationAsViewed(request: MarkNotificationAsRequest): Observable<IResponseAny> {\r\n\r\n        const url = this.route + `/v1/notifications/${request.notificationId}/users/${request.userId}/view`;\r\n\r\n        return this.httpClient.post<IResponseAny>(url, null, { headers: this.headers });\r\n    }\r\n\r\n    markNotificationAsDismissed(request: MarkNotificationAsRequest): Observable<IResponseAny> {\r\n\r\n        const url = this.route + `/v1/notifications/${request.notificationId}/users/${request.userId}/dismiss`;\r\n\r\n        return this.httpClient.post<IResponseAny>(url, null, { headers: this.headers });\r\n    }\r\n\r\n    getNotifications(request: GetNotificationsRequest): Observable<IResponse<GetNotificationsResponse>> {\r\n        let url = this.route + '/v1/notifications';\r\n\r\n        let params = new HttpParams();\r\n\r\n        if (request.isExpired !== undefined) {\r\n            params = params.append(\"isExpired\", request.isExpired);\r\n        }\r\n\r\n        if (request.type !== undefined) {\r\n            params = params.append(\"type\", request.type);\r\n        }\r\n\r\n        if (request.source !== undefined) {\r\n            params = params.append(\"source\", request.source);\r\n        }\r\n\r\n        const queryParams = params.toString()\r\n\r\n        url += queryParams ? '?' + queryParams : '';\r\n\r\n        return this.httpClient.get<IResponse<GetNotificationsResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    getUserNotifications(request: GetUserNotificationsRequest): Observable<IResponse<GetUserNotificationsResponse>> {\r\n\r\n        let url = this.route + '/v1/notifications/users/' + request.userId;\r\n\r\n        let params = new HttpParams();\r\n\r\n        if (request.isOpened !== undefined) {\r\n            params = params.append(\"isOpened\", request.isOpened);\r\n        }\r\n\r\n        if (request.isViewed !== undefined) {\r\n            params = params.append(\"isViewed\", request.isViewed);\r\n        }\r\n\r\n        if (request.isDismissed !== undefined) {\r\n            params = params.append(\"isDismissed\", request.isDismissed);\r\n        }\r\n\r\n        if (request.isExpired !== undefined) {\r\n            params = params.append(\"isExpired\", request.isExpired);\r\n        }\r\n\r\n        if (request.type !== undefined) {\r\n            params = params.append(\"type\", request.type);\r\n        }\r\n\r\n        if (request.source !== undefined) {\r\n            params = params.append(\"source\", request.source);\r\n        }\r\n\r\n        const queryParams = params.toString()\r\n\r\n        url += queryParams ? '?' + queryParams : '';\r\n\r\n        return this.httpClient.get<IResponse<GetUserNotificationsResponse>>(url, { headers: this.headers });\r\n    }\r\n\r\n    dispatchNotificationsToUsers(request: DispatchNotificationsToUsersRequest): Observable<IResponseAny> {\r\n\r\n        const url = this.route + `/v1/notifications/${request.notificationId}/users/dispatch`;\r\n\r\n        return this.httpClient.post<IResponseAny>(url, null, { headers: this.headers });\r\n    }\r\n}\r\n\r\nexport interface MarkNotificationAsRequest {\r\n    userId: string;\r\n    notificationId: string;\r\n}\r\n\r\nexport interface MarkNotificationsAsOpenedRequest {\r\n    userId: string;\r\n}\r\n\r\nexport interface CreateNotificationResponse {\r\n    id: string;\r\n}\r\n\r\nexport interface CreateNotificationRequest {\r\n    body: {\r\n        notificationId: string;\r\n        titel: string;\r\n        message: string;\r\n        type: NotificationType\r\n    }\r\n}\r\n\r\nexport enum NotificationType {\r\n    Neutral = 1,\r\n    Info = 2,\r\n    Accent = 3,\r\n    Success = 4,\r\n    Warn = 5,\r\n    Error = 6,\r\n    NewVersionAvailable = 7,\r\n    VersionMismatch = 8,\r\n    LicenseExpiring = 9\r\n}\r\n\r\nexport interface DispatchNotificationsToUsersRequest {\r\n    notificationId: string;\r\n}\r\n\r\nexport interface GetNotificationsRequest {\r\n    isExpired?: boolean;\r\n    type?: NotificationType;\r\n    source?: NotificationSource;\r\n}\r\n\r\nexport interface GetUserNotificationsRequest {\r\n    userId: string;\r\n    isOpened?: boolean;\r\n    isViewed?: boolean;\r\n    isDismissed?: boolean;\r\n    isExpired?: boolean;\r\n    type?: NotificationType;\r\n    source?: NotificationSource;\r\n}\r\n\r\nexport interface GetNotificationsResponse {\r\n    notifications: GetNotificationsResponseNotification[];\r\n}\r\n\r\nexport interface GetNotificationsResponseNotification {\r\n    id: string;\r\n    title: string;\r\n    message: string;\r\n    type: NotificationType;\r\n    source: NotificationSource;\r\n    metadata: { [key: string]: any };\r\n    isExpired: boolean;\r\n    createdOn: Date;\r\n    creatorName: string;\r\n}\r\n\r\nexport interface GetUserNotificationsResponse {\r\n    notificationCounts: GetUserNotificationsResponseNotificationCounts;\r\n    notifications: GetUserNotificationsResponseNotification[];\r\n}\r\n\r\nexport interface GetUserNotificationsResponseNotificationCounts {\r\n    opened: number;\r\n    notOpened: number;\r\n    viewed: number;\r\n    notViewed: number;\r\n    dismissed: number;\r\n    notDismissed: number;\r\n}\r\n\r\nexport interface GetUserNotificationsResponseNotification {\r\n    id: string;\r\n    title: string;\r\n    message: string;\r\n    type: NotificationType;\r\n    source: NotificationSource;\r\n    metadata: { [key: string]: any };\r\n    isOpened: boolean;\r\n    isViewed: boolean;\r\n    isDismissed: boolean;\r\n    isExpired: boolean;\r\n    createdOn: Date;\r\n    creatorName: string;\r\n}\r\n\r\nexport enum NotificationSource {\r\n    User = 1,\r\n    System = 2,\r\n    OpenSettings = 3\r\n}","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\r\nimport { ThemePreference, ThemeService } from \"../../../core/services/theme.service\";\r\nimport { ThemeInfo } from \"../../../core/models/theme-info.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"../../../core/services/auth.service\";\r\nimport { MatMenuTrigger } from \"@angular/material/menu\";\r\nimport { Subscription, timer } from \"rxjs\";\r\nimport { GetUserNotificationsResponseNotification, GetUserNotificationsResponseNotificationCounts, NotificationsService, NotificationType } from \"../../services/notifications.service\";\r\nimport { getDateTimeUtcNow } from \"../../utils/other-utils\";\r\nimport { GetLinksResponseLink, OpenSettingsService } from \"../../services/open-settings.service\";\r\n\r\n@Component({\r\n    selector: 'app-account-menu',\r\n    templateUrl: './account-menu.component.html',\r\n    styleUrl: './account-menu.component.css'\r\n})\r\nexport class AccountMenuComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    themeInfo?: ThemeInfo;\r\n    selectedMenu?: string;\r\n    nextMenu?: string\r\n    currentTheme?: { preference: ThemePreference, name: string };\r\n    isAuthenticated?: boolean;\r\n    displayName?: string;\r\n    initials?: string;\r\n    userId?: string;\r\n    email?: string;\r\n    themes: ThemeInfo[] = [];\r\n    notificationCounts: GetUserNotificationsResponseNotificationCounts = {\r\n        opened: 0,\r\n        notOpened: 0,\r\n        viewed: 0,\r\n        notViewed: 0,\r\n        dismissed: 0,\r\n        notDismissed: 0\r\n    };\r\n    notifications: GetUserNotificationsResponseNotification[] = [];\r\n    docs: GetLinksResponseLink = { url: '', isActive: false };\r\n    help: GetLinksResponseLink = { url: '', isActive: false };\r\n    feedback: GetLinksResponseLink = { url: '', isActive: false };\r\n\r\n    private subscriptions: Subscription = new Subscription();\r\n\r\n    @ViewChild(MatMenuTrigger) menuTrigger!: MatMenuTrigger;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private authService: AuthService,\r\n        private themeService: ThemeService,\r\n        private notificationsService: NotificationsService,\r\n        private openSettingsService: OpenSettingsService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.themes = this.themeService.themes;\r\n        this.themeInfo = this.themeService.getThemeInfo(this.themeService.themePreference ?? 'light');\r\n        this.isAuthenticated = this.authService.isAuthenticated;\r\n\r\n        const claims = this.authService.claims;\r\n        this.displayName = claims['db_user_displayName'] ?? '';\r\n        this.initials = claims['db_user_initials'] ?? '';\r\n        this.userId = claims['db_user_id'] ?? '';\r\n        this.email = claims['db_user_email'] ?? '';\r\n\r\n        if (this.userId) {\r\n            const subscription = this.notificationsService.getUserNotifications({\r\n                userId: this.userId,\r\n                isDismissed: false\r\n            }).subscribe({\r\n                next: (response) => {\r\n\r\n                    const responseData = response.data;\r\n\r\n                    if (!responseData) {\r\n                        return;\r\n                    }\r\n\r\n                    this.notificationCounts.opened += responseData.notificationCounts.opened;\r\n                    this.notificationCounts.notOpened += responseData.notificationCounts.notOpened;\r\n                    this.notificationCounts.viewed += responseData.notificationCounts.viewed;\r\n                    this.notificationCounts.notViewed += responseData.notificationCounts.notViewed;\r\n                    this.notificationCounts.dismissed += responseData.notificationCounts.dismissed;\r\n                    this.notificationCounts.notDismissed += responseData.notificationCounts.notDismissed;\r\n\r\n                    responseData.notifications.forEach(notification => {\r\n                        this.notifications.push(notification);\r\n                    });\r\n                }\r\n            });\r\n\r\n            this.subscriptions.add(subscription);\r\n        } else {\r\n            this.getNotifications();\r\n        }\r\n\r\n        const linkSubscription = this.openSettingsService.getLinks().subscribe(response => {\r\n\r\n            const docs = response['docs'];\r\n            const help = response['help'];\r\n            const feedback = response['feedback'];\r\n\r\n            if (docs) {\r\n                this.docs.url = docs.url;\r\n                this.docs.isActive = docs.isActive;\r\n            }\r\n\r\n            if (help) {\r\n                this.help.url = help.url;\r\n                this.help.isActive = help.isActive;\r\n            }\r\n\r\n            if (feedback) {\r\n                this.feedback.url = feedback.url;\r\n                this.feedback.isActive = feedback.isActive;\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(linkSubscription);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        const subscription = this.menuTrigger.menuClosed.subscribe(() => {\r\n            const timerSubscription = timer(130).subscribe(() => {\r\n                this.selectedMenu = this.nextMenu;\r\n                if (this.nextMenu) {\r\n                    this.menuTrigger.openMenu();\r\n                    this.nextMenu = undefined;\r\n                }\r\n            });\r\n\r\n            this.subscriptions.add(timerSubscription);\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    getNotifications() {\r\n        const subscription = this.notificationsService.getNotifications({}).subscribe(response => {\r\n\r\n            const responseData = response.data;\r\n\r\n            if (!responseData) {\r\n                return;\r\n            }\r\n\r\n            responseData.notifications.forEach(notification => {\r\n\r\n                const key = this.getNotificationKey(notification.id);\r\n\r\n                const localNotificationItem = localStorage.getItem(key);\r\n\r\n                let localNotification: GetUserNotificationsResponseNotification;\r\n\r\n                if (localNotificationItem) {\r\n\r\n                    localNotification = JSON.parse(localNotificationItem);\r\n\r\n                    if (localNotification.isDismissed) {\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    localNotification = {\r\n                        id: notification.id,\r\n                        title: notification.title,\r\n                        message: notification.message,\r\n                        type: notification.type,\r\n                        source: notification.source,\r\n                        metadata: notification.metadata,\r\n                        isOpened: false,\r\n                        isViewed: false,\r\n                        isDismissed: false,\r\n                        isExpired: notification.isExpired,\r\n                        createdOn: notification.createdOn,\r\n                        creatorName: notification.creatorName\r\n                    };\r\n                }\r\n\r\n                if (localNotification.isOpened) {\r\n                    this.notificationCounts.opened++;\r\n                } else {\r\n                    this.notificationCounts.notOpened++;\r\n                }\r\n\r\n                if (localNotification.isViewed) {\r\n                    this.notificationCounts.viewed++;\r\n                } else {\r\n                    this.notificationCounts.notViewed++;\r\n                }\r\n\r\n                this.notificationCounts.notDismissed++;\r\n                \r\n                this.notifications.push(localNotification);\r\n\r\n                localStorage.setItem(key, JSON.stringify(localNotification));\r\n            });\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    logout(): void {\r\n        this.authService.logout();\r\n\r\n        if (!this.authService.isAuthenticated && this.authService.isAuthorizationRequired) {\r\n            this.router.navigate(['login']);\r\n        }\r\n    }\r\n\r\n    changeMenu(menu?: string) {\r\n        this.nextMenu = menu;\r\n\r\n        if (this.nextMenu === 'notifications') {\r\n            this.markNotificationsAsOpened();\r\n        }\r\n    }\r\n\r\n    changeMenuWithoutClosing($event: any, menu?: string) {\r\n        $event.stopPropagation();\r\n        this.selectedMenu = menu;\r\n    }\r\n\r\n    returnMenuWithoutClosing($event: any) {\r\n        $event.stopPropagation();\r\n        this.selectedMenu = undefined;\r\n    }\r\n\r\n    returnMenu(menu?: string) {\r\n        this.changeMenu(menu);\r\n        this.menuTrigger.closeMenu();\r\n    }\r\n\r\n    selectTheme($event: Event, preference: ThemePreference) {\r\n        $event.stopPropagation();\r\n        this.themeService.setThemePreference(preference);\r\n        this.themeInfo = this.themeService.getThemeInfo(preference);\r\n    }\r\n\r\n    markNotificationsAsOpened() {\r\n\r\n        if (!(this.notificationCounts.notOpened > 0)) {\r\n            return;\r\n        }\r\n\r\n        const unopenedNotifications = this.notifications.filter(n => !n.isOpened);\r\n\r\n        if (!(unopenedNotifications.length > 0)) {\r\n            return;\r\n        }\r\n\r\n        if (this.userId) {\r\n            const subscription = this.notificationsService.markNotificationsAsOpened({\r\n                userId: this.userId\r\n            }).subscribe();\r\n\r\n            this.subscriptions.add(subscription);\r\n        }\r\n\r\n        this.notificationsOpened(unopenedNotifications);\r\n    }\r\n\r\n    notificationsOpened(unOpenedNotifications: GetUserNotificationsResponseNotification[]) {\r\n\r\n        unOpenedNotifications.forEach(notification => {\r\n\r\n            this.notificationCounts.opened++;\r\n            this.notificationCounts.notOpened--;\r\n\r\n            setTimeout(() => notification.isOpened = true, 1250);\r\n\r\n            if (!this.userId) {\r\n\r\n                const key = this.getNotificationKey(notification.id);\r\n\r\n                const notificationCopy = { ...notification, isOpened: true };\r\n\r\n                localStorage.setItem(key, JSON.stringify(notificationCopy));\r\n            }\r\n        });\r\n    }\r\n\r\n    private getNotificationKey(notificationId: string) {\r\n        return `system:notification:${notificationId}:user:${this.userId}`;\r\n    }\r\n\r\n    markNotificationAsViewed(notification: GetUserNotificationsResponseNotification, event: Event) {\r\n        event.stopPropagation();\r\n\r\n        if (notification.isViewed) {\r\n            return;\r\n        }\r\n\r\n        if (this.userId) {\r\n\r\n            const subscription = this.notificationsService.markNotificationAsViewed({\r\n                userId: this.userId,\r\n                notificationId: notification.id\r\n            }).subscribe();\r\n\r\n            this.subscriptions.add(subscription);\r\n        }\r\n\r\n        this.notificationViewed(notification);\r\n    }\r\n\r\n    notificationViewed(notification: GetUserNotificationsResponseNotification) {\r\n\r\n        if (!notification.isOpened) {\r\n            notification.isOpened = true;\r\n            this.notificationCounts.opened++;\r\n            this.notificationCounts.notOpened--;\r\n        }\r\n\r\n        notification.isViewed = true;\r\n        this.notificationCounts.viewed++;\r\n        this.notificationCounts.notViewed--;\r\n\r\n        if (!this.userId) {\r\n\r\n            const key = this.getNotificationKey(notification.id);\r\n\r\n            localStorage.setItem(key, JSON.stringify(notification));\r\n        }\r\n    }\r\n\r\n    markNotificationAsDismissed(notification: GetUserNotificationsResponseNotification, event: Event) {\r\n        event.stopPropagation();\r\n\r\n        if (notification.isDismissed) {\r\n            return;\r\n        }\r\n\r\n        if (this.userId) {\r\n\r\n            const subscription = this.notificationsService.markNotificationAsDismissed({\r\n                userId: this.userId,\r\n                notificationId: notification.id\r\n            }).subscribe();\r\n\r\n            this.subscriptions.add(subscription);\r\n        }\r\n\r\n        this.notificationDismissed(notification);\r\n    }\r\n\r\n    notificationDismissed(notification: GetUserNotificationsResponseNotification) {\r\n\r\n        if (!notification.isOpened) {\r\n            notification.isOpened = true;\r\n            this.notificationCounts.opened++;\r\n            this.notificationCounts.notOpened--;\r\n        }\r\n\r\n        if (!notification.isViewed) {\r\n            notification.isViewed = true;\r\n            this.notificationCounts.viewed++;\r\n            this.notificationCounts.notViewed--;\r\n        }\r\n\r\n        notification.isDismissed = true;\r\n        this.notificationCounts.dismissed++;\r\n        this.notificationCounts.notDismissed--;\r\n\r\n        if (!this.userId) {\r\n\r\n            const key = this.getNotificationKey(notification.id);\r\n\r\n            localStorage.setItem(key, JSON.stringify(notification));\r\n        }\r\n\r\n        const index = this.notifications.findIndex(n => n.id === notification.id);\r\n\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n\r\n        this.notifications.splice(index, 1);\r\n    }\r\n\r\n    formatTimestamp(date: Date): string {\r\n        const now = getDateTimeUtcNow();\r\n        const localDate = new Date(date);\r\n        const diff = now.getTime() - localDate.getTime();\r\n\r\n        const seconds = Math.floor(diff / 1000);\r\n        const minutes = Math.floor(seconds / 60);\r\n        const hours = Math.floor(minutes / 60);\r\n        const days = Math.floor(hours / 24);\r\n\r\n        if (days > 0) {\r\n            return `${days}d ago`;\r\n        } else if (hours > 0) {\r\n            return `${hours}h ago`;\r\n        } else if (minutes > 0) {\r\n            return `${minutes}m ago`;\r\n        } else {\r\n            return `${seconds}s ago`;\r\n        }\r\n    }\r\n}","<button mat-icon-button [matMenuTriggerFor]=\"menu\"\r\n  [matBadge]=\"(notificationCounts.notOpened) > 9 ? '9+': notificationCounts.notOpened\"\r\n  [matBadgeHidden]=\"notificationCounts.notOpened == 0\" matBadgePosition=\"before\" matBadgeColor=\"primary\">\r\n  <img *ngIf=\"false; else showInitials\" class=\"rounded-circle account-menu-mini-image\" src=\"favicon.ico\">\r\n  <ng-template #showInitials>\r\n    <div\r\n      class=\"account-menu-mini-image initials-circle d-flex rounded-circle align-items-center justify-content-center text-bold text-uppercase\">\r\n      {{initials || 'U' | truncate: 2}}</div>\r\n  </ng-template>\r\n</button>\r\n\r\n<mat-menu class=\"mat-menu\" #menu=\"matMenu\" [ngSwitch]=\"selectedMenu\">\r\n  <ng-container *ngSwitchDefault>\r\n    <span class=\"px-2 pb-2 border-bottom d-flex menu\" (click)=\"$event.stopPropagation()\">\r\n      <div class=\"d-grid\">\r\n        <img *ngIf=\"false; else showInitials\" class=\"rounded-circle border\" src=\"favicon.ico\" height=\"40\" width=\"40\">\r\n      </div>\r\n      <div class=\"d-flex flex-direction-column pl-2 break-word\">\r\n        <span class=\"user-title\">{{ displayName || 'Unknown' }}</span>\r\n        <span class=\"user-subtitle\">{{ email || userId}}</span>\r\n      </div>\r\n    </span>\r\n    <div class=\"border-bottom\">\r\n      <!-- <button mat-menu-item>\r\n        <mat-icon>person</mat-icon>\r\n        <span>Profile</span>\r\n      </button> -->\r\n\r\n      <button mat-menu-item (click)=\"changeMenu('notifications')\">\r\n        <mat-icon>notifications</mat-icon>\r\n        <span>Notifications <span\r\n            *ngIf=\"notificationCounts.notOpened > 0\">({{notificationCounts.notOpened}})</span></span>\r\n        <mat-icon class=\"mat-icon-right\">chevron_right</mat-icon>\r\n      </button>\r\n\r\n      <button *ngIf=\"isAuthenticated\" mat-menu-item (click)=\"logout()\">\r\n        <mat-icon>remove_moderator</mat-icon>\r\n        <span>Logout</span>\r\n      </button>\r\n    </div>\r\n\r\n    <div>\r\n      <button mat-menu-item (click)=\"changeMenu('theme')\" *ngIf=\"themeInfo\">\r\n        <mat-icon>contrast</mat-icon>\r\n        <span>Theme: {{themeInfo.name}}</span>\r\n        <mat-icon class=\"mat-icon-right\">chevron_right</mat-icon>\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"(docs.isActive && docs.url) || (help.isActive && help.url) || (feedback.isActive && feedback.url)\" class=\"border-top\">\r\n      <a mat-menu-item *ngIf=\"docs.isActive && docs.url\" [href]=\"docs.url\" target=\"_blank\">\r\n        <mat-icon>description</mat-icon>\r\n        <span>Docs</span>\r\n      </a>\r\n\r\n      <a mat-menu-item *ngIf=\"help.isActive && help.url\" [href]=\"help.url\" target=\"_blank\">\r\n        <mat-icon>help</mat-icon>\r\n        <span>Help</span>\r\n      </a>\r\n\r\n      <a mat-menu-item *ngIf=\"feedback.isActive && feedback.url\" [href]=\"feedback.url\" target=\"_blank\">\r\n        <mat-icon>feedback</mat-icon>\r\n        <span>Feedback</span>\r\n      </a>\r\n    </div>\r\n\r\n  </ng-container>\r\n\r\n  <ng-container *ngSwitchCase=\"'theme'\">\r\n    <div class=\"px-2 pb-1 border-bottom d-flex align-items-center\" (click)=\"$event.stopPropagation()\">\r\n      <button mat-icon-button (click)=\"returnMenu('menu')\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button>\r\n      <span class=\"ml-1 me-3\">Select your theme prefence</span>\r\n    </div>\r\n    <button mat-menu-item *ngFor=\"let theme of themes\" (click)=\"selectTheme($event, theme.preference)\"\r\n      [matTooltip]=\"theme.tooltip\" matTooltipPosition=\"left\">\r\n      <mat-icon class=\"ml-1\"\r\n        [color]=\"themeInfo!.preference === theme.preference ? 'primary': ''\">{{themeInfo!.preference ===\r\n        theme.preference ? 'check' : theme.icon}}</mat-icon>\r\n      <span>{{theme.name}}</span>\r\n    </button>\r\n  </ng-container>\r\n\r\n  <ng-container *ngSwitchCase=\"'notifications'\">\r\n    <div class=\"px-2 pb-1 border-bottom d-flex align-items-center\" (click)=\"$event.stopPropagation()\">\r\n      <button mat-icon-button (click)=\"returnMenu('menu')\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button>\r\n      <span class=\"ml-1 me-3\">Notifications</span>\r\n    </div>\r\n\r\n    <div *ngIf=\"notifications.length === 0\" class=\"notification-item\">\r\n      <mat-card class=\"notification-card\" style=\"box-shadow: none\">\r\n        <mat-card-content>\r\n          <div class=\"notification-message\">No notifications found.</div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n     \r\n    <ng-container *ngFor=\"let notification of notifications\" class=\"notification-item\" >\r\n      <div *ngIf=\"!notification.isDismissed\" class=\"notification-item\" [ngClass]=\"{\r\n        'neutral': notification.type === 1,\r\n        'info': notification.type === 2,\r\n        'accent': notification.type === 3,\r\n        'success': notification.type === 4 || notification.type === 7,\r\n        'warn': notification.type === 5 || notification.type === 8 || notification.type === 9,\r\n        'error': notification.type === 6,\r\n        'not-viewed': !notification.isViewed\r\n      }\" (click)=\"$event.stopPropagation()\">\r\n        <mat-card (click)=\"markNotificationAsViewed(notification, $event)\" class=\"notification-card\" [style.cursor]=\"notification.isViewed ? 'unset' : 'pointer'\">\r\n          <mat-card-header class=\"notification-header\">\r\n            <mat-card-title class=\"notification-title\">\r\n              {{notification.title}}\r\n            </mat-card-title>\r\n            <button class=\"icon-mini notification-dismiss\" mat-icon-button (click)=\"markNotificationAsDismissed(notification, $event)\">\r\n              <mat-icon>close</mat-icon>\r\n            </button>\r\n            <div class=\"new-indicator\" [ngClass]=\"{'show': !notification.isOpened}\">new</div>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <div class=\"notification-message\" [innerHTML]=\"notification.message\"></div>\r\n            <div class=\"notification-bottom text-neutral\">\r\n              <span>{{ formatTimestamp(notification.createdOn) }}</span>\r\n              <span class=\"font-style-italic\">{{notification.creatorName ? '- ' + notification.creatorName : ''}}</span>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n</mat-menu>","import * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, ViewChild, QueryList, ANIMATION_MODULE_TYPE, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst _c0 = [\"*\"];\nconst _c1 = [\"content\"];\nconst _c2 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c3 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatDrawerContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatDrawerContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatDrawerContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-drawer-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c4 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c5 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nfunction MatSidenavContainer_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function MatSidenavContainer_Conditional_0_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1._onBackdropClicked());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r1._isShowingBackdrop());\n  }\n}\nfunction MatSidenavContainer_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-sidenav-content\");\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c6 = \".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\";\nconst matDrawerAnimations = {\n  /** Animation that slides a drawer in and out. */\n  transformDrawer: trigger('transform', [\n  // We remove the `transform` here completely, rather than setting it to zero, because:\n  // 1. Having a transform can cause elements with ripples or an animated\n  //    transform to shift around in Chrome with an RTL layout (see #10023).\n  // 2. 3d transforms causes text to appear blurry on IE and Edge.\n  state('open, open-instant', style({\n    'transform': 'none',\n    'visibility': 'visible'\n  })), state('void', style({\n    // Avoids the shadow showing up when closed in SSR.\n    'box-shadow': 'none',\n    'visibility': 'hidden'\n  })), transition('void => open-instant', animate('0ms')), transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n  providedIn: 'root',\n  factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n  return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n  constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n    super(elementRef, scrollDispatcher, ngZone);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._container = _container;\n  }\n  ngAfterContentInit() {\n    this._container._contentMarginChanges.subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  static {\n    this.ɵfac = function MatDrawerContent_Factory(t) {\n      return new (t || MatDrawerContent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatDrawerContent,\n      selectors: [[\"mat-drawer-content\"]],\n      hostAttrs: [1, \"mat-drawer-content\"],\n      hostVars: 4,\n      hostBindings: function MatDrawerContent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkScrollable,\n        useExisting: MatDrawerContent\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatDrawerContent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawerContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: CdkScrollable,\n        useExisting: MatDrawerContent\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: MatDrawerContainer,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(() => MatDrawerContainer)]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i1.ScrollDispatcher\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n  /** The side that the drawer is attached to. */\n  get position() {\n    return this._position;\n  }\n  set position(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value !== this._position) {\n      // Static inputs in Ivy are set before the element is in the DOM.\n      if (this._isAttached) {\n        this._updatePositionInParent(value);\n      }\n      this._position = value;\n      this.onPositionChanged.emit();\n    }\n  }\n  /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n  get mode() {\n    return this._mode;\n  }\n  set mode(value) {\n    this._mode = value;\n    this._updateFocusTrapState();\n    this._modeChanged.next();\n  }\n  /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n  get disableClose() {\n    return this._disableClose;\n  }\n  set disableClose(value) {\n    this._disableClose = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer should focus the first focusable element automatically when opened.\n   * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n   * enabled, focus will be moved into the sidenav in `side` mode as well.\n   * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n   * instead.\n   */\n  get autoFocus() {\n    const value = this._autoFocus;\n    // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n    // because we don't know how the sidenav is being used, but in some cases it still makes\n    // sense to do it. The consumer can explicitly set `autoFocus`.\n    if (value == null) {\n      if (this.mode === 'side') {\n        return 'dialog';\n      } else {\n        return 'first-tabbable';\n      }\n    }\n    return value;\n  }\n  set autoFocus(value) {\n    if (value === 'true' || value === 'false' || value == null) {\n      value = coerceBooleanProperty(value);\n    }\n    this._autoFocus = value;\n  }\n  /**\n   * Whether the drawer is opened. We overload this because we trigger an event when it\n   * starts or end.\n   */\n  get opened() {\n    return this._opened;\n  }\n  set opened(value) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n    this._elementRef = _elementRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._focusMonitor = _focusMonitor;\n    this._platform = _platform;\n    this._ngZone = _ngZone;\n    this._interactivityChecker = _interactivityChecker;\n    this._doc = _doc;\n    this._container = _container;\n    this._focusTrap = null;\n    this._elementFocusedBeforeDrawerWasOpened = null;\n    /** Whether the drawer is initialized. Used for disabling the initial animation. */\n    this._enableAnimations = false;\n    this._position = 'start';\n    this._mode = 'over';\n    this._disableClose = false;\n    this._opened = false;\n    /** Emits whenever the drawer has started animating. */\n    this._animationStarted = new Subject();\n    /** Emits whenever the drawer is done animating. */\n    this._animationEnd = new Subject();\n    /** Current state of the sidenav animation. */\n    this._animationState = 'void';\n    /** Event emitted when the drawer open state is changed. */\n    this.openedChange =\n    // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n    new EventEmitter( /* isAsync */true);\n    /** Event emitted when the drawer has been opened. */\n    this._openedStream = this.openedChange.pipe(filter(o => o), map(() => {}));\n    /** Event emitted when the drawer has started opening. */\n    this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n    /** Event emitted when the drawer has been closed. */\n    this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => {}));\n    /** Event emitted when the drawer has started closing. */\n    this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /** Event emitted when the drawer's position changes. */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onPositionChanged = new EventEmitter();\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     */\n    this._modeChanged = new Subject();\n    this.openedChange.subscribe(opened => {\n      if (opened) {\n        if (this._doc) {\n          this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n        }\n        this._takeFocus();\n      } else if (this._isFocusWithinDrawer()) {\n        this._restoreFocus(this._openedVia || 'program');\n      }\n    });\n    /**\n     * Listen to `keydown` events outside the zone so that change detection is not run every\n     * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n     * and we don't have close disabled.\n     */\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n        this.close();\n        event.stopPropagation();\n        event.preventDefault();\n      }));\n    });\n    // We need a Subject with distinctUntilChanged, because the `done` event\n    // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n    this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      const {\n        fromState,\n        toState\n      } = event;\n      if (toState.indexOf('open') === 0 && fromState === 'void' || toState === 'void' && fromState.indexOf('open') === 0) {\n        this.openedChange.emit(this._opened);\n      }\n    });\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1;\n      // The tabindex attribute should be removed to avoid navigating to that element again\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          element.removeEventListener('blur', callback);\n          element.removeEventListener('mousedown', callback);\n          element.removeAttribute('tabindex');\n        };\n        element.addEventListener('blur', callback);\n        element.addEventListener('mousedown', callback);\n      });\n    }\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves focus into the drawer. Note that this works even if\n   * the focus trap is disabled in `side` mode.\n   */\n  _takeFocus() {\n    if (!this._focusTrap) {\n      return;\n    }\n    const element = this._elementRef.nativeElement;\n    // When autoFocus is not on the sidenav, if the element cannot be focused or does\n    // not exist, focus the sidenav itself so the keyboard navigation still works.\n    // We need to check that `focus` is a function due to Universal.\n    switch (this.autoFocus) {\n      case false:\n      case 'dialog':\n        return;\n      case true:\n      case 'first-tabbable':\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n          if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n            element.focus();\n          }\n        });\n        break;\n      case 'first-heading':\n        this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n        break;\n      default:\n        this._focusByCssSelector(this.autoFocus);\n        break;\n    }\n  }\n  /**\n   * Restores focus to the element that was originally focused when the drawer opened.\n   * If no element was focused at that time, the focus will be restored to the drawer.\n   */\n  _restoreFocus(focusOrigin) {\n    if (this.autoFocus === 'dialog') {\n      return;\n    }\n    if (this._elementFocusedBeforeDrawerWasOpened) {\n      this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n    } else {\n      this._elementRef.nativeElement.blur();\n    }\n    this._elementFocusedBeforeDrawerWasOpened = null;\n  }\n  /** Whether focus is currently within the drawer. */\n  _isFocusWithinDrawer() {\n    const activeEl = this._doc.activeElement;\n    return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n  }\n  ngAfterViewInit() {\n    this._isAttached = true;\n    // Only update the DOM position when the sidenav is positioned at\n    // the end since we project the sidenav before the content by default.\n    if (this._position === 'end') {\n      this._updatePositionInParent('end');\n    }\n    // Needs to happen after the position is updated\n    // so the focus trap anchors are in the right place.\n    if (this._platform.isBrowser) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n      this._updateFocusTrapState();\n    }\n  }\n  ngAfterContentChecked() {\n    // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n    // drawers that are open by default. When we're on the server, we shouldn't enable the\n    // animations, because we don't want the drawer to animate the first time the user sees\n    // the page.\n    if (this._platform.isBrowser) {\n      this._enableAnimations = true;\n    }\n  }\n  ngOnDestroy() {\n    this._focusTrap?.destroy();\n    this._anchor?.remove();\n    this._anchor = null;\n    this._animationStarted.complete();\n    this._animationEnd.complete();\n    this._modeChanged.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Open the drawer.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  open(openedVia) {\n    return this.toggle(true, openedVia);\n  }\n  /** Close the drawer. */\n  close() {\n    return this.toggle(false);\n  }\n  /** Closes the drawer with context that the backdrop was clicked. */\n  _closeViaBackdropClick() {\n    // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n    // don't need to check whether focus is currently in the drawer, as clicking on the\n    // backdrop causes blurs the active element.\n    return this._setOpen( /* isOpen */false, /* restoreFocus */true, 'mouse');\n  }\n  /**\n   * Toggle this drawer.\n   * @param isOpen Whether the drawer should be open.\n   * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n   * Used for focus management after the sidenav is closed.\n   */\n  toggle(isOpen = !this.opened, openedVia) {\n    // If the focus is currently inside the drawer content and we are closing the drawer,\n    // restore the focus to the initially focused element (when the drawer opened).\n    if (isOpen && openedVia) {\n      this._openedVia = openedVia;\n    }\n    const result = this._setOpen(isOpen, /* restoreFocus */!isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n    if (!isOpen) {\n      this._openedVia = null;\n    }\n    return result;\n  }\n  /**\n   * Toggles the opened state of the drawer.\n   * @param isOpen Whether the drawer should open or close.\n   * @param restoreFocus Whether focus should be restored on close.\n   * @param focusOrigin Origin to use when restoring focus.\n   */\n  _setOpen(isOpen, restoreFocus, focusOrigin) {\n    this._opened = isOpen;\n    if (isOpen) {\n      this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n    } else {\n      this._animationState = 'void';\n      if (restoreFocus) {\n        this._restoreFocus(focusOrigin);\n      }\n    }\n    this._updateFocusTrapState();\n    return new Promise(resolve => {\n      this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n    });\n  }\n  _getWidth() {\n    return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n  }\n  /** Updates the enabled state of the focus trap. */\n  _updateFocusTrapState() {\n    if (this._focusTrap) {\n      // Trap focus only if the backdrop is enabled. Otherwise, allow end user to interact with the\n      // sidenav content.\n      this._focusTrap.enabled = !!this._container?.hasBackdrop;\n    }\n  }\n  /**\n   * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n   * when it's in the `end` position so that it comes after the content and the visual order\n   * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n   * started off as `end` and was changed to `start`.\n   */\n  _updatePositionInParent(newPosition) {\n    // Don't move the DOM node around on the server, because it can throw off hydration.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n    const element = this._elementRef.nativeElement;\n    const parent = element.parentNode;\n    if (newPosition === 'end') {\n      if (!this._anchor) {\n        this._anchor = this._doc.createComment('mat-drawer-anchor');\n        parent.insertBefore(this._anchor, element);\n      }\n      parent.appendChild(element);\n    } else if (this._anchor) {\n      this._anchor.parentNode.insertBefore(element, this._anchor);\n    }\n  }\n  static {\n    this.ɵfac = function MatDrawer_Factory(t) {\n      return new (t || MatDrawer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.FocusTrapFactory), i0.ɵɵdirectiveInject(i2.FocusMonitor), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.InteractivityChecker), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatDrawer,\n      selectors: [[\"mat-drawer\"]],\n      viewQuery: function MatDrawer_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        }\n      },\n      hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"],\n      hostVars: 12,\n      hostBindings: function MatDrawer_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) {\n            return ctx._animationStarted.next($event);\n          })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) {\n            return ctx._animationEnd.next($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n          i0.ɵɵattribute(\"align\", null);\n          i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n        }\n      },\n      inputs: {\n        position: \"position\",\n        mode: \"mode\",\n        disableClose: \"disableClose\",\n        autoFocus: \"autoFocus\",\n        opened: \"opened\"\n      },\n      outputs: {\n        openedChange: \"openedChange\",\n        _openedStream: \"opened\",\n        openedStart: \"openedStart\",\n        _closedStream: \"closed\",\n        closedStart: \"closedStart\",\n        onPositionChanged: \"positionChanged\"\n      },\n      exportAs: [\"matDrawer\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 3,\n      vars: 0,\n      consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n      template: function MatDrawer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n        }\n      },\n      dependencies: [CdkScrollable],\n      encapsulation: 2,\n      data: {\n        animation: [matDrawerAnimations.transformDrawer]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer',\n      exportAs: 'matDrawer',\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        'tabIndex': '-1',\n        '[@transform]': '_animationState',\n        '(@transform.start)': '_animationStarted.next($event)',\n        '(@transform.done)': '_animationEnd.next($event)'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [CdkScrollable],\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i2.FocusTrapFactory\n  }, {\n    type: i2.FocusMonitor\n  }, {\n    type: i3.Platform\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i2.InteractivityChecker\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: MatDrawerContainer,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DRAWER_CONTAINER]\n    }]\n  }], {\n    position: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    disableClose: [{\n      type: Input\n    }],\n    autoFocus: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    _openedStream: [{\n      type: Output,\n      args: ['opened']\n    }],\n    openedStart: [{\n      type: Output\n    }],\n    _closedStream: [{\n      type: Output,\n      args: ['closed']\n    }],\n    closedStart: [{\n      type: Output\n    }],\n    onPositionChanged: [{\n      type: Output,\n      args: ['positionChanged']\n    }],\n    _content: [{\n      type: ViewChild,\n      args: ['content']\n    }]\n  });\n})();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n  /** The drawer child with the `start` position. */\n  get start() {\n    return this._start;\n  }\n  /** The drawer child with the `end` position. */\n  get end() {\n    return this._end;\n  }\n  /**\n   * Whether to automatically resize the container whenever\n   * the size of any of its drawers changes.\n   *\n   * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n   * the drawers on every change detection cycle. Can be configured globally via the\n   * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n   */\n  get autosize() {\n    return this._autosize;\n  }\n  set autosize(value) {\n    this._autosize = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n   * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n   * mode as well.\n   */\n  get hasBackdrop() {\n    return this._drawerHasBackdrop(this._start) || this._drawerHasBackdrop(this._end);\n  }\n  set hasBackdrop(value) {\n    this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n  }\n  /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n  get scrollable() {\n    return this._userContent || this._content;\n  }\n  constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n    this._dir = _dir;\n    this._element = _element;\n    this._ngZone = _ngZone;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** Drawers that belong to this container. */\n    this._drawers = new QueryList();\n    /** Event emitted when the drawer backdrop is clicked. */\n    this.backdropClick = new EventEmitter();\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /** Emits on every ngDoCheck. Used for debouncing reflows. */\n    this._doCheckSubject = new Subject();\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     */\n    this._contentMargins = {\n      left: null,\n      right: null\n    };\n    this._contentMarginChanges = new Subject();\n    // If a `Dir` directive exists up the tree, listen direction changes\n    // and update the left/right properties to point to the proper start/end.\n    if (_dir) {\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._validateDrawers();\n        this.updateContentMargins();\n      });\n    }\n    // Since the minimum width of the sidenav depends on the viewport width,\n    // we need to recompute the margins if the viewport changes.\n    viewportRuler.change().pipe(takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    this._autosize = defaultAutosize;\n  }\n  ngAfterContentInit() {\n    this._allDrawers.changes.pipe(startWith(this._allDrawers), takeUntil(this._destroyed)).subscribe(drawer => {\n      this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n      this._drawers.notifyOnChanges();\n    });\n    this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n      this._validateDrawers();\n      this._drawers.forEach(drawer => {\n        this._watchDrawerToggle(drawer);\n        this._watchDrawerPosition(drawer);\n        this._watchDrawerMode(drawer);\n      });\n      if (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) {\n        this.updateContentMargins();\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n    // Avoid hitting the NgZone through the debounce timeout.\n    this._ngZone.runOutsideAngular(() => {\n      this._doCheckSubject.pipe(debounceTime(10),\n      // Arbitrary debounce time, less than a frame at 60fps\n      takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n    });\n  }\n  ngOnDestroy() {\n    this._contentMarginChanges.complete();\n    this._doCheckSubject.complete();\n    this._drawers.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Calls `open` of both start and end drawers */\n  open() {\n    this._drawers.forEach(drawer => drawer.open());\n  }\n  /** Calls `close` of both start and end drawers */\n  close() {\n    this._drawers.forEach(drawer => drawer.close());\n  }\n  /**\n   * Recalculates and updates the inline styles for the content. Note that this should be used\n   * sparingly, because it causes a reflow.\n   */\n  updateContentMargins() {\n    // 1. For drawers in `over` mode, they don't affect the content.\n    // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n    //    left margin (for left drawer) or right margin (for right the drawer).\n    // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n    //    adding to the left or right margin and simultaneously subtracting the same amount of\n    //    margin from the other side.\n    let left = 0;\n    let right = 0;\n    if (this._left && this._left.opened) {\n      if (this._left.mode == 'side') {\n        left += this._left._getWidth();\n      } else if (this._left.mode == 'push') {\n        const width = this._left._getWidth();\n        left += width;\n        right -= width;\n      }\n    }\n    if (this._right && this._right.opened) {\n      if (this._right.mode == 'side') {\n        right += this._right._getWidth();\n      } else if (this._right.mode == 'push') {\n        const width = this._right._getWidth();\n        right += width;\n        left -= width;\n      }\n    }\n    // If either `right` or `left` is zero, don't set a style to the element. This\n    // allows users to specify a custom size via CSS class in SSR scenarios where the\n    // measured widths will always be zero. Note that we reset to `null` here, rather\n    // than below, in order to ensure that the types in the `if` below are consistent.\n    left = left || null;\n    right = right || null;\n    if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n      this._contentMargins = {\n        left,\n        right\n      };\n      // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n      // to do it only when something changed, otherwise we can end up hitting the zone too often.\n      this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n    }\n  }\n  ngDoCheck() {\n    // If users opted into autosizing, do a check every change detection cycle.\n    if (this._autosize && this._isPushed()) {\n      // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n      this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n    }\n  }\n  /**\n   * Subscribes to drawer events in order to set a class on the main container element when the\n   * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n   * is properly hidden.\n   */\n  _watchDrawerToggle(drawer) {\n    drawer._animationStarted.pipe(filter(event => event.fromState !== event.toState), takeUntil(this._drawers.changes)).subscribe(event => {\n      // Set the transition class on the container so that the animations occur. This should not\n      // be set initially because animations should only be triggered via a change in state.\n      if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n        this._element.nativeElement.classList.add('mat-drawer-transition');\n      }\n      this.updateContentMargins();\n      this._changeDetectorRef.markForCheck();\n    });\n    if (drawer.mode !== 'side') {\n      drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n    }\n  }\n  /**\n   * Subscribes to drawer onPositionChanged event in order to\n   * re-validate drawers when the position changes.\n   */\n  _watchDrawerPosition(drawer) {\n    if (!drawer) {\n      return;\n    }\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n    drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n      this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n        this._validateDrawers();\n      });\n    });\n  }\n  /** Subscribes to changes in drawer mode so we can run change detection. */\n  _watchDrawerMode(drawer) {\n    if (drawer) {\n      drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed))).subscribe(() => {\n        this.updateContentMargins();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n  _setContainerClass(isAdd) {\n    const classList = this._element.nativeElement.classList;\n    const className = 'mat-drawer-container-has-open';\n    if (isAdd) {\n      classList.add(className);\n    } else {\n      classList.remove(className);\n    }\n  }\n  /** Validate the state of the drawer children components. */\n  _validateDrawers() {\n    this._start = this._end = null;\n    // Ensure that we have at most one start and one end drawer.\n    this._drawers.forEach(drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('end');\n        }\n        this._end = drawer;\n      } else {\n        if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throwMatDuplicatedDrawerError('start');\n        }\n        this._start = drawer;\n      }\n    });\n    this._right = this._left = null;\n    // Detect if we're LTR or RTL.\n    if (this._dir && this._dir.value === 'rtl') {\n      this._left = this._end;\n      this._right = this._start;\n    } else {\n      this._left = this._start;\n      this._right = this._end;\n    }\n  }\n  /** Whether the container is being pushed to the side by one of the drawers. */\n  _isPushed() {\n    return this._isDrawerOpen(this._start) && this._start.mode != 'over' || this._isDrawerOpen(this._end) && this._end.mode != 'over';\n  }\n  _onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalDrawersViaBackdrop();\n  }\n  _closeModalDrawersViaBackdrop() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end].filter(drawer => drawer && !drawer.disableClose && this._drawerHasBackdrop(drawer)).forEach(drawer => drawer._closeViaBackdropClick());\n  }\n  _isShowingBackdrop() {\n    return this._isDrawerOpen(this._start) && this._drawerHasBackdrop(this._start) || this._isDrawerOpen(this._end) && this._drawerHasBackdrop(this._end);\n  }\n  _isDrawerOpen(drawer) {\n    return drawer != null && drawer.opened;\n  }\n  // Whether argument drawer should have a backdrop when it opens\n  _drawerHasBackdrop(drawer) {\n    if (this._backdropOverride == null) {\n      return !!drawer && drawer.mode !== 'side';\n    }\n    return this._backdropOverride;\n  }\n  static {\n    this.ɵfac = function MatDrawerContainer_Factory(t) {\n      return new (t || MatDrawerContainer)(i0.ɵɵdirectiveInject(i4.Directionality, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatDrawerContainer,\n      selectors: [[\"mat-drawer-container\"]],\n      contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatDrawerContent, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatDrawer, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n        }\n      },\n      viewQuery: function MatDrawerContainer_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MatDrawerContent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n        }\n      },\n      hostAttrs: [1, \"mat-drawer-container\"],\n      hostVars: 2,\n      hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n        }\n      },\n      inputs: {\n        autosize: \"autosize\",\n        hasBackdrop: \"hasBackdrop\"\n      },\n      outputs: {\n        backdropClick: \"backdropClick\"\n      },\n      exportAs: [\"matDrawerContainer\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatDrawerContainer\n      }]), i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c3,\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n      template: function MatDrawerContainer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c2);\n          i0.ɵɵtemplate(0, MatDrawerContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵprojection(2, 1);\n          i0.ɵɵtemplate(3, MatDrawerContainer_Conditional_3_Template, 2, 0, \"mat-drawer-content\");\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(0, ctx.hasBackdrop ? 0 : -1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(3, !ctx._content ? 3 : -1);\n        }\n      },\n      dependencies: [MatDrawerContent],\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatDrawerContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-drawer-container',\n      exportAs: 'matDrawerContainer',\n      host: {\n        'class': 'mat-drawer-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatDrawerContainer\n      }],\n      standalone: true,\n      imports: [MatDrawerContent],\n      template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-drawer-content>\\n    <ng-content></ng-content>\\n  </mat-drawer-content>\\n}\\n\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"]\n    }]\n  }], () => [{\n    type: i4.Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i0.ChangeDetectorRef\n  }, {\n    type: i1.ViewportRuler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }], {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatDrawer, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatDrawerContent]\n    }],\n    _userContent: [{\n      type: ViewChild,\n      args: [MatDrawerContent]\n    }],\n    autosize: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    backdropClick: [{\n      type: Output\n    }]\n  });\n})();\nclass MatSidenavContent extends MatDrawerContent {\n  constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n    super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n  }\n  static {\n    this.ɵfac = function MatSidenavContent_Factory(t) {\n      return new (t || MatSidenavContent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSidenavContent,\n      selectors: [[\"mat-sidenav-content\"]],\n      hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"],\n      hostVars: 4,\n      hostBindings: function MatSidenavContent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: CdkScrollable,\n        useExisting: MatSidenavContent\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MatSidenavContent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavContent, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-content',\n      template: '<ng-content></ng-content>',\n      host: {\n        'class': 'mat-drawer-content mat-sidenav-content',\n        '[style.margin-left.px]': '_container._contentMargins.left',\n        '[style.margin-right.px]': '_container._contentMargins.right'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: CdkScrollable,\n        useExisting: MatSidenavContent\n      }],\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ChangeDetectorRef\n  }, {\n    type: MatSidenavContainer,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(() => MatSidenavContainer)]\n    }]\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i1.ScrollDispatcher\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\nclass MatSidenav extends MatDrawer {\n  constructor() {\n    super(...arguments);\n    this._fixedInViewport = false;\n    this._fixedTopGap = 0;\n    this._fixedBottomGap = 0;\n  }\n  /** Whether the sidenav is fixed in the viewport. */\n  get fixedInViewport() {\n    return this._fixedInViewport;\n  }\n  set fixedInViewport(value) {\n    this._fixedInViewport = coerceBooleanProperty(value);\n  }\n  /**\n   * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n   * mode.\n   */\n  get fixedTopGap() {\n    return this._fixedTopGap;\n  }\n  set fixedTopGap(value) {\n    this._fixedTopGap = coerceNumberProperty(value);\n  }\n  /**\n   * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n   * fixed mode.\n   */\n  get fixedBottomGap() {\n    return this._fixedBottomGap;\n  }\n  set fixedBottomGap(value) {\n    this._fixedBottomGap = coerceNumberProperty(value);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatSidenav_BaseFactory;\n      return function MatSidenav_Factory(t) {\n        return (ɵMatSidenav_BaseFactory || (ɵMatSidenav_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenav)))(t || MatSidenav);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSidenav,\n      selectors: [[\"mat-sidenav\"]],\n      hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"],\n      hostVars: 17,\n      hostBindings: function MatSidenav_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"align\", null);\n          i0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n          i0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n        }\n      },\n      inputs: {\n        fixedInViewport: \"fixedInViewport\",\n        fixedTopGap: \"fixedTopGap\",\n        fixedBottomGap: \"fixedBottomGap\"\n      },\n      exportAs: [\"matSidenav\"],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 3,\n      vars: 0,\n      consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]],\n      template: function MatSidenav_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n        }\n      },\n      dependencies: [CdkScrollable],\n      encapsulation: 2,\n      data: {\n        animation: [matDrawerAnimations.transformDrawer]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenav, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav',\n      exportAs: 'matSidenav',\n      animations: [matDrawerAnimations.transformDrawer],\n      host: {\n        'class': 'mat-drawer mat-sidenav',\n        'tabIndex': '-1',\n        // must prevent the browser from aligning text based on value\n        '[attr.align]': 'null',\n        '[class.mat-drawer-end]': 'position === \"end\"',\n        '[class.mat-drawer-over]': 'mode === \"over\"',\n        '[class.mat-drawer-push]': 'mode === \"push\"',\n        '[class.mat-drawer-side]': 'mode === \"side\"',\n        '[class.mat-drawer-opened]': 'opened',\n        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      imports: [CdkScrollable],\n      template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\"\n    }]\n  }], null, {\n    fixedInViewport: [{\n      type: Input\n    }],\n    fixedTopGap: [{\n      type: Input\n    }],\n    fixedBottomGap: [{\n      type: Input\n    }]\n  });\n})();\nclass MatSidenavContainer extends MatDrawerContainer {\n  constructor() {\n    super(...arguments);\n    this._allDrawers = undefined;\n    // We need an initializer here to avoid a TS error.\n    this._content = undefined;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵMatSidenavContainer_BaseFactory;\n      return function MatSidenavContainer_Factory(t) {\n        return (ɵMatSidenavContainer_BaseFactory || (ɵMatSidenavContainer_BaseFactory = i0.ɵɵgetInheritedFactory(MatSidenavContainer)))(t || MatSidenavContainer);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatSidenavContainer,\n      selectors: [[\"mat-sidenav-container\"]],\n      contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatSidenavContent, 5);\n          i0.ɵɵcontentQuery(dirIndex, MatSidenav, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._content = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"],\n      hostVars: 2,\n      hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n        }\n      },\n      exportAs: [\"matSidenavContainer\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatSidenavContainer\n      }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c5,\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]],\n      template: function MatSidenavContainer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c4);\n          i0.ɵɵtemplate(0, MatSidenavContainer_Conditional_0_Template, 1, 2, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵprojection(2, 1);\n          i0.ɵɵtemplate(3, MatSidenavContainer_Conditional_3_Template, 2, 0, \"mat-sidenav-content\");\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(0, ctx.hasBackdrop ? 0 : -1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵconditional(3, !ctx._content ? 3 : -1);\n        }\n      },\n      dependencies: [MatSidenavContent],\n      styles: [_c6],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-sidenav-container',\n      exportAs: 'matSidenavContainer',\n      host: {\n        'class': 'mat-drawer-container mat-sidenav-container',\n        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        provide: MAT_DRAWER_CONTAINER,\n        useExisting: MatSidenavContainer\n      }],\n      standalone: true,\n      imports: [MatSidenavContent],\n      template: \"@if (hasBackdrop) {\\n  <div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\"\\n       [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n}\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n\\n@if (!_content) {\\n  <mat-sidenav-content>\\n    <ng-content></ng-content>\\n  </mat-sidenav-content>\\n}\\n\",\n      styles: [\".mat-drawer-container{position:relative;z-index:1;color:var(--mat-sidenav-content-text-color);background-color:var(--mat-sidenav-content-background-color);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible;background-color:var(--mat-sidenav-scrim-color)}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;color:var(--mat-sidenav-container-text-color);box-shadow:var(--mat-sidenav-container-elevation-shadow);background-color:var(--mat-sidenav-container-background-color);border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);width:var(--mat-sidenav-container-width);display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0);border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0}[dir=rtl] .mat-drawer{border-top-left-radius:var(--mat-sidenav-container-shape);border-bottom-left-radius:var(--mat-sidenav-container-shape);border-top-right-radius:0;border-bottom-right-radius:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{border-top-right-radius:var(--mat-sidenav-container-shape);border-bottom-right-radius:var(--mat-sidenav-container-shape);border-top-left-radius:0;border-bottom-left-radius:0;left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-side{box-shadow:none;border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid}.mat-drawer-side.mat-drawer-end{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side{border-left-color:var(--mat-sidenav-container-divider-color);border-left-width:1px;border-left-style:solid;border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-right-color:var(--mat-sidenav-container-divider-color);border-right-width:1px;border-right-style:solid;border-left:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"]\n    }]\n  }], null, {\n    _allDrawers: [{\n      type: ContentChildren,\n      args: [MatSidenav, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }],\n    _content: [{\n      type: ContentChild,\n      args: [MatSidenavContent]\n    }]\n  });\n})();\nclass MatSidenavModule {\n  static {\n    this.ɵfac = function MatSidenavModule_Factory(t) {\n      return new (t || MatSidenavModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatSidenavModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, CdkScrollableModule, CdkScrollableModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSidenavModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, CdkScrollableModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent],\n      exports: [CdkScrollableModule, MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarRow {\n  static {\n    this.ɵfac = function MatToolbarRow_Factory(t) {\n      return new (t || MatToolbarRow)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MatToolbarRow,\n      selectors: [[\"mat-toolbar-row\"]],\n      hostAttrs: [1, \"mat-toolbar-row\"],\n      exportAs: [\"matToolbarRow\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarRow, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-toolbar-row',\n      exportAs: 'matToolbarRow',\n      host: {\n        'class': 'mat-toolbar-row'\n      },\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass MatToolbar {\n  constructor(_elementRef, _platform, document) {\n    this._elementRef = _elementRef;\n    this._platform = _platform;\n    // TODO: make the document a required param when doing breaking changes.\n    this._document = document;\n  }\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._checkToolbarMixedModes();\n      this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n    }\n  }\n  /**\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\n   */\n  _checkToolbarMixedModes() {\n    if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      // Check if there are any other DOM nodes that can display content but aren't inside of\n      // a <mat-toolbar-row> element.\n      const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes).filter(node => !(node.classList && node.classList.contains('mat-toolbar-row'))).filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)).some(node => !!(node.textContent && node.textContent.trim()));\n      if (isCombinedUsage) {\n        throwToolbarMixedModesError();\n      }\n    }\n  }\n  static {\n    this.ɵfac = function MatToolbar_Factory(t) {\n      return new (t || MatToolbar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MatToolbar,\n      selectors: [[\"mat-toolbar\"]],\n      contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MatToolbarRow, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n        }\n      },\n      hostAttrs: [1, \"mat-toolbar\"],\n      hostVars: 6,\n      hostBindings: function MatToolbar_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n          i0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n        }\n      },\n      inputs: {\n        color: \"color\"\n      },\n      exportAs: [\"matToolbar\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 2,\n      vars: 0,\n      template: function MatToolbar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵprojection(0);\n          i0.ɵɵprojection(1, 1);\n        }\n      },\n      styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color);color:var(--mat-toolbar-container-text-color)}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font);font-size:var(--mat-toolbar-title-text-size);line-height:var(--mat-toolbar-title-text-line-height);font-weight:var(--mat-toolbar-title-text-weight);letter-spacing:var(--mat-toolbar-title-text-tracking);margin:0}.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color);--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color)}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height)}}\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbar, [{\n    type: Component,\n    args: [{\n      selector: 'mat-toolbar',\n      exportAs: 'matToolbar',\n      host: {\n        'class': 'mat-toolbar',\n        '[class]': 'color ? \"mat-\" + color : \"\"',\n        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      standalone: true,\n      template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n      styles: [\".mat-toolbar{background:var(--mat-toolbar-container-background-color);color:var(--mat-toolbar-container-text-color)}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font-family:var(--mat-toolbar-title-text-font);font-size:var(--mat-toolbar-title-text-size);line-height:var(--mat-toolbar-title-text-line-height);font-weight:var(--mat-toolbar-title-text-weight);letter-spacing:var(--mat-toolbar-title-text-tracking);margin:0}.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar .mat-mdc-button-base.mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color:var(--mat-toolbar-container-text-color);--mdc-outlined-button-label-text-color:var(--mat-toolbar-container-text-color)}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap;height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-row,.mat-toolbar-single-row{height:var(--mat-toolbar-mobile-height)}}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%;min-height:var(--mat-toolbar-standard-height)}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:var(--mat-toolbar-mobile-height)}}\"]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], {\n    color: [{\n      type: Input\n    }],\n    _toolbarRows: [{\n      type: ContentChildren,\n      args: [MatToolbarRow, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' + 'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' + 'inside of a `<mat-toolbar>` for a single row.');\n}\nclass MatToolbarModule {\n  static {\n    this.ɵfac = function MatToolbarModule_Factory(t) {\n      return new (t || MatToolbarModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MatToolbarModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [MatCommonModule, MatCommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatToolbarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatToolbar, MatToolbarRow],\n      exports: [MatToolbar, MatToolbarRow, MatCommonModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","import { Component, inject, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { DefaultLayoutService } from \"./default-layout.service\";\r\nimport { License, LicenseEdition, ProviderInfo, WindowService } from \"../../../core/services/window.service\";\r\nimport { DEFAULT_ROUTES } from \"./default-layout-routes\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { GetLinksResponseLink, OpenSettingsService } from \"../../services/open-settings.service\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { LicenseUpgradeComponent } from \"../../../features/licenses/license-upgrade/license-upgrade.component\";\r\nimport { LicenseViewComponent } from \"../../../features/licenses/license-view/license-view.component\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    templateUrl: './default-layout.component.html',\r\n    styleUrls: ['./default-layout.component.css']\r\n})\r\nexport class DefaultLayoutComponent implements OnInit, OnDestroy {\r\n    ROUTES = DEFAULT_ROUTES;\r\n\r\n    documentTitle?: string;\r\n    providerInfo?: ProviderInfo;\r\n    isProvider?: boolean;\r\n    route?: string;\r\n    appIcon?: string;\r\n    menuOpened: boolean = false;\r\n    bugReport: GetLinksResponseLink = { url: '', isActive: false };\r\n    license?: License;\r\n    subtitle?: string;\r\n\r\n    private subscriptions: Subscription = new Subscription();\r\n\r\n    constructor(\r\n        private windowService: WindowService,\r\n        private defaultLayoutService: DefaultLayoutService,\r\n        private openSettingsService: OpenSettingsService,\r\n        private matDialog: MatDialog,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.subscriptions.add(this.defaultLayoutService.menuOpened$.subscribe(menuOpened => this.menuOpened = menuOpened));\r\n\r\n        this.route = this.windowService.controllerOptions.route;\r\n        this.providerInfo = this.windowService.providerInfo;\r\n        this.documentTitle = this.windowService.documentTitle;\r\n        this.isProvider = this.windowService.isProvider;\r\n\r\n        this.subtitle = this.windowService.serviceType;\r\n\r\n        if(this.windowService.dataAccessType) {\r\n            this.subtitle += ` (${this.windowService.dataAccessType}:${this.windowService.dbProviderName})`;\r\n        }\r\n\r\n        this.subtitle += ` v${this.windowService.packVersion}`;\r\n\r\n        const licenseSubscription = this.windowService.license$.subscribe((license) => {\r\n\r\n            if(license.edition !== LicenseEdition.Community && this.router.url === `/${this.ROUTES.sponsors}`) {\r\n                this.router.navigate(['/']);\r\n            }\r\n                \r\n            this.license = license;\r\n        });\r\n\r\n        this.subscriptions.add(licenseSubscription);\r\n\r\n        const linksSubscription = this.openSettingsService.getLinks().subscribe(response => {\r\n\r\n            const bugReport = response['bugReport'];\r\n\r\n            if (bugReport) {\r\n                this.bugReport.url = bugReport.url;\r\n                this.bugReport.isActive = bugReport.isActive;\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(linksSubscription);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subscriptions.unsubscribe();\r\n    }\r\n\r\n    toggleMenu() {\r\n        this.defaultLayoutService.toggleMenu();\r\n    }\r\n\r\n    upgradeLicense() {\r\n        const subscription = this.matDialog.open(LicenseUpgradeComponent, {\r\n            width: '500px',\r\n            height: '265px',\r\n            minWidth: 'inherit',\r\n            maxWidth: 'inherit',\r\n            autoFocus: false\r\n        }).afterClosed().subscribe((response) => {\r\n\r\n            if(response){\r\n                this.viewLicense();\r\n            }\r\n\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    viewLicense(){\r\n        this.matDialog.open(LicenseViewComponent, {\r\n            width: '580px',\r\n            height: '490px',\r\n            minWidth: 'inherit',\r\n            maxWidth: 'inherit',\r\n            autoFocus: false\r\n        });\r\n    }\r\n}","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #snav class=\"sidebar\" opened=\"true\" mode=\"side\" [style.width]=\"menuOpened ? '175px' : '58px'\" disableClose=\"true\">\r\n    <mat-nav-list class=\"nav-list mat-toolbar mat-primary menu pb-0\">\r\n      <div class=\"d-flex nav-list-content\">\r\n        <button mat-icon-button (click)=\"toggleMenu()\">\r\n          <mat-icon fontIcon=\"menu\"></mat-icon>\r\n        </button>\r\n        <p class=\"nav-list-menu\">Menu</p>\r\n      </div>\r\n    </mat-nav-list>\r\n    <mat-nav-list>\r\n      <mat-list-item [routerLink]=\"ROUTES.base\"routerLinkActive=\"nav-item-active\" [routerLinkActiveOptions]=\"{ exact: true }\" matTooltip=\"Apps\" matTooltipPosition=\"right\" matTooltipDisabled=\"{{menuOpened}}\"> Apps\r\n        <mat-icon matListItemIcon>dashboard</mat-icon>\r\n      </mat-list-item>\r\n      <mat-list-item [routerLink]=\"ROUTES.groups\" routerLinkActive=\"nav-item-active\" matTooltip=\"Groups\" matTooltipPosition=\"right\" matTooltipDisabled=\"{{menuOpened}}\" *ngIf=\"isProvider\"> Groups\r\n        <mat-icon matListItemIcon>workspaces</mat-icon>\r\n      </mat-list-item>\r\n      <mat-list-item [routerLink]=\"ROUTES.identifiers\" routerLinkActive=\"nav-item-active\" matTooltip=\"Identifiers\" matTooltipPosition=\"right\" matTooltipDisabled=\"{{menuOpened}}\" *ngIf=\"isProvider\"> Identifiers\r\n        <mat-icon matListItemIcon>local_library</mat-icon>\r\n      </mat-list-item>\r\n      <mat-list-item [routerLink]=\"ROUTES.tags\" routerLinkActive=\"nav-item-active\" matTooltip=\"Tags\" matTooltipPosition=\"right\" matTooltipDisabled=\"{{menuOpened}}\" *ngIf=\"isProvider\"> Tags\r\n        <mat-icon matListItemIcon>tag</mat-icon>\r\n      </mat-list-item>\r\n    </mat-nav-list>\r\n\r\n    <div class=\"spacer\"></div>\r\n\r\n    <mat-divider></mat-divider>\r\n    <mat-nav-list>\r\n      <mat-list-item *ngIf=\"license?.edition === 100\" [routerLink]=\"ROUTES.sponsors\" routerLinkActive=\"nav-item-active\" matTooltip=\"Sponsors\" matTooltipPosition=\"right\" matTooltipDisabled=\"{{menuOpened}}\"> Sponsors\r\n        <mat-icon matListItemIcon fontIcon=\"favorite\"></mat-icon>\r\n      </mat-list-item>\r\n      <a *ngIf=\"bugReport.isActive && bugReport.url\" [href]=\"bugReport.url\" target=\"_blank\" class=\"text-decoration-none\">\r\n        <mat-list-item matTooltip=\"Bug report\" matTooltipPosition=\"right\" matTooltipDisabled=\"{{menuOpened}}\"> Bug report\r\n          <mat-icon matListItemIcon fontIcon=\"bug_report\"></mat-icon>\r\n        </mat-list-item>\r\n      </a>\r\n      <mat-list-item [routerLink]=\"ROUTES.about\" routerLinkActive=\"nav-item-active\" matTooltip=\"About\" matTooltipPosition=\"right\" matTooltipDisabled=\"{{menuOpened}}\"> About\r\n        <mat-icon matListItemIcon>info</mat-icon>\r\n      </mat-list-item>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content [style.margin-left]=\"menuOpened ? '175px' : '58px'\">\r\n    <mat-toolbar color=\"primary\" class=\"toolbar\">\r\n      <span class=\"ml-1\">{{ documentTitle }}</span>\r\n      <span class=\"subtitle\">\r\n        <span>{{ subtitle }}</span>\r\n        <span class=\"edition\">{{license?.editionStringRepresentation}} Edition\r\n          <ng-container *ngIf=\"license?.referenceId; else upgrade\">\r\n            <button mat-icon-button matTooltip=\"Info\" (click)=\"viewLicense()\">\r\n              <mat-icon>info</mat-icon>\r\n            </button>\r\n          </ng-container>\r\n          \r\n          <ng-template #upgrade>\r\n            <button mat-icon-button matTooltip=\"Upgrade\" (click)=\"upgradeLicense()\">\r\n              <mat-icon>arrow_circle_up</mat-icon>\r\n            </button>\r\n          </ng-template>\r\n          \r\n        </span>\r\n      </span>\r\n      <span class=\"spacer\"></span>\r\n      <app-account-menu></app-account-menu>\r\n    </mat-toolbar>\r\n\r\n    <div class=\"pt-2\">\r\n      <router-outlet></router-outlet>\r\n      <p class=\"brand-watermark\" *ngIf=\"license?.holder\">{{license?.holder}}</p>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n\r\n <!-- Account Menu Dropdown -->\r\n <!-- <mat-menu #accountMenu=\"matMenu\">\r\n  <button mat-menu-item disabled>\r\n    <div class=\"account-info\">\r\n      <div class=\"username\">Oğulcan TURAN</div>\r\n      <small>ismetogulcanturan&#64;gmail.com</small>\r\n    </div>\r\n  </button>\r\n  <mat-divider></mat-divider>\r\n  <button mat-menu-item (click)=\"logout()\">\r\n    <mat-icon>logout</mat-icon>\r\n    <span>Logout</span>\r\n  </button>\r\n</mat-menu> -->","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { authGuard } from \"../../../core/guards/auth.guard\";\r\nimport { DefaultLayoutComponent } from \"./default-layout.component\";\r\nimport { DEFAULT_ROUTES } from \"./default-layout-routes\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DefaultLayoutComponent,\r\n        canActivateChild: [authGuard],\r\n        children: [\r\n            { path: DEFAULT_ROUTES.base, loadChildren: () => import('../../../features/app/app.module').then(m => m.AppModule) },\r\n            { path: DEFAULT_ROUTES.about, loadChildren: () => import('../../../features/about/about.module').then(m => m.AboutModule) },\r\n            { path: DEFAULT_ROUTES.groups, loadChildren: () => import('../../../features/group/app-group.module').then(m => m.GroupModule) },\r\n            { path: DEFAULT_ROUTES.identifiers, loadChildren: () => import('../../../features/identifier/identifier.module').then(m => m.IdentifierModule) },\r\n            { path: DEFAULT_ROUTES.tags, loadChildren: () => import('../../../features/tag/tag.module').then(m => m.TagModule) },\r\n            { path: DEFAULT_ROUTES.sponsors, loadChildren: () => import('../../../features/sponsor/sponsor.module').then(m => m.SponsorModule) },\r\n            { path: '**', redirectTo: DEFAULT_ROUTES.redirectTo }\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class DefaultLayoutRoutingModule { }","import { NgModule } from \"@angular/core\";\r\nimport { ConfirmationDialogComponent } from \"./confirmation-dialog.component\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ConfirmationDialogComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule\r\n    ]\r\n})\r\nexport class ConfirmationDialogModule { }","import { NgModule } from \"@angular/core\";\r\nimport { AccountMenuComponent } from \"./account-menu.component\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatBadgeModule } from \"@angular/material/badge\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { SharedModule } from \"../../shared.module\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { LicenseUpgradeModule } from \"../../../features/licenses/license-upgrade/license-upgrade.module\";\r\n\r\n@NgModule({\r\n    declarations: [AccountMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        MatButtonModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatBadgeModule,\r\n        MatTooltipModule,\r\n        MatCardModule\r\n    ],\r\n    exports: [AccountMenuComponent]\r\n})\r\nexport class AccountMenuModule { }","import { NgModule } from \"@angular/core\";\r\nimport { LicenseUpgradeComponent } from \"./license-upgrade.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LicenseUpgradeComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n        MatFormFieldModule,\r\n        MatInputModule\r\n    ]\r\n})\r\nexport class LicenseUpgradeModule { }","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { LicenseViewComponent } from \"./license-view.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { LicenseUpgradeModule } from \"../license-upgrade/license-upgrade.module\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LicenseViewComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        LicenseUpgradeModule\r\n    ]\r\n})\r\nexport class LicenseViewModule { }","import { NgModule } from \"@angular/core\";\r\nimport { DefaultLayoutComponent } from \"./default-layout.component\";\r\nimport { DefaultLayoutRoutingModule } from \"./default-layout-routing.module\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { ConfirmationDialogModule } from \"../../components/confirmation-dialog/confirmation-dialog.module\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { AccountMenuModule } from \"../../components/account-menu/account-menu.module\";\r\nimport { LicenseViewModule } from \"../../../features/licenses/license-view/license-view.module\";\r\n\r\n@NgModule({\r\n    declarations: [DefaultLayoutComponent],\r\n    imports: [\r\n        CommonModule,\r\n        DefaultLayoutRoutingModule,\r\n        AccountMenuModule,\r\n        ConfirmationDialogModule,\r\n        MatSidenavModule,\r\n        MatListModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        MatTooltipModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        LicenseViewModule\r\n    ]\r\n})\r\nexport class DefaultLayoutModule { }"],"mappings":"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","names":["NotificationType","NotificationSource","_c0","_c1","_c0","_c1","_c0"],"x_google_ignoreList":[6,7]}