{
  "version": 3,
  "sources": ["src/app/features/about/about.component.ts", "src/app/features/about/about.component.html", "src/app/features/about/about-routing.module.ts", "src/app/features/about/about.module.ts"],
  "sourcesContent": ["import { Component, OnInit } from \"@angular/core\";\r\nimport { License, WindowService } from \"../../core/services/window.service\";\r\nimport { GetLinksResponseLink, OpenSettingsService } from \"../../shared/services/open-settings.service\";\r\nimport { filter, Subscription, switchMap, tap } from \"rxjs\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { ConfirmationDialogComponentModel } from \"../../shared/components/confirmation-dialog/confirmation-dialog-component.model\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { ConfirmationDialogComponent } from \"../../shared/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { LicensesService } from \"../licenses/services/licenses.service\";\r\nimport { LicenseUpgradeComponent } from \"../licenses/license-upgrade/license-upgrade.component\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n@Component({\r\n    templateUrl: './about.component.html',\r\n    styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n    isProvider: boolean = false;\r\n    providerInfo: any;\r\n    packVersion?: string;\r\n    version?: string;\r\n    clientName?: string;\r\n    releaseNotes: GetLinksResponseLink = { url: '', isActive: false };\r\n    displayedColumns: string[] = ['key', 'value'];\r\n    appDataSource: { key: string, value: string }[] = [];\r\n    providerDataSource: { key: string, value: string }[] = [];\r\n    licenseDataSource: { key: string, value: string }[] = [];\r\n    license?: License;\r\n\r\n    private subscriptions: Subscription = new Subscription();\r\n\r\n    constructor(\r\n        private windowService: WindowService,\r\n        private openSettingsService: OpenSettingsService,\r\n        private licensesService: LicensesService,\r\n        private datePipe: DatePipe,\r\n        private dialog: MatDialog,\r\n        private snackBar: MatSnackBar) { }\r\n\r\n    ngOnInit(): void {\r\n        this.isProvider = this.windowService.isProvider;\r\n        this.providerInfo = this.windowService.providerInfo;\r\n        this.packVersion = this.windowService.packVersion;\r\n        this.version = this.windowService.version;\r\n        this.clientName = this.windowService.clientName;\r\n\r\n\r\n        this.appDataSource = [\r\n            { key: 'Name', value: this.clientName },\r\n            { key: 'Version', value: 'v' + this.version },\r\n            { key: 'OpenSettings Pack Version', value: 'v' + this.packVersion }\r\n        ];\r\n\r\n        this.providerDataSource = [\r\n            { key: 'Name', value: this.providerInfo.clientName },\r\n            { key: 'Version', value: 'v' + this.providerInfo.version },\r\n            { key: 'OpenSettings Pack Version', value: 'v' + this.providerInfo.packVersion }\r\n        ]\r\n\r\n        const licenseSubscription = this.windowService.license$.subscribe((license) => {\r\n            this.license = license;\r\n\r\n            this.initializeLicenseDataSource();\r\n        });\r\n\r\n        this.subscriptions.add(licenseSubscription);\r\n\r\n        const subscription = this.openSettingsService.getLinks().subscribe(response => {\r\n\r\n            const releaseNotes = response['releaseNotes'];\r\n\r\n            if (releaseNotes) {\r\n                this.releaseNotes.url = releaseNotes.url;\r\n                this.releaseNotes.isActive = releaseNotes.isActive;\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    initializeLicenseDataSource() {\r\n\r\n        this.licenseDataSource = [];\r\n\r\n        if (!this.license) {\r\n            return;\r\n        }\r\n\r\n        if (this.license.holder) {\r\n            this.licenseDataSource.push({ key: 'Holder', value: this.license.holder });\r\n        }\r\n\r\n        if (this.license.referenceId) {\r\n            this.licenseDataSource.push({ key: 'Reference Id', value: this.license.referenceId });\r\n        }\r\n\r\n        if (this.license.edition) {\r\n            this.licenseDataSource.push({ key: 'Edition', value: this.license.editionStringRepresentation });\r\n        }\r\n\r\n        if (this.license.issuedAt) {\r\n            this.licenseDataSource.push({ key: 'Activated On', value: this.datePipe.transform(this.license.issuedAt, 'dd-MM-yyyy HH:mm') ?? '' });\r\n        }\r\n\r\n        if (this.license.expiryDate) {\r\n            this.licenseDataSource.push({ key: 'Expiry Date', value: this.datePipe.transform(this.license.expiryDate, 'dd-MM-yyyy HH:mm') ?? '' });\r\n        }\r\n\r\n        this.licenseDataSource.push({ key: 'Status', value: this.license.isExpired ? 'Inactive' : 'Active' });\r\n    }\r\n\r\n    viewReleaseNotes(version?: string) {\r\n\r\n        if (version) {\r\n            return this.releaseNotes.url.replace(\"%(Version)\", version);\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    upgradeLicense() {\r\n            this.dialog.open(LicenseUpgradeComponent, {\r\n                width: '500px',\r\n                height: '265px',\r\n                minWidth: 'inherit',\r\n                maxWidth: 'inherit',\r\n                autoFocus: false\r\n            });\r\n        }\r\n\r\n    deleteLicense() {\r\n\r\n        const referenceId = this.license?.referenceId;\r\n\r\n        if (!referenceId) {\r\n            return;\r\n        }\r\n\r\n        const title = 'Confirm delete';\r\n        const message = `Are you sure you want to delete the '${referenceId}' license? This action cannot be undone.`;\r\n\r\n        const confirmationDialogComponentModel: ConfirmationDialogComponentModel = {\r\n            title,\r\n            message,\r\n            requireConfirmation: true\r\n        };\r\n\r\n        const subscription = this.dialog\r\n            .open(ConfirmationDialogComponent, {\r\n                width: '500px',\r\n                data: confirmationDialogComponentModel\r\n            })\r\n            .afterClosed()\r\n            .pipe(\r\n                filter(result => !!result),\r\n                switchMap(() => this.licensesService.deleteLicense(referenceId)),\r\n                switchMap(() => this.licensesService.getCurrentLicense())\r\n            )\r\n            .subscribe({\r\n                next: (response) => {\r\n\r\n                    const currentLicense = response.data as License;\r\n\r\n                    if (!currentLicense) {\r\n                        return;\r\n                    }\r\n\r\n                    const initialLicense = this.windowService.license;\r\n\r\n                    const licenseUpdateMessage = this.licensesService.getLicenseUpdateMessage(initialLicense, currentLicense);\r\n\r\n                    this.windowService.updateLicense(currentLicense);\r\n\r\n                    this.snackBar.open(licenseUpdateMessage.message, 'Close', {\r\n                        horizontalPosition: 'right',\r\n                        verticalPosition: 'top',\r\n                        duration: licenseUpdateMessage.duration\r\n                    });\r\n                }\r\n            });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n}", "<div class=\"px-3\">\r\n  <div class=\"title mb-3\">\r\n    <h1>About</h1>\r\n  </div>\r\n\r\n  <mat-card>\r\n    <mat-card-header class=\"mb-2\">\r\n      <mat-card-title class=\"card-title\">Application Information</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <table mat-table [dataSource]=\"appDataSource\">\r\n        <ng-container matColumnDef=\"key\">\r\n          <th mat-header-cell *matHeaderCellDef>Attribute</th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"font-weight-500 w-50\">{{ element.key }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"value\">\r\n          <th mat-header-cell *matHeaderCellDef>Value</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.value }}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions align=\"end\" *ngIf=\"releaseNotes.isActive && releaseNotes.url\">\r\n      <a mat-button color=\"primary\" [href]=\"viewReleaseNotes(packVersion)\" target=\"_blank\">View Release Notes</a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card *ngIf=\"!isProvider\" class=\"mt-3\">\r\n    <mat-card-header class=\"mb-2\">\r\n      <mat-card-title class=\"card-title\">Provider Information</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <table mat-table [dataSource]=\"providerDataSource\">\r\n        <ng-container matColumnDef=\"key\">\r\n          <th mat-header-cell *matHeaderCellDef>Attribute</th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"font-weight-500 w-50\">{{ element.key }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"value\">\r\n          <th mat-header-cell *matHeaderCellDef>Value</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.value }}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions align=\"end\" *ngIf=\"releaseNotes.isActive && releaseNotes.url\">\r\n      <a mat-button color=\"primary\" [href]=\"viewReleaseNotes(providerInfo.packVersion)\" target=\"_blank\">View Release\r\n        Notes</a>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"mt-3\">\r\n    <mat-card-header class=\"mb-2\">\r\n      <mat-card-title class=\"card-title w-100 d-flex\">\r\n        <span>License Information</span>\r\n        <span class=\"spacer\"></span>\r\n        <mat-icon matIconPosition=\"right\" fontIcon=\"info\"\r\n          matTooltip=\"It shows the current license. Only active license will be shown here. If multiple licenses added, the highest edition with the longest expiry date takes precedence.\"\r\n          matTooltipPosition=\"below\">\r\n        </mat-icon>\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content>\r\n      <table mat-table [dataSource]=\"licenseDataSource\">\r\n        <ng-container matColumnDef=\"key\">\r\n          <th mat-header-cell *matHeaderCellDef>Attribute</th>\r\n          <td mat-cell *matCellDef=\"let element\" class=\"font-weight-500 w-50\">{{ element.key }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"value\">\r\n          <th mat-header-cell *matHeaderCellDef>Value</th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.value }}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions align=\"end\">\r\n      <button mat-button color=\"primary mr-3\" (click)=\"upgradeLicense()\">{{license?.edition === 500 ? 'Re-new' : 'Upgrade'}}</button>\r\n      <button mat-button color=\"warn\" (click)=\"deleteLicense()\" *ngIf=\"license?.referenceId\">Delete</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n</div>", "import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AboutComponent } from \"./about.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: AboutComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AboutRoutingModule { }", "import { NgModule } from '@angular/core';\r\nimport { AboutComponent } from './about.component';\r\nimport { AboutRoutingModule } from './about-routing.module';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AboutComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AboutRoutingModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n  ],\r\n  providers: [DatePipe]\r\n})\r\nexport class AboutModule { }"],
  "mappings": "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",
  "names": []
}
