{
  "version": 3,
  "sources": ["src/app/shared/components/conflict-resolver-dialog/conflict-resolver-dialog.component.ts", "src/app/shared/components/conflict-resolver-dialog/conflict-resolver-dialog.component.html", "src/app/features/sponsor/models/set-order-position.enum.ts", "src/app/shared/components/dummy/dummy-component.service.ts", "src/app/shared/components/dummy/dummy.component.ts"],
  "sourcesContent": ["import { Component, Inject } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\r\n\r\nexport type ConflictResolverReturnType = 'Override' | 'Recreate' | 'Discard' | 'Fetch Latest'\r\n\r\n@Component({\r\n    templateUrl: './conflict-resolver-dialog.component.html'\r\n})\r\nexport class ConflictResolverDialogComponent {\r\n\r\n    overrideBtnEnabled: boolean;\r\n    recreateBtnEnabled: boolean;\r\n    discardBtnEnabled: boolean;\r\n    fetchLatestBtnEnabled: boolean;\r\n\r\n    title: string = 'Conflict occurred';\r\n    actionText: string = 'Please select your action';\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<ConfirmationDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public availableReturnTypes: ConflictResolverReturnType[]\r\n    ) {\r\n        this.overrideBtnEnabled = availableReturnTypes.includes(\"Override\");\r\n        this.recreateBtnEnabled = availableReturnTypes.includes(\"Recreate\");\r\n        this.discardBtnEnabled = availableReturnTypes.includes(\"Discard\");\r\n        this.fetchLatestBtnEnabled = availableReturnTypes.includes(\"Fetch Latest\");\r\n    }\r\n\r\n\r\n    onSubmit(returnType: ConflictResolverReturnType) {\r\n        this.dialogRef.close(returnType);\r\n    }\r\n}", "<h1 mat-dialog-title>{{ title }}</h1>\r\n<div mat-dialog-content>\r\n  <p [innerHTML]=\"recreateBtnEnabled ? 'The data is no longer exists.' : 'The data has been updated since you last opened it.'\"></p>\r\n\r\n    <div>\r\n      <p>{{ actionText }}</p>\r\n    </div>\r\n\r\n    <div mat-dialog-actions>\r\n      <button mat-button (click)=\"onSubmit('Discard')\" matTooltip=\"Do nothing.\" *ngIf=\"discardBtnEnabled\">Discard</button>\r\n      <button mat-raised-button (click)=\"onSubmit('Override')\" color=\"warn\" type=\"submit\" matTooltip=\"Replace existing data with your changes.\" *ngIf=\"overrideBtnEnabled\">Override</button>\r\n      <button mat-raised-button (click)=\"onSubmit('Recreate')\" color=\"primary\" type=\"submit\" matToolTip=\"\" *ngIf=\"recreateBtnEnabled\">Recreate</button>\r\n      <button mat-raised-button (click)=\"onSubmit('Fetch Latest')\" color=\"warn\" type=\"submit\" matTooltip=\"You'll lose your changes if any.\" *ngIf=\"fetchLatestBtnEnabled\">Fetch Latest</button>\r\n    </div>\r\n</div>", "export enum SetSortOrderPosition{\r\n    Manual = -1,\r\n    Bottom = 1,\r\n    Top = 2\r\n}", "import { Injectable } from \"@angular/core\";\r\nimport { DummyComponentServiceModel } from \"./dummy-component-service.model\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DummyComponentService {\r\n    private eventSubject = new BehaviorSubject<DummyComponentServiceModel | undefined>(undefined);\r\n    event$ = this.eventSubject.asObservable();\r\n\r\n    emitEvent(model: DummyComponentServiceModel | undefined) {\r\n        this.eventSubject.next(model);\r\n    }\r\n}", "import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { DummyComponentService } from \"./dummy-component.service\";\r\n\r\n@Component({\r\n    selector: 'app-dummy-parent',\r\n    template: '<router-outlet></router-outlet>'\r\n})\r\nexport class DummyComponent implements OnInit, OnDestroy {\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private dummyComponentService: DummyComponentService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        const path = this.route.snapshot.data['path'] as string;\r\n        const data = this.route.snapshot.data['data'] as any;\r\n\r\n        if (path) {\r\n            this.dummyComponentService.emitEvent({\r\n                path: path,\r\n                data: data,\r\n                activatedSnapshot: this.route.snapshot,\r\n                activatedRoute: this.route\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.dummyComponentService.emitEvent(undefined);\r\n    }\r\n}"],
  "mappings": "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",
  "names": ["SetSortOrderPosition"]
}
