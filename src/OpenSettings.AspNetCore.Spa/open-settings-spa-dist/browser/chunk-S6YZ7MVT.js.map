{
  "version": 3,
  "sources": ["src/app/features/sponsor/components/sponsor-list/sponsor-list.component.ts", "src/app/features/sponsor/components/sponsor-list/sponsor-list.component.html", "src/app/features/sponsor/sponsor.guard.ts", "src/app/features/sponsor/sponsor-routing.module.ts", "src/app/features/sponsor/sponsor.module.ts"],
  "sourcesContent": ["import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatAccordion } from \"@angular/material/expansion\";\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { WindowService } from \"../../../../core/services/window.service\";\r\nimport { BecomeSponsorLink } from \"../../models/become-sponsor-link.model\";\r\nimport { ClassIdMappings } from \"../../models/class-id-mappings.model\";\r\nimport { GetSponsorsResponse } from \"../../models/get-sponsors-response.model\";\r\nimport { Sponsor } from \"../../models/sponsor.model\";\r\nimport { ConfirmationDialogComponent } from \"../../../../shared/components/confirmation-dialog/confirmation-dialog.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { MatMenu, MatMenuTrigger } from \"@angular/material/menu\";\r\nimport { OpenSettingsService } from \"../../../../shared/services/open-settings.service\";\r\n\r\n@Component({\r\n    templateUrl: './sponsor-list.component.html',\r\n    styleUrls: ['./sponsor-list.component.css']\r\n})\r\nexport class SponsorListComponent implements OnInit {\r\n    @ViewChild(MatAccordion) accordion!: MatAccordion;\r\n    @ViewChild(MatMenuTrigger) matMenuTrigger?: MatMenuTrigger;\r\n\r\n    subscriptions: Subscription = new Subscription();\r\n    packVersion?: string;\r\n\r\n    selectedStatusFilter: number | null = 1;\r\n    selectedVersionFilter: number = 1;\r\n    selectedClassFilter: number | null = null;\r\n\r\n    failedToFetchLatestVersion: boolean = false;\r\n    isRawDataFromService: boolean = false;\r\n    hasAnySponsors: boolean = true;\r\n    hasPastSponsors: boolean = true;\r\n    isLoading: boolean = false;\r\n\r\n    selectedRawResponseData: GetSponsorsResponse = {\r\n        becomeSponsorLinks: [],\r\n        classIdMappings: {},\r\n        frequencyIdMappings: {},\r\n        sponsors: []\r\n    };\r\n    rawResponseDataFromFallback: GetSponsorsResponse | null = null;\r\n    rawResponseDataFromService: GetSponsorsResponse | null = null;\r\n    filteredSponsors: { [key: number]: Sponsor[] } = {};\r\n\r\n    constructor(\r\n        private openSettingsService: OpenSettingsService,\r\n        private iconRegistry: MatIconRegistry,\r\n        private sanitizer: DomSanitizer,\r\n        private windowService: WindowService,\r\n        private dialog: MatDialog\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.packVersion = this.windowService.packVersion;\r\n\r\n        this.startFetching();\r\n\r\n        const subscription = this.openSettingsService.getSponsors().subscribe({\r\n            next: (response) => {\r\n                this.failedToFetchLatestVersion = response.fromFallback;\r\n                this.selectedRawResponseData = response.data;\r\n\r\n                if (this.failedToFetchLatestVersion) {\r\n                    this.rawResponseDataFromFallback = { ...response.data };\r\n                    this.isRawDataFromService = false;\r\n                    this.selectedVersionFilter = 0;\r\n                } else {\r\n                    this.rawResponseDataFromService = { ...response.data };\r\n                    this.isRawDataFromService = true;\r\n                }\r\n\r\n                this.handleClassIdMappings(response.data.classIdMappings);\r\n                this.handleBecomeSponsorLinks(response.data.becomeSponsorLinks);\r\n                this.reloadData();\r\n            },\r\n            error: () => {\r\n                this.stopFetching();\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    filterSponsorsVersion(): void {\r\n\r\n        if (this.selectedVersionFilter === 1 && this.rawResponseDataFromService && !this.isRawDataFromService) {\r\n            this.switchToVersionData(this.rawResponseDataFromService);\r\n        } else if (this.selectedVersionFilter === 0 && this.rawResponseDataFromFallback && this.isRawDataFromService) {\r\n            this.switchToVersionData(this.rawResponseDataFromFallback);\r\n        } else if (this.selectedVersionFilter === 0 && !this.rawResponseDataFromFallback) {\r\n            this.fetchFallbackSponsors();\r\n        } else {\r\n            this.reloadData();\r\n        }\r\n    }\r\n\r\n    switchToVersionData(versionData: GetSponsorsResponse) {\r\n        this.selectedRawResponseData = { ...versionData };\r\n        this.isRawDataFromService = !this.isRawDataFromService;\r\n        this.handleClassIdMappings(versionData.classIdMappings);\r\n        this.handleBecomeSponsorLinks(versionData.becomeSponsorLinks);\r\n        this.reloadData();\r\n    }\r\n\r\n    fetchFallbackSponsors(): void {\r\n        const subscription = this.openSettingsService.getSponsorsFromFallback().subscribe((response) => {\r\n            this.rawResponseDataFromFallback = { ...response.data };\r\n            this.switchToVersionData(response.data);\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    startFetching() {\r\n        this.isLoading = true;\r\n    }\r\n\r\n    stopFetching() {\r\n        this.isLoading = false;\r\n    }\r\n\r\n    reloadData(): void {\r\n\r\n        let sponsors = this.selectedRawResponseData.sponsors;\r\n\r\n        this.hasPastSponsors = sponsors.some(s => !s.isActive);\r\n\r\n        if (this.selectedStatusFilter !== null) {\r\n            sponsors = sponsors.filter(s => this.selectedStatusFilter === 1 ? s.isActive : !s.isActive);\r\n        }\r\n\r\n        if (this.selectedClassFilter !== null) {\r\n            sponsors = sponsors.filter(s => s.classId == this.selectedClassFilter);\r\n        }\r\n\r\n        this.filteredSponsors = this.groupAndSortSponsors(sponsors);\r\n        this.hasAnySponsors = Object.keys(this.filteredSponsors).length > 0;\r\n\r\n        this.stopFetching();\r\n    }\r\n\r\n    groupAndSortSponsors(sponsors: Sponsor[]): { [key: number]: Sponsor[] } {\r\n        const groupedSponsors = sponsors\r\n            .sort((a, b) => a.classId - b.classId)\r\n            .reduce((acc, sponsor) => {\r\n                const classKey = sponsor.classId;\r\n                if (!acc[classKey]) acc[classKey] = [];\r\n                acc[classKey].push(sponsor);\r\n                return acc;\r\n            }, {} as { [key: number]: Sponsor[] });\r\n\r\n        for (const key in groupedSponsors) {\r\n            if (Object.prototype.hasOwnProperty.call(groupedSponsors, key)) {\r\n                groupedSponsors[key].sort((a, b) => {\r\n                    if (a.isActive !== b.isActive) {\r\n                        return a.isActive ? -1 : 1;\r\n                    }\r\n                    return a.sortOrder - b.sortOrder;\r\n                });\r\n            }\r\n        }\r\n\r\n        return groupedSponsors;\r\n    }\r\n\r\n    handleClassIdMappings(classIdMappings: ClassIdMappings): void {\r\n        Object.values(classIdMappings).forEach(model => {\r\n            if (model.svgIconDef && model.iconName) {\r\n                this.iconRegistry.addSvgIconLiteral(model.iconName, this.sanitizer.bypassSecurityTrustHtml(model.svgIconDef));\r\n            }\r\n        });\r\n    }\r\n\r\n    handleBecomeSponsorLinks(becomeSponsorLinks: BecomeSponsorLink[]): void {\r\n        becomeSponsorLinks.forEach(link => {\r\n            if (link.svgIconDef && link.iconName) {\r\n                this.iconRegistry.addSvgIconLiteral(link.iconName, this.sanitizer.bypassSecurityTrustHtml(link.svgIconDef));\r\n            }\r\n        });\r\n    }\r\n\r\n    confirmationRequiredToOpenLink(url: string, event: Event) {\r\n\r\n        event.preventDefault();\r\n\r\n        const title = 'Warn!';\r\n        const message = `You are about to navigating to an external website. Do you want to proceed? <br /><br />Url: <small><q>${url}</q></small>`;\r\n\r\n        const subscription = this.dialog.open(ConfirmationDialogComponent, {\r\n            width: '500px',\r\n            data: { title, message }\r\n        }).afterClosed().subscribe(result => {\r\n            if (result) {\r\n                this.openLink(url);\r\n            }\r\n        });\r\n\r\n        this.subscriptions.add(subscription);\r\n    }\r\n\r\n    openLink(url: string): void {\r\n        window.open(url, '_blank');\r\n    }\r\n\r\n    clearFilter(): void {\r\n        this.selectedStatusFilter = null;\r\n        this.selectedClassFilter = null;\r\n\r\n        if (!this.failedToFetchLatestVersion) {\r\n            this.selectedVersionFilter = 1;\r\n            this.filterSponsorsVersion();\r\n        } else {\r\n            this.reloadData();\r\n        }\r\n    }\r\n\r\n    expandAll(): void {\r\n        this.accordion.openAll();\r\n    }\r\n\r\n    collapseAll(): void {\r\n        this.accordion.closeAll();\r\n    }\r\n}", "<div class=\"px-3\">\r\n    <div class=\"title mb-3\">\r\n        <h1>Sponsors</h1>\r\n    </div>\r\n\r\n    <div class=\"d-flex\">\r\n        <mat-form-field appearance=\"outline\" class=\"w-25 mr-2 border-bottom-1\">\r\n            <mat-label>Filter by status</mat-label>\r\n            <mat-select [(ngModel)]=\"selectedStatusFilter\" #filterSelect (ngModelChange)=\"reloadData()\">\r\n                <mat-option [value]=\"1\">Current sponsors</mat-option>\r\n                <mat-option [value]=\"0\" *ngIf=\"hasPastSponsors\">Past sponsors</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" class=\"w-25 mr-2 border-bottom-1\">\r\n            <mat-label>Filter by version</mat-label>\r\n            <mat-select [(ngModel)]=\"selectedVersionFilter\" #filterSelect (ngModelChange)=\"filterSponsorsVersion()\">\r\n                <mat-option [value]=\"1\" [disabled]=\"failedToFetchLatestVersion\">{{ failedToFetchLatestVersion ? 'Latest (failed to fetch)' : 'Latest'}}</mat-option>\r\n                <mat-option [value]=\"0\">{{ 'v' + this.packVersion }}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"outline\" class=\"w-25 mr-2 border-bottom-1\">\r\n            <mat-label>Filter by class</mat-label>\r\n            <mat-select [(ngModel)]=\"selectedClassFilter\" #filterSelect (ngModelChange)=\"reloadData()\">\r\n                <mat-option *ngFor=\"let class of this.selectedRawResponseData.classIdMappings | keyvalue\"\r\n                    [value]=\"class.key\">{{class.value.name}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <button class=\"mt-2\" mat-stroked-button color=\"primary\" (click)=\"clearFilter()\"\r\n            *ngIf=\"selectedStatusFilter !== null || (selectedVersionFilter === 0 && !failedToFetchLatestVersion) || selectedClassFilter !== null\">\r\n            <mat-icon>clear</mat-icon>\r\n            Clear filter\r\n        </button>\r\n        <span class=\"spacer\"></span>\r\n        <button mat-icon-button matTooltip=\"Expand All\" (click)=\"expandAll()\"><mat-icon>expand_more</mat-icon></button>\r\n        <button mat-icon-button matTooltip=\"Collapse All\"\r\n            (click)=\"collapseAll()\"><mat-icon>expand_less</mat-icon></button>\r\n    </div>\r\n\r\n    <mat-accordion multi *ngIf=\"hasAnySponsors; else noSponsors\">\r\n        <mat-expansion-panel *ngFor=\"let entry of filteredSponsors | keyvalue\" expanded=\"true\">\r\n            <mat-expansion-panel-header>\r\n                <mat-panel-title>\r\n                    <span *ngIf=\"selectedRawResponseData.classIdMappings[entry.key] as mapping\"\r\n                        style=\"display: inline-flex; align-items: center;\">\r\n                        <mat-icon class=\"mr-2\" svgIcon=\"{{mapping.iconName}}\" *ngIf=\"mapping.svgIconDef; else matIcon\"></mat-icon>\r\n                        <ng-template #matIcon>\r\n                            <mat-icon class=\"mr-2\">{{ mapping.iconName !== '' ? mapping.iconName : 'coffee' }}</mat-icon>\r\n                        </ng-template>| {{ mapping.name }}\r\n                    </span>\r\n                </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n            <div class=\"card-container\">\r\n                <mat-card class=\"card-item mb-2\" appearance=\"outlined\" *ngFor=\"let sponsor of entry.value\" \r\n                    [ngClass]=\"{'past-sponsor': !sponsor.isActive}\">\r\n                    <div class=\"card-image-container\">\r\n                        <img mat-card-image [src]=\"sponsor.imageUrl\" [alt]=\"sponsor.name + ' IMG'\">\r\n                        <div class=\"card-overlay\">\r\n                            <mat-card-content style=\"padding:8px;\">\r\n                                {{sponsor.name}}\r\n                                <a class=\"card-link\" *ngIf=\"sponsor.url && sponsor.isActive\" [href]=\"sponsor.url\" (click)=\"confirmationRequiredToOpenLink(sponsor.url, $event)\" target=\"_blank\">\r\n                                    <mat-icon fontIcon=\"open_in_new\"></mat-icon>\r\n                                </a>\r\n                            </mat-card-content>\r\n                        </div>\r\n                    </div>\r\n                    <mat-icon *ngIf=\"sponsor.isActive\" class=\"position-absolute t-0 r-0 p-1\" [matTooltip]=\"'From ' + (sponsor.createdOn | date:'mediumDate')\" matTooltipPosition=\"above\">info</mat-icon>\r\n                </mat-card>\r\n            </div>\r\n\r\n        </mat-expansion-panel>\r\n    </mat-accordion>\r\n\r\n    <ng-template #noSponsors>\r\n            <button *ngIf=\"this.selectedStatusFilter !== 0\" color=\"\" [disabled] mat-fab extended matIconSuffix class=\"position-fixed b-0 r-0 mr-3 mb-3 l-0\" (click)=\"matMenuTrigger?.openMenu()\">\r\n                We currently don't have any sponsors{{this.selectedClassFilter === null ? '' : ' for this category'}}, but that's okay! Our mission goes beyond this. <mat-icon matIconSuffix fontIcon=\"mood\"></mat-icon>\r\n            </button>\r\n      </ng-template>\r\n\r\n</div>\r\n\r\n<button mat-fab extended class=\"position-fixed b-0 r-0 mr-3 mb-3\" color=\"primary\" matTooltip=\"Become a sponsor\"\r\n        [matMenuTriggerFor]=\"selectedRawResponseData.becomeSponsorLinks.length > 1 ? sponsorMenu : null\"\r\n        (click)=\"selectedRawResponseData.becomeSponsorLinks.length === 1 && openLink(selectedRawResponseData.becomeSponsorLinks[0].url)\">\r\n    Sponsor\r\n    <mat-icon>favorite</mat-icon>\r\n</button>\r\n\r\n<mat-menu #sponsorMenu=\"matMenu\">\r\n    <a mat-menu-item *ngFor=\"let link of selectedRawResponseData.becomeSponsorLinks\" [href]=\"link.url\" target=\"_blank\">\r\n        <span>{{ link.name }}</span>\r\n        <mat-icon svgIcon=\"{{link.iconName}}\" *ngIf=\"link.svgIconDef; else matIcon\"></mat-icon>\r\n        <ng-template #matIcon>\r\n            <mat-icon>{{ link.iconName !== '' ? link.iconName : 'favorite' }}</mat-icon>\r\n        </ng-template>\r\n    </a>\r\n</mat-menu>\r\n\r\n<mat-progress-bar  *ngIf=\"isLoading\" mode=\"indeterminate\"  class=\"position-fixed l-0 b-0\"></mat-progress-bar>", "import { inject } from \"@angular/core\";\r\nimport { CanActivateFn, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\r\nimport { WindowService } from \"../../core/services/window.service\";\r\n\r\nexport const sponsorGuard: CanActivateFn = (\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n) => {\r\n    const windowService = inject(WindowService);\r\n    const router = inject(Router);\r\n\r\n    if (windowService.license.edition === 100) {\r\n        return true;\r\n    }\r\n\r\n    router.navigate(['/']);\r\n\r\n    return false;\r\n};", "import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { SponsorListComponent } from \"./components/sponsor-list/sponsor-list.component\";\r\nimport { sponsorGuard } from \"./sponsor.guard\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', canActivate: [sponsorGuard], component: SponsorListComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: []\r\n})\r\nexport class SponsorRoutingModule { }", "import { NgModule } from '@angular/core';\r\nimport { SponsorListComponent } from './components/sponsor-list/sponsor-list.component';\r\nimport { SponsorRoutingModule } from './sponsor-routing.module';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SponsorListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SponsorRoutingModule,\r\n    FormsModule,\r\n    MatSelectModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatProgressBarModule,\r\n    MatTooltipModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class SponsorModule { }"],
  "mappings": "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",
  "names": []
}
